@import"//hello.myfonts.net/count/2c139a";@charset "UTF-8";html{font-size:22px}body{color:#333;line-height:1.5;font-family:URWGrotesk-Reg,sans-serif;margin-top:0;-webkit-font-smoothing:antialiased}h1,h2,h3,h4,h5,h6{font-size:22px;font-size:1rem;font-weight:400}ol{padding-left:66px;padding-left:3rem}li{margin-top:0;margin-bottom:0}p,ol,ul{padding-bottom:33px;padding-bottom:1.5rem}figure.wide{height:660px;overflow:hidden;width:100%}figure.wide img{width:100%;top:50%;left:50%;position:relative;-webkit-transform:translateY(-50%) translateX(-50%);-moz-transform:translateY(-50%) translateX(-50%);-ms-transform:translateY(-50%) translateX(-50%);-o-transform:translateY(-50%) translateX(-50%);transform:translateY(-50%) translateX(-50%)}\::-moz-selection{background:#fec057}\::selection{background:#fec057}.full{width:100%}.listOn ol li,ol.simpleList li{list-style-type:decimal;padding-left:5px;padding-left:.25rem;margin-left:-5px;margin-left:-.25rem}ol.simpleList li ol li{list-style-type:lower-alpha;padding-left:5px;padding-left:.25rem;margin-left:-5px;margin-left:-.25rem}ol.simpleList li ol li ol li{list-style-type:lower-roman;padding-left:5px;padding-left:.25rem;margin-left:-5px;margin-left:-.25rem}.listOn ul li,ul.simpleList li{list-style-type:disc;padding-left:5px;padding-left:.25rem;margin-left:-5px;margin-left:-.25rem}ul.simpleList li ul li{list-style-type:circle;padding-left:5px;padding-left:.25rem;margin-left:-5px;margin-left:-.25rem}ol.listSpace li{padding-top:33px;padding-top:1.5rem}input,textarea{width:100%}.bold,strong{font-weight:700}.normal{font-weight:300}.italic{font-style:italic!important}.upcase,.upCase,.caps{text-transform:uppercase}.inherit{font-size:inherit}.textCenter,.textC{text-align:center}.textLeft,.textL{text-align:left}.textRight,.textR{text-align:right}.indent{text-indent:66px;text-indent:3rem}*{margin:0;padding:0}html{-moz-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-moz-box-sizing:inherit;box-sizing:inherit}body{margin:0}a{text-decoration:none}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:URWGrotesk-Reg;src:url(/webfonts/2C139A_24_0.eot);src:url(/webfonts/2C139A_24_0.eot?#iefix) format("embedded-opentype"),url(/webfonts/2C139A_24_0.woff) format("woff"),url(/webfonts/2C139A_24_0.ttf) format("truetype")}@font-face{font-family:URWGrotesk-RegIta;src:url(/webfonts/2C139A_2C_0.eot);src:url(/webfonts/2C139A_2C_0.eot?#iefix) format("embedded-opentype"),url(/webfonts/2C139A_2C_0.woff) format("woff"),url(/webfonts/2C139A_2C_0.ttf) format("truetype")}@font-face{font-family:URWGrotesk-Bol;src:url(/webfonts/2C139A_37_0.eot);src:url(/webfonts/2C139A_37_0.eot?#iefix) format("embedded-opentype"),url(/webfonts/2C139A_37_0.woff) format("woff"),url(/webfonts/2C139A_37_0.ttf) format("truetype")}@font-face{font-family:URWGrotesk-BolIta;src:url(/webfonts/2C139A_6_0.eot);src:url(/webfonts/2C139A_6_0.eot?#iefix) format("embedded-opentype"),url(/webfonts/2C139A_6_0.woff) format("woff"),url(/webfonts/2C139A_6_0.ttf) format("truetype")}@font-face{font-family:URWGroteskCon-Lig;src:url(/webfonts/2C139A_1E_0.eot);src:url(/webfonts/2C139A_1E_0.eot?#iefix) format("embedded-opentype"),url(/webfonts/2C139A_1E_0.woff) format("woff"),url(/webfonts/2C139A_1E_0.ttf) format("truetype")}@font-face{font-family:URWGroteskCon-Bol;src:url(/webfonts/2C139A_31_0.eot);src:url(/webfonts/2C139A_31_0.eot?#iefix) format("embedded-opentype"),url(/webfonts/2C139A_31_0.woff) format("woff"),url(/webfonts/2C139A_31_0.ttf) format("truetype")}svg{height:100%;width:100%}.slawcube{fill:white}.diamond{fill:#a5a7aa}.codepen{fill:#a5a7aa}.container{margin-top:0}[class*=__container]{margin:0 auto;max-width:1200px;padding:0 44px;padding:0 2rem}div[class*="--col"]{float:left}.clearfix:after{content:"";display:table;clear:both}.stretch{-moz-background-size:cover;background-size:cover;background-position:center center;background-repeat:no-repeat}.fixed-img{background-position:center center;background-repeat:no-repeat;background-attachment:fixed;-moz-background-size:cover;background-size:cover}img,iframe,embed{max-width:100%}.make-gallery div{float:left;list-style:none}.square-4 div{width:25%;height:0;padding-bottom:25%}.square-3 div{width:33.3333%;height:0;padding-bottom:33.3333%}.square-2 div{width:50%;height:0;padding-bottom:50%}.container{padding-top:132px;padding-top:6rem}.footer{background-color:#333;padding:66px 0;padding:3rem 0;text-align:center}.footer__text{color:#a5a7aa;text-align:center}.footer a{color:#007ac2}.footer a:hover{color:#ef3e42}.twitter-share-button{vertical-align:-15%;margin-right:-25px!important}.logo{border-bottom:none!important;opacity:.2;filter:alpha(opacity=20);padding:15px;display:inline-block;-webkit-transition:all .4s;-moz-transition:all .4s;-o-transition:all .4s;transition:all .4s}.logo:hover{opacity:1;filter:alpha(opacity=100)}.social-icons{display:inline-block;height:44px;height:2rem;width:44px;width:2rem}a.brandmark-bottom{color:#a5a7aa;display:inline-block;font-size:44px;font-size:2rem;letter-spacing:-2px;text-align:center}a.brandmark-bottom .a{color:#ef3e42}a.brandmark-bottom .r{color:#007ac2}a.brandmark-bottom .t{color:#fec057}a.brandmark-bottom:hover{color:#333}[data-icon]:before{content:'\2630';speak:none;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-size:39px;font-size:1.8rem;-webkit-transition:color .2s;-moz-transition:color .2s;-o-transition:color .2s;transition:color .2s}body.no_scroll{overflow:hidden;height:100%}@-moz-document url-prefix(){body.no_scroll .expanded{background:rgba(255,255,255,.95)}}a.brandmark{color:#a5a7aa;display:table-cell;font-size:39px;font-size:1.8rem;letter-spacing:-2px}a.brandmark .a{color:#ef3e42}a.brandmark .r{color:#007ac2}a.brandmark .t{color:#fec057}a.brandmark:hover{color:#333}.tagline{color:#ccc;font-family:URWGroteskCon-Lig,sans-serif;font-size:27px;font-size:1.25rem;letter-spacing:4px;text-transform:uppercase}@-webkit-keyframes firstFadeInAndDrop{0%{-webkit-transform:translate(0,-54px);transform:translate(0,-54px)}100%{-webkit-transform:translate(0,0);transform:translate(0,0)}}@-moz-keyframes firstFadeInAndDrop{0%{-moz-transform:translate(0,-54px);transform:translate(0,-54px)}100%{-moz-transform:translate(0,0);transform:translate(0,0)}}@-o-keyframes firstFadeInAndDrop{0%{-o-transform:translate(0,-54px);transform:translate(0,-54px)}100%{-o-transform:translate(0,0);transform:translate(0,0)}}@keyframes firstFadeInAndDrop{0%{-webkit-transform:translate(0,-54px);-moz-transform:translate(0,-54px);-o-transform:translate(0,-54px);transform:translate(0,-54px)}100%{-webkit-transform:translate(0,0);-moz-transform:translate(0,0);-o-transform:translate(0,0);transform:translate(0,0)}}.laxnav{background:rgba(255,255,255,.75);cursor:pointer;height:132px;height:6rem;overflow:hidden;position:absolute;right:0;top:0;width:100%;z-index:1000;-moz-box-shadow:0 1px 0 #ccc;box-shadow:0 1px 0 #ccc;-webkit-transform:translate(0,0);-moz-transform:translate(0,0);-ms-transform:translate(0,0);-o-transform:translate(0,0);transform:translate(0,0);-webkit-transition:-webkit-transform .2s,height .2s,background .2s;-moz-transition:-moz-transform .2s,height .2s,background .2s;-o-transition:-o-transform .2s,height .2s,background .2s;transition:transform .2s,height .2s,background .2s;-webkit-animation:firstFadeInAndDrop .2s;-moz-animation:firstFadeInAndDrop .2s;-o-animation:firstFadeInAndDrop .2s;animation:firstFadeInAndDrop .2s}.laxnav:hover{background:white}.laxnav__bar{-moz-box-sizing:border-box;box-sizing:border-box;display:table;padding:44px;padding:2rem;width:100%}.laxnav__bar>a{font-weight:700;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.laxnav.invisible{-webkit-transform:translate(0,-64px);-moz-transform:translate(0,-64px);-ms-transform:translate(0,-64px);-o-transform:translate(0,-64px);transform:translate(0,-64px);-webkit-transition:-webkit-transform .2s;-moz-transition:-moz-transform .2s;-o-transition:-o-transform .2s;transition:transform .2s;opacity:0;filter:alpha(opacity=0)}.laxnav.detached{position:fixed;background:rgba(255,255,255,.9);-webkit-transition:-webkit-transform .2s,height .2s,background .2s,opacity .2s;-moz-transition:-moz-transform .2s,height .2s,background .2s,opacity .2s;-o-transition:-o-transform .2s,height .2s,background .2s,opacity .2s;transition:transform .2s,height .2s,background .2s,opacity .2s}.laxnav.expanded{width:100%;height:100%;position:fixed;cursor:default;background:rgba(255,255,255,.9);overflow-y:scroll}.laxnav.expanded #laxnav__menu{-webkit-transform:translate(0,0);-moz-transform:translate(0,0);-ms-transform:translate(0,0);-o-transform:translate(0,0);transform:translate(0,0);opacity:1;filter:alpha(opacity=100)}.laxnav__menu{opacity:0;filter:alpha(opacity=0);width:60%;margin:0 auto;-webkit-transform:translate(0,-1000px);-moz-transform:translate(0,-1000px);-ms-transform:translate(0,-1000px);-o-transform:translate(0,-1000px);transform:translate(0,-1000px);-webkit-transition:-webkit-transform .15s,opacity .2s;-moz-transition:-moz-transform .15s,opacity .2s;-o-transition:-o-transform .15s,opacity .2s;transition:transform .15s,opacity .2s}.laxnav__menu-list-item{list-style-type:none;-moz-box-shadow:0 1px 0 #ccc;box-shadow:0 1px 0 #ccc}.laxnav__menu-list-anchor{color:#007ac2;display:block;font-size:33px;font-size:1.5rem;font-family:URWGroteskCon-Bol,sans-serif;padding:.1em 11px;padding:.1em .5rem;text-transform:uppercase}.laxnav__menu-list-anchor:hover{background:#ef3e42;color:#fff}.laxnav__link-text{display:inline-block;width:200px}.laxnav__link-teaser{color:#333;font-family:URWGroteskCon-Lig,sans-serif}.icon-btn{cursor:pointer;display:table-cell;text-align:right;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.icon-btn span{color:#007ac2;font-family:URWGroteskCon-Lig,sans-serif;font-size:22px;font-size:1rem;letter-spacing:4px;text-transform:uppercase}.icon-btn:focus{outline:none}.icon-btn:before,.icon-btn:active:before{color:#007ac2}.icon-btn:hover:before,.icon-btn:focus:before{color:#ef3e42}.expanded .icon-btn:before{content:'\002715';font-size:44px;font-size:2rem;font-weight:700;padding-right:3px;padding-right:.15rem}.content-transition{-webkit-transition:-webkit-transform .2s,-webkit-filter .2s,-webkit-transform .2s,filter .2s;-moz-transition:-moz-transform .2s,filter .2s;-o-transition:-o-transform .2s,filter .2s;transition:transform .2s,filter .2s}.imgBanner{background-position:center center;background-repeat:no-repeat;background-attachment:fixed;-moz-background-size:cover;background-size:cover;font-family:URWGroteskCon-Lig,sans-serif;width:100%;height:100%;padding:264px 0;padding:12rem 0;position:relative;z-index:0}.imgBanner:before{content:" ";height:100%;width:100%;display:block;position:absolute;bottom:0;left:0;background:-webkit-linear-gradient(top,rgba(255,255,255,0) 0,transparent 1%,rgba(0,0,0,.05) 26%,rgba(0,0,0,.5) 71%,rgba(0,0,0,.7) 100%)}.imgBanner__container{background:transparent;position:relative;z-index:5}.imgBanner__heading{text-shadow:3px 3px 0 rgba(51,51,51,.5);color:#fff;font-size:176px;font-size:8rem;margin:0;text-align:center;text-transform:uppercase;-webkit-transform:translate(0,0);-moz-transform:translate(0,0);-ms-transform:translate(0,0);-o-transform:translate(0,0);transform:translate(0,0);-webkit-transition:-webkit-transform .4s,height .3s,background .4s;-moz-transition:-moz-transform .4s,height .3s,background .4s;-o-transition:-o-transform .4s,height .3s,background .4s;transition:transform .4s,height .3s,background .4s;-webkit-animation:firstFadeInAndDrop .5s;-moz-animation:firstFadeInAndDrop .5s;-o-animation:firstFadeInAndDrop .5s;animation:firstFadeInAndDrop .5s}.imgBanner__text{color:#fff;font-size:132px;font-size:6rem;font-family:learning-curve;margin:0;text-align:center}.mainContent{background-color:#fff;padding:0 0 66px;padding:0 0 3rem}.mainContent__container{width:65%;margin:0 auto}.mainContent__heading{font-family:URWGroteskCon-Lig,sans-serif;font-size:66px;font-size:3rem;line-height:1;margin:0;padding-top:110px;padding-top:5rem;position:relative;text-align:center;text-transform:uppercase}.mainContent__heading:after{-moz-box-shadow:1px 1px 0 #333;box-shadow:1px 1px 0 #333;content:"";display:block;height:1px;width:330px;width:15rem;margin:16px auto;margin:.75rem auto}.mainContent__subHeading{font-family:URWGroteskCon-Lig,sans-serif;font-size:44px;font-size:2rem;line-height:1;margin:0;padding:66px 0 33px;padding:3rem 0 1.5rem;text-align:center}.mainContent__date{color:#ccc;font-family:URWGroteskCon-Lig,sans-serif;font-size:44px;font-size:2rem;text-align:center}.mainContent__md{color:#333;padding-bottom:66px;padding-bottom:3rem}.mainContent__md h1,.mainContent__md h2,.mainContent__md h3,.mainContent__md h4,.mainContent__md h5,.mainContent__md h6{font-family:URWGroteskCon-Bol,sans-serif;font-size:44px;font-size:2rem;line-height:1;margin:0;padding:66px 0 33px;padding:3rem 0 1.5rem;text-align:center}.mainContent__md iframe{margin:66px 0;margin:3rem 0}.megaStatement{background:#fff;font-family:URWGroteskCon-Lig,sans-serif;width:100%;height:100%;padding:66px;padding:3rem;position:relative;z-index:0}.megaStatement__textBox{background:transparent;position:relative;z-index:5}.megaStatement__heading{color:#a5a7aa;font-size:132px;font-size:6rem;text-align:center;text-transform:uppercase;margin-top:66px;margin-bottom:66px}.megaStatement__content{color:#fff;font-size:132px;font-size:6rem;font-family:learning-curve;margin:0;padding-bottom:110px;padding-bottom:5rem;text-align:center}.megaCTA{background-position:center center;background-repeat:no-repeat;background-attachment:fixed;-moz-background-size:cover;background-size:cover;font-family:URWGroteskCon-Lig,sans-serif;width:100%;height:100%;position:relative;z-index:0}.megaCTA:before{content:" ";height:100%;width:100%;display:block;position:absolute;bottom:0;left:0;background:-webkit-linear-gradient(top,rgba(255,255,255,0) 0,transparent 1%,rgba(0,0,0,.05) 26%,rgba(0,0,0,.5) 71%,rgba(0,0,0,.7) 100%)}.megaCTA__container{background:transparent;position:relative;z-index:5;padding-top:264px;padding-bottom:264px}.megaCTA__heading{color:#fff;font-size:176px;font-size:8rem;margin:0;text-align:center;text-transform:uppercase}.megaCTA__text{color:#fff;font-size:132px;font-size:6rem;font-family:learning-curve;margin:0;text-align:center}.megaCTA__button{font-size:inherit;-webkit-transition:all .1s ease-in;-moz-transition:all .1s ease-in;-o-transition:all .1s ease-in;transition:all .1s ease-in;background:rgba(0,122,194,.75);-moz-border-radius:.25rem;border-radius:.25rem;color:#fff;display:inline-block;font-family:learning-curve;padding:0 11px;padding:0 .5rem;text-align:center}.megaCTA__button:hover{background:rgba(255,255,255,.9);color:#007ac2}.chartBox{background:#ef3e42;color:white;margin-bottom:1px;padding:66px 0;padding:3rem 0;text-align:center}.chartBox__heading{color:#fff;font-family:URWGroteskCon-Lig,sans-serif;font-size:66px;font-size:3rem;line-height:1;margin:0;padding-top:5rrem;position:relative;text-align:center;text-transform:uppercase}.chartBox__stat{display:inline-block;font-family:URWGroteskCon-Lig,sans-serif;font-size:44px;font-size:2rem;padding:0 66px;padding:0 3rem}.chartBox__stat span{font-size:110px;font-size:5rem}.chartBox p{margin:0 auto 33px;margin:0 auto 1.5rem;text-align:left;width:50%}.chart{position:relative;display:inline-block;margin:22px;margin:1rem}.chart canvas{position:absolute;top:0;left:0}.chart__percent{font-family:URWGroteskCon-Lig,sans-serif;display:inline-block;font-size:44px;font-size:2rem}.chart__percent:after{content:"%"}.articleCTA{background:#fec057;padding-bottom:66px;padding-bottom:3rem}.articleCTA__container{width:50%;margin:0 auto}.articleCTA__heading{color:#333;font-family:URWGroteskCon-Lig,sans-serif;font-size:66px;font-size:3rem;line-height:1;margin:0;padding-top:110px;padding-top:5rem;position:relative;text-align:center;text-transform:uppercase}.articleCTA__heading:after{-moz-box-shadow:1px 1px 0 #333;box-shadow:1px 1px 0 #333;content:"";display:block;height:1px;width:330px;width:15rem;margin:16px auto;margin:.75rem auto}.articleCTA__headingLink{color:#007ac2}.articleCTA__headingLink:hover{color:#ef3e42}.articleCTA__md{color:#333;padding-bottom:66px;padding-bottom:3rem}.articleCTA__text{text-align:center}.articleCTA__button{font-size:66px;font-size:3rem;-webkit-transition:all .1s ease-in;-moz-transition:all .1s ease-in;-o-transition:all .1s ease-in;transition:all .1s ease-in;background:rgba(0,122,194,.75);-moz-border-radius:.25rem;border-radius:.25rem;color:#fff;display:inline-block;font-family:learning-curve;padding:0 11px;padding:0 .5rem;text-align:center}.articleCTA__button:hover{background:rgba(255,255,255,.9);color:#007ac2}.articleList{background-color:#f5f5f5;-moz-box-shadow:0 -1px 0 #a5a7aa;box-shadow:0 -1px 0 #a5a7aa;padding:66px 0;padding:3rem 0}.articleList__container{width:65%;margin:0 auto}.articleList__heading{-moz-box-shadow:0 1px 0 #a5a7aa;box-shadow:0 1px 0 #a5a7aa;font-family:URWGroteskCon-Lig,sans-serif;font-size:44px;font-size:2rem;line-height:1}.articleList__link{color:#007ac2;display:block;margin:0;padding:22px 11px;padding:1rem .5rem}.articleList__link:hover{background-color:#ef3e42;color:#fff}body{overflow-x:hidden}body.overflow-hidden{overflow:hidden}main{position:relative;-webkit-transition-property:-webkit-transform;-moz-transition-property:-moz-transform;-o-transition-property:-o-transform;transition-property:transform;-webkit-transition-duration:.3s;-moz-transition-duration:.3s;-o-transition-duration:.3s;transition-duration:.3s}main.slide-out{-webkit-transform:translateX(-270px);-moz-transform:translateX(-270px);-ms-transform:translateX(-270px);-o-transform:translateX(-270px);transform:translateX(-270px)}main.slide-out .reveal__overlay{display:block;-webkit-animation:reveal__fade-in .3s;-moz-animation:reveal__fade-in .3s;-o-animation:reveal__fade-in .3s;animation:reveal__fade-in .3s}.reveal{background:#fff;padding:0 0 22px;padding:0 0 1rem;text-align:center}.reveal__container:after{content:'';display:table;clear:both}.reveal__heading{color:#1a2f2a;font-family:URWGroteskCon-Bol,sans-serif;font-weight:700;text-transform:uppercase;margin-bottom:22px;margin-bottom:1rem}.reveal__placeholder-1{background:#f25f5c;color:#fdeaea}.reveal__placeholder-2{background:#FFF}.reveal li{margin-bottom:44px;margin-bottom:2rem;-moz-border-radius:.25rem;border-radius:.25rem;-moz-box-shadow:0 0 10px rgba(254,192,87,0);box-shadow:0 0 10px rgba(254,192,87,0);-webkit-transition:all .3s;-moz-transition:all .3s;-o-transition:all .3s;transition:all .3s}.reveal__figure{margin:0;display:block;overflow:hidden;position:relative;background-position:50%;background-repeat:no-repeat;-moz-background-size:cover;background-size:cover;max-height:550px;max-width:100%}.reveal__figure:after{content:"";display:block;padding-bottom:75%;width:100%}.reveal img{display:block;width:100%;-moz-border-radius:.25rem .25rem 0 0;border-radius:.25rem .25rem 0 0}.reveal__img-overlay{position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0,122,194,.9);opacity:0;filter:alpha(opacity=0);-moz-border-radius:.25rem .25rem 0 0;border-radius:.25rem .25rem 0 0;-webkit-transition:opacity .3s;-moz-transition:opacity .3s;-o-transition:opacity .3s;transition:opacity .3s}.reveal__img-overlay span{position:absolute;left:50%;top:50%;bottom:auto;right:auto;-webkit-transform:translateX(-50%) translateY(-50%);-moz-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);-o-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);color:#FFF;font-size:44px;font-size:2rem;font-family:URWGroteskCon-Lig,sans-serif}.reveal__box-info{background:#007ac2;text-align:center;font-family:URWGroteskCon-Lig,sans-serif;font-weight:700;padding:5px 0;padding:.25rem 0;color:#fff;font-size:44px;font-size:2rem;text-transform:uppercase}.reveal__box-info span{display:block;font-weight:400;margin-top:11px;margin-top:.5rem}.reveal__box-info small{font-weight:400}.no-touch .reveal li:hover{-moz-box-shadow:0 0 10px rgba(254,192,87,.3);box-shadow:0 0 10px rgba(254,192,87,.3)}.no-touch .reveal li:hover .reveal__img-overlay{opacity:1;filter:alpha(opacity=100)}.reveal-panel__pic-flexembed{display:block;overflow:hidden;position:relative;background-position:50%;background-repeat:no-repeat;-moz-background-size:cover;background-size:cover;max-height:550px;max-width:100%}.reveal-panel__pic-flexembed:after{content:"";display:block;padding-bottom:75%;width:100%}.reveal-panel{position:fixed;top:0;right:0;width:320px;height:100%;overflow-y:auto;-webkit-overflow-scrolling:touch;background:#fec057;z-index:1001;-webkit-transform:translateX(320px);-moz-transform:translateX(320px);-ms-transform:translateX(320px);-o-transform:translateX(320px);transform:translateX(320px);-webkit-transition-property:-webkit-transform;-moz-transition-property:-moz-transform;-o-transition-property:-o-transform;transition-property:transform;-webkit-transition-duration:.3s;-moz-transition-duration:.3s;-o-transition-duration:.3s;transition-duration:.3s}.reveal-panel.slide-in{-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.reveal-panel__pic{position:relative}.reveal-panel__pic:after{content:'';position:absolute;bottom:0;left:0;width:100%;height:80px;background:-webkit-linear-gradient(bottom,#fec057,rgba(254,192,87,0));background:-moz-linear-gradient(bottom,#fec057,rgba(254,192,87,0));background:-o-linear-gradient(bottom,#fec057,rgba(254,192,87,0));background:linear-gradient(to top,#fec057,rgba(254,192,87,0))}.reveal-panel img{width:100%;display:block}.reveal-panel .reveal-panel__bio-content{padding:22px;padding:1rem;color:#fff}.reveal-panel .reveal-panel__bio-content-title{color:#fff;font-family:URWGroteskCon-Lig,sans-serif;font-size:66px;font-size:3rem;line-height:1;margin:0;padding-top:110px;padding-top:5rem;position:relative;text-align:center;text-transform:uppercase}.reveal-panel .reveal-panel__bio-content-title:after{-moz-box-shadow:1px 1px 0 #333;box-shadow:1px 1px 0 #333;content:"";display:block;height:1px;width:330px;width:15rem;margin:16px auto;margin:.75rem auto}.reveal-panel .reveal-panel__bio-content-subtitle{font-family:URWGroteskCon-Lig,sans-serif;font-size:44px;font-size:2rem;padding:0;text-align:center;text-transform:uppercase}.reveal-panel .reveal-panel__bio-content-md{color:#333;padding-bottom:66px;padding-bottom:3rem}.reveal-panel .reveal-panel__bio-content-md h3{font-family:URWGroteskCon-Lig,sans-serif;font-size:44px;font-size:2rem;line-height:1;padding:66px 0 33px;padding:3rem 0 1.5rem;text-align:center}.no-cssgradients .reveal-panel .reveal-panel__pic:after{display:none}.reveal-panel__close{width:75px;height:75px;overflow:hidden;position:fixed;top:25px;right:25px;background:url(/images/svg/reveal-icon-close.svg) no-repeat center center;text-indent:100%;white-space:nowrap;z-index:3001;display:none}.reveal-panel__close.is-visible{display:block;-webkit-animation:reveal__move-in .8s;-moz-animation:reveal__move-in .8s;-o-animation:reveal__move-in .8s;animation:reveal__move-in .8s}.reveal__overlay{position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0,122,194,.8);cursor:pointer;display:none;z-index:2000}@-webkit-keyframes reveal__fade-in{0%{opacity:0;filter:alpha(opacity=0)}100%{opacity:1;filter:alpha(opacity=100)}}@-moz-keyframes reveal__fade-in{0%{opacity:0;filter:alpha(opacity=0)}100%{opacity:1;filter:alpha(opacity=100)}}@-o-keyframes reveal__fade-in{0%{opacity:0;filter:alpha(opacity=0)}100%{opacity:1;filter:alpha(opacity=100)}}@keyframes reveal__fade-in{0%{opacity:0;filter:alpha(opacity=0)}100%{opacity:1;filter:alpha(opacity=100)}}@-webkit-keyframes reveal__move-in{0%{-webkit-transform:translateX(100px) rotate(0deg);transform:translateX(100px) rotate(0deg)}100%{-webkit-transform:translateX(0) rotate(540deg);transform:translateX(0) rotate(540deg)}}@-moz-keyframes reveal__move-in{0%{-moz-transform:translateX(100px) rotate(0deg);transform:translateX(100px) rotate(0deg)}100%{-moz-transform:translateX(0) rotate(540deg);transform:translateX(0) rotate(540deg)}}@-o-keyframes reveal__move-in{0%{-o-transform:translateX(100px) rotate(0deg);transform:translateX(100px) rotate(0deg)}100%{-o-transform:translateX(0) rotate(540deg);transform:translateX(0) rotate(540deg)}}@keyframes reveal__move-in{0%{-webkit-transform:translateX(100px) rotate(0deg);-moz-transform:translateX(100px) rotate(0deg);-o-transform:translateX(100px) rotate(0deg);transform:translateX(100px) rotate(0deg)}100%{-webkit-transform:translateX(0) rotate(540deg);-moz-transform:translateX(0) rotate(540deg);-o-transform:translateX(0) rotate(540deg);transform:translateX(0) rotate(540deg)}}.grid{overflow:hidden;margin:0;width:100%;max-width:1920px;list-style:none;text-align:center}.grid figure{position:relative;z-index:1;display:inline-block;overflow:hidden;margin:-5px -3px;margin:-.23rem -.15rem;width:50%;height:400px;background:#3085a3;text-align:center;cursor:pointer}.grid figure img{position:relative;display:block;min-height:100%;opacity:.8;filter:alpha(opacity=80)}.grid figure figcaption{padding:44px;padding:2rem;color:#fff;text-transform:uppercase;font-size:27px;font-size:1.25rem;-webkit-backface-visibility:hidden;-moz-backface-visibility:hidden;backface-visibility:hidden}.grid figure figcaption:before,.grid figure figcaption:after{pointer-events:none}.grid figure figcaption,.grid figure a{position:absolute;top:0;left:0;width:100%;height:100%}.grid figure a{z-index:1000;text-indent:200%;white-space:nowrap;font-size:0;opacity:0;filter:alpha(opacity=0)}.grid figure h2{word-spacing:-3px;word-spacing:-.15rem;font-size:44px;font-size:2rem;font-weight:300}.grid figure h2 span{font-weight:800}.grid figure h2,.grid figure p{margin:0}.grid figure p{letter-spacing:1px}figure.effect-oscar{background:rgba(239,62,66,.8)}figure.effect-oscar img{opacity:.9;filter:alpha(opacity=90);-webkit-transition:opacity .35s;-moz-transition:opacity .35s;-o-transition:opacity .35s;transition:opacity .35s}figure.effect-oscar figcaption{padding:66px;padding:3rem;background-color:rgba(0,122,194,.7);-webkit-transition:background-color .35s;-moz-transition:background-color .35s;-o-transition:background-color .35s;transition:background-color .35s}figure.effect-oscar figcaption:before{position:absolute;top:30px;right:30px;bottom:30px;left:30px;border:1px solid #fff;content:''}figure.effect-oscar h2{margin:10% 0 10px;-webkit-transition:-webkit-transform .35s;-moz-transition:-moz-transform .35s;-o-transition:-o-transform .35s;transition:transform .35s;-webkit-transform:translate3d(0,100%,0);-moz-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}figure.effect-oscar figcaption:before,figure.effect-oscar p{opacity:0;filter:alpha(opacity=0);-webkit-transition:opacity .35s,-webkit-transform .35s;-moz-transition:opacity .35s,-moz-transform .35s;-o-transition:opacity .35s,-o-transform .35s;transition:opacity .35s,transform .35s;-webkit-transform:scale(0);-moz-transform:scale(0);-ms-transform:scale(0);-o-transform:scale(0);transform:scale(0)}figure.effect-oscar:hover h2{-webkit-transform:translate3d(0,0,0);-moz-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}figure.effect-oscar:hover figcaption:before,figure.effect-oscar:hover p{opacity:1;filter:alpha(opacity=100);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);-o-transform:scale(1);transform:scale(1)}figure.effect-oscar:hover figcaption{background-color:rgba(58,52,42,0)}figure.effect-oscar:hover img{opacity:.2;filter:alpha(opacity=20)}.flipGallery__front,.flipGallery__back{-webkit-backface-visibility:hidden;-moz-backface-visibility:hidden;backface-visibility:hidden;-webkit-transition:.6s;-moz-transition:.6s;-o-transition:.6s;transition:.6s;-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;transform-style:preserve-3d;position:absolute;top:0;left:0}.flipGallery__box,.flipGallery__front,.flipGallery__back{width:250px;height:250px}.flipGallery{background-color:#007ac2;text-align:center}.flipGallery__heading{color:#fff;font-family:URWGroteskCon-Lig,sans-serif;font-size:66px;font-size:3rem;line-height:1;margin:0;padding-top:5rrem;position:relative;text-align:center;text-transform:uppercase}.flipGallery__box{-webkit-perspective:1000;-moz-perspective:1000;perspective:1000;-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;transform-style:preserve-3d;display:inline-block;margin:0 1px 1px}.flipGallery__box:hover .flipGallery__back{-webkit-transform:rotateY(0deg);-moz-transform:rotateY(0deg);transform:rotateY(0deg)}.flipGallery__box:hover .flipGallery__front{-webkit-transform:rotateY(180deg);-moz-transform:rotateY(180deg);transform:rotateY(180deg)}.flipGallery__back{background-color:#fec057;font-size:2em;padding-top:.5em;-webkit-transform:rotateY(-180deg);-moz-transform:rotateY(-180deg);transform:rotateY(-180deg)}.flipGallery__back__heading{font-family:URWGroteskCon-Bol,sans-serif;line-height:1}.flipGallery__back__text{font-family:URWGroteskCon-Lig,sans-serif}.flipGallery__flipper{-webkit-transition:.6s;-moz-transition:.6s;-o-transition:.6s;transition:.6s;-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;transform-style:preserve-3d;position:relative}@media(max-width:1024px){[class*=__container]{max-width:1024px}a.brandmark{font-size:1.5rem}.tagline{font-size:1rem}}@media(min-width:350px) and (max-width:767px) and (-webkit-min-device-pixel-ratio:3),(min-width:350px) and (max-width:767px) and (-webkit-min-device-pixel-ratio:3.6458333333333335),(min-width:350px) and (max-width:767px) and (-o-min-device-pixel-ratio:4557291666666667/1250000000000000),(min-width:350px) and (max-width:767px) and (min-resolution:350dpi){.fixed-img{background-attachment:scroll}}@media(min-width:769px){.fixed-img{background-attachment:scroll}}@media(max-width:767px){.container{padding-top:4rem}a.brandmark-bottom{font-size:1rem}.laxnav{height:4rem}.laxnav__bar{padding:0 1rem}.imgBanner__heading{font-size:3rem;margin:0}.mainContent__container{width:100%}.megaCTA__heading{font-size:2rem;margin:0}.megaCTA__text{font-size:2rem;margin:0}.chartBox__heading{font-size:2rem;padding-bottom:1rem}.chartBox__stat span{font-size:2rem;padding:3rem 0 0;display:inline-block}.articleCTA__container{width:100%}.articleList__container{width:90%}.articleList__heading{font-size:1.5rem}.reveal-panel .reveal-panel__bio-content-title{font-size:2rem}.grid figure{width:100%;height:200px}.grid figure h2{font-size:1.5rem}.flipGallery__heading{font-size:2rem;padding-bottom:1rem}}@media(min-width:768px) and (max-width:1024px){a.brandmark-bottom{font-size:1.5rem}.imgBanner__heading{font-size:5rem;margin:0}.megaStatement__heading{font-size:4rem;margin-top:16.5px;margin-bottom:16.5px}.megaCTA__text{font-size:4rem}.articleCTA__container{width:90%}}@media(max-width:768px){a.brandmark{font-size:1rem}.tagline{display:none}.laxnav__link-teaser{display:none}.icon-btn span{display:none}.imgBanner{background-attachment:scroll;padding:3rem 0}.mainContent__heading:after{width:100%}.megaCTA{background-attachment:scroll}.megaCTA__container{padding-top:132px;padding-bottom:132px}.megaCTA__heading{font-size:5rem;margin:0}.chart{margin:3rem 1rem}.articleCTA__heading{font-size:2rem}.articleCTA__heading:after{width:100%}.articleCTA__button{font-size:2rem;-webkit-transition:all .1s ease-in;-moz-transition:all .1s ease-in;-o-transition:all .1s ease-in;transition:all .1s ease-in;background:rgba(0,122,194,.75);-moz-border-radius:.25rem;border-radius:.25rem;color:#fff;display:inline-block;font-family:learning-curve;padding:0 .5rem;text-align:center}.articleCTA__button:hover{background:rgba(255,255,255,.9);color:#007ac2}.reveal-panel .reveal-panel__bio-content-title:after{width:100%}.reveal-panel .reveal-panel__bio-content-md{padding-bottom:1rem}.reveal-panel .reveal-panel__bio-content-md h3{padding:1rem 0 .5rem}.grid figure{width:100%}}@media(max-width:320px){a.brandmark{font-size:.85rem}.laxnav__menu{width:100%}.laxnav__menu-list-anchor{font-size:.85rem}}@media(max-width:1023px){.laxnav__menu{width:80%}.reveal-panel .reveal-panel__bio-content-title{padding:0}}@media(min-width:320px) and (max-width:768px){.megaStatement__heading{font-size:2rem;margin-top:16.5px;margin-bottom:16.5px}}@media only screen and (min-width:768px){main.slide-out{-webkit-transform:translateX(-600px);-moz-transform:translateX(-600px);-ms-transform:translateX(-600px);-o-transform:translateX(-600px);transform:translateX(-600px)}.reveal li{display:inline-block;width:45%}.reveal li:nth-child(3n){margin-right:0}.reveal-panel{width:600px;-webkit-transform:translateX(600px);-moz-transform:translateX(600px);-ms-transform:translateX(600px);-o-transform:translateX(600px);transform:translateX(600px)}.reveal-panel .reveal-panel__bio-content{padding:2rem}.reveal-panel .reveal-panel__bio-content p{margin:2rem 0}}@media only screen and (min-width:1200px){main.slide-out{-webkit-transform:translateX(-800px);-moz-transform:translateX(-800px);-ms-transform:translateX(-800px);-o-transform:translateX(-800px);transform:translateX(-800px)}}@media only screen and (min-width:1000px){.reveal-panel{-moz-box-shadow:-10px 0 100px #333;box-shadow:-10px 0 100px #333;width:900px;-webkit-transform:translateX(1000px);-moz-transform:translateX(1000px);-ms-transform:translateX(1000px);-o-transform:translateX(1000px);transform:translateX(1000px)}.reveal-panel .reveal-panel__pic:after{height:150px}.reveal-panel .reveal-panel__bio-content{padding:4rem;-webkit-transform:translateY(-80px);-moz-transform:translateY(-80px);-ms-transform:translateY(-80px);-o-transform:translateY(-80px);transform:translateY(-80px)}.no-cssgradients .reveal-panel .reveal-panel__bio-content{-webkit-transform:translateY(0);-moz-transform:translateY(0);-ms-transform:translateY(0);-o-transform:translateY(0);transform:translateY(0)}}/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsIi9zb3VyY2UvY29uZmlnL190eXBvZ3JhcGh5LnNhc3MiLCIvc291cmNlL2NvbmZpZy9fcmVzZXQuc2FzcyIsIi9zb3VyY2UvY29uZmlnL19mb250cy5zYXNzIiwiL3NvdXJjZS9jb25maWcvX2ljb25zLnNhc3MiLCIvc291cmNlL2NvbmZpZy9fbGF5b3V0LnNhc3MiLCIvc291cmNlL2NvbmZpZy9faW5jbHVkZS1tZWRpYS5zYXNzIiwiL3NvdXJjZS9jb25maWcvX2NsZWFyLWZpeC5zYXNzIiwiL3NvdXJjZS9jb25maWcvX2ltYWdlcy5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL19jb250YWluZXIuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9fZm9vdGVyLnNhc3MiLCIvc291cmNlL2NvbmZpZy9fY29sb3JzLnNhc3MiLCIvc291cmNlL21vZHVsZXMvX25hdi5zYXNzIiwiL3NvdXJjZS9jb25maWcvX21peGlucy5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL19pbWdCYW5uZXIuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9fbWFpbkNvbnRlbnQuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9fbWVnYVN0YXRlbWVudC5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL19tZWdhQ1RBLnNhc3MiLCIvc291cmNlL21vZHVsZXMvX21peGluLWJ1dHRvbnMuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9fY2hhcnQtYm94LnNhc3MiLCIvc291cmNlL21vZHVsZXMvX21peGluLWhlYWRlcnMuc2FzcyIsIi9zb3VyY2UvbW9kdWxlcy9fYXJ0aWNsZUNUQS5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL19hcnRpY2xlTGlzdC5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL19yZXZlYWwtYm94LnNhc3MiLCIvc291cmNlL21vZHVsZXMvX21peGluLWZsZXhFbWJlZC5zYXNzIiwiL3NvdXJjZS9tb2R1bGVzL19maWd1cmUtYm94LnNhc3MiLCIvc291cmNlL21vZHVsZXMvX2ZsaXAtZ2FsbGVyeS5zYXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLDBDQUFnRCxBQURoRCxpQkFBaUIsQUFRakIsS0M2QkEsY0FBQSxDQUFBLEFEMUJBLEtDWE8sV0FBQSxBQXlDTCxnQkFBQSxBQUNBLHNDQUFBLEFEM0JBLGFBQWMsQUM2QmhCLGtDQUFBLENBQUEsQUQxQkEsa0JBQ0UsZUFBZ0IsQUFBaEIsZUFBZ0IsQUM2QmxCLGVBQUEsQ0FBQSxBRDFCQSxHQzZCQSxrQkFBQSxpQkFBQSxDQUFBLEFEMUJBLEdBQ0UsYUFBZ0IsQUM0QmxCLGVBQUEsQ0FBQSxBRHpCQSxRQzRCQSxvQkFBQSxxQkFBQSxDQUFBLEFEekJBLFlDNEJFLGFBQUEsQUFDRixnQkFBQSxBRDFCRSxVQzJCRSxDQUFBLEFEMUJGLGdCQzRCRSxXQUFBLEFBQ0EsUUFBQSxBQUNBLFNBQUEsQUQxQkEsa0JBQW1CLEFDNEJ2QixvREFBQSxpREFBQSxnREFBQSwrQ0FBQSwyQ0FBQSxDQUFBLEFEekJBLGtCQUNFLGtCQUFvQixDQUFFLEFBRHhCLGFBQ0Usa0JBQW9CLENBQUUsQUFLeEIsTUM4QkEsVUFBQSxDQUFBLEFEM0JBLCtCQzhCRSx3QkFBQSxBRDVCQSxpQkFBcUIsQUFBckIsb0JBQXFCLEFDOEJ2QixpQkFBQSxtQkFBQSxDQUFBLEFEM0JBLHVCQzhCRSw0QkFBQSxBRDVCQSxpQkFBcUIsQUFBckIsb0JBQXFCLEFDOEJ2QixpQkFBQSxtQkFBQSxDQUFBLEFEM0JBLDZCQzhCRSw0QkFBQSxBRDVCQSxpQkFBcUIsQUFBckIsb0JBQXFCLEFDOEJ2QixpQkFBQSxtQkFBQSxDQUFBLEFEM0JBLCtCQzhCRSxxQkFBQSxBRDVCQSxpQkFBcUIsQUFBckIsb0JBQXFCLEFDOEJ2QixpQkFBQSxtQkFBQSxDQUFBLEFEM0JBLHVCQzhCRSx1QkFBQSxBRDVCQSxpQkFBcUIsQUFBckIsb0JBQXFCLEFDOEJ2QixpQkFBQSxtQkFBQSxDQUFBLEFEM0JBLGdCQzhCQSxpQkFBQSxrQkFBQSxDQUFBLEFEM0JBLGVDK0JBLFVBQUEsQ0FBQSxBRDVCQSxhQytCQSxlQUFBLENBQUEsQUQ1QkEsUUMrQkEsZUFBQSxDQUFBLEFENUJBLFFDK0JBLDJCQUFBLENBQUEsQUQ1QkEsc0JDK0JBLHdCQUFBLENBQUEsQUQ1QkEsU0NnQ0EsaUJBQUEsQ0FBQSxBRDdCQSxtQkNnQ0EsaUJBQUEsQ0FBQSxBRDdCQSxpQkNnQ0EsZUFBQSxDQUFBLEFEN0JBLGtCQ2dDQSxnQkFBQSxDQUFBLEFEN0JBLFFFM0dBLGlCQUFBLGdCQUFBLENBQUEsQUY4R0EsRUFDRSxTQUFVLEFFM0daLFNBQUEsQ0FBQSxBRjhHQSxLRTNHQSwyQkFBQSxxQkFBQSxDQUFBLEFGOEdBLG1CRTNHQSx3QkFBQSxrQkFBQSxDQUFBLEFGOEdBLEtFM0dBLFFBQUEsQ0FBQSxBRjhHQSxFRTNHQSxvQkFBQSxDQUFBLEFGOEdBLG1GRTNHQSxhQUFBLENBQUEsQUY4R0EsYUUzR0EsV0FBQSxDQUFBLEFGOEdBLG9EQUNFLFdBQVksQUUxR2QsWUFBQSxDQUFBLEFGNkdBLE1BQ0UseUJBQTBCLEFBQzFCLGdCQUFrQixDQUFFLEFBOFB0QixXR3JJRSwyQkFBQSxBSHVJQSxtQ0FBc0MsQUFDdEMsc0tBQWdMLENBQUUsQUFFcEwsV0dwSUUsOEJBQUEsQUhzSUEsbUNBQXNDLEFBQ3RDLHNLQUFnTCxDQUFFLEFBRXBMLFdHbklFLDJCQUFBLEFIcUlBLG1DQUFzQyxBQUN0QyxzS0FBZ0wsQ0FBRSxBQUVwTCxXR2xJRSw4QkFBQSxBSG9JQSxrQ0FBcUMsQUFDckMsbUtBQTZLLENBQUUsQUFFakwsV0dqSUUsOEJBQUEsQUhtSUEsbUNBQXNDLEFBQ3RDLHNLQUFnTCxDQUFFLEFBRXBMLFdHaElFLDhCQUFBLEFIa0lBLG1DQUFzQyxBSWxheEMsc0tBQUEsQ0FBQSxBSnFhQSxJQUNFLFlBQWEsQUlsYWYsVUFBQSxDQUFBLEFKcWFBLFVJbGFBLFVBQUEsQ0FBQSxBSnFhQSxTSWxhQSxZQUFBLENBQUEsQUpxYUEsU0toYkEsWUFBQSxDQUFBLEFMbWJBLFdLL2FBLFlBQUEsQ0FBQSxBTGtiQSxxQksvYUUsY0FBQSxBQ3NDQSxpQkFBQSxBTjRZQSxlS3JiRixBTHFiRSxjS3JiRixDQUFBLEFMMGJBLG9CTzliQSxVQUFBLENBQUEsQVBpY0EsZ0JPOWJFLFdBQUEsQVBnY0EsY0FBZSxBUWxjakIsVUFBQSxDQUFBLEFScWNBLFNRbGNFLDJCQUFBLHNCQUFBLEFSb2NBLGtDQUFtQyxBUWxjckMsMkJBQUEsQ0FBQSxBUnFjQSxXUWxjRSxrQ0FBQSxBQUNBLDRCQUFBLEFSb2NBLDRCQUE2QixBQUM3QiwyQkFBdUIsQUFBdkIscUJBQXVCLENRemN6QixBUm9kQSxpQlE3YkEsY0FBQSxDQUFBLEFSZ2NBLGtCQUNFLFdBQVksQVE3YmQsZUFBQSxDQUFBLEFSZ2NBLGNRN2JFLFVBQUEsQVIrYkEsU0FBVSxBUTdiWixrQkFBQSxDQUFBLEFSZ2NBLGNRN2JFLGVBQUEsQVIrYkEsU0FBVSxBUTdiWix1QkFBQSxDQUFBLEFSZ2NBLGNRN2JFLFVBQUEsQVIrYkEsU0FBVSxBUzdlWixrQkFBQSxDQUFBLEFUZ2ZBLFdBQ0Usa0JTamZGLEFUaWZFLGdCU2pmRixDQUFBLEFUc2ZBLFFVbmZFLHNCQUFBLEFBQ0YsZUFBQSxlQUFBLEFWcWZFLGlCV3RmUyxDQUFBLEFYdWZULGNVbmZGLGNBQUEsQUNMZSxpQkFBQSxDQUFBLEFYMmZiLFVBQ0UsYVc3ZlUsQ0FBQSxBWDhmVixnQkFDRSxhQUFlLENBQUUsQUFLdkIsc0JBQ0Usb0JBQXFCLEFVbGZ2Qiw0QkFBQSxDQUFBLEFWcWZBLE1VbGZFLDZCQUFBLEFBQ0EsV0FBQSx5QkFDQSxhQUFBLEFWb2ZBLHFCQUFzQixBVWxmeEIsMkJBQUEsd0JBQUEsc0JBQUEsa0JBQUEsQ0FBQSxBVnFmQSxZVWxmQSxVQUFBLDBCQUFBLEFWcWZBLGNVbGZFLHFCQUFBLEFWb2ZBLFlBQWEsQUFBYixZQUFhLEFVbGZmLFdBQUEsVUFBQSxDQUFBLEFWcWZBLG1CVWxmRSxjQUFBLEFBQ0EscUJBQUEsQUFDQSxlQUFBLGVBQUEsQUpLQSxvQkFBQSxBTmdmQSxpQlUxZkYsQ0FBQSxBQWVBLHNCQ2hEZSxhQUFBLENBQUEsQURrRGYsc0JDcERjLGFBQUEsQ0FBQSxBRHVEZCxzQkNoRFcsYUFBQSxDQUFBLEFYbWlCVCx5Qll6aUJGLFVBQUEsQ0FBQSxBWjRpQkEsbUJZemlCRSxnQkFBQSxBQUNBLFdBQUEsQUFDQSxnQkFBQSxBQUNBLG9CQUFBLEFBQ0Esb0JBQUEsQUFDQSxjQUFBLEFBQ0EsbUNBQUEsQUFDQSxrQ0FBQSxBWjJpQkEsZUFBa0IsQUFBbEIsaUJBQWtCLEFZemlCcEIsNkJBQUEsMEJBQUEsd0JBQUEsb0JBQUEsQ0FBQSxBWjRpQkEsZUFDRSxnQkFBaUIsQUFDakIsV1kxaUJhLENBQUEsQVo0aUJmLDRCQUNFLHlCWXZpQkYsZ0NBQUEsQ0FBQSxDQUFBLEFaMGlCQSxZWXZpQkUsY0FBQSxBQUNBLG1CQUFBLEFOa0JBLGVBQUEsaUJBQUEsQU53aEJBLG1CWTlpQkYsQ0FBQSxBQWlCQSxlRHRDZSxhQUFBLENBQUEsQUN3Q2YsZUQxQ2MsYUFBQSxDQUFBLEFDNkNkLGVEdENXLGFBQUEsQ0FBQSxBWDhrQlQsa0JZcGlCRixVQUFBLENBQUEsQVp1aUJBLFNZcGlCRSxXQUFBLEFBQ0EseUNBQUEsQUFDQSxlQUFBLGtCQUFBLEFOVEEsbUJBQUEsQU5nakJBLHdCWTVpQkYsQ0FBQSxBWm9qQkEsc0NBQ0UsR1lyaUJGLHFDQUFBLDRCQUFBLENBQUEsQVp3aUJFLEtZbmlCRixpQ0FBQSx3QkFBQSxDQUFBLENBQUEsQVoraEJBLG1DQUNFLEdZcmlCRixrQ0FBQSw0QkFBQSxDQUFBLEFad2lCRSxLWW5pQkYsOEJBQUEsd0JBQUEsQ0FBQSxDQUFBLEFaK2hCQSxpQ0FDRSxHWXJpQkYsZ0NBQUEsNEJBQUEsQ0FBQSxBWndpQkUsS1luaUJGLDRCQUFBLHdCQUFBLENBQUEsQ0FBQSxBWitoQkEsOEJBQ0UsR1lyaUJGLHFDQUFBLGtDQUFBLGdDQUFBLDRCQUFBLENBQUEsQVp3aUJFLEtZbmlCRixpQ0FBQSw4QkFBQSw0QkFBQSx3QkFBQSxDQUFBLENBQUEsQVpzaUJBLFFZbmlCRSxpQ0FBQSxBQUNBLGVBQUEsQUFDQSxhQUFBLFlBQUEsQUFDQSxnQkFBQSxBQUNBLGtCQUFBLEFBQ0EsUUFBQSxBQUNBLE1BQUEsQUM5RUEsV0FBQSxBRGdGQSxhQUFBLEFBQ0EsNkJBQUEsd0JBQUEsQUFDQSxpQ0FBQSw4QkFBQSw2QkFBQSw0QkFBQSx5QkFBQSxBTnRDQSxtRUFBQSw2REFBQSx5REFBQSxtREFBQSxBTjRrQkEseUNZbmpCRixBWm1qQkUsc0NZbmpCRixBWm1qQkUsb0NZbmpCRixBWm1qQkUsZ0NZbmpCRixDQUFBLEFBcUJBLGNBQ0ksZ0JBQUEsQ0FBQSxBWm1pQkYsYVlqaUJFLDJCQUFBLHNCQUFBLEFBQ0EsY0FBQSxBTmxERixhQUFBLGFBQUEsQU5zbEJFLFVZeGlCSixDQUFBLEFaNGlCSSxlWS9oQkosZ0JBQUEsQUFDSSx5QkFBQSxzQkFBQSxxQkFBQSxnQkFBQSxDQUFBLEFaaWlCRixrQlkvaEJFLHFDQUFBLGtDQUFBLGlDQUFBLGdDQUFBLDZCQUFBLEFBRUoseUNBQUEsbUNBQUEsK0JBQUEseUJBQUEsQUFDSSxVQUFBLHdCQUFBLEFaZ2lCRixpQlk5aEJFLGVBQUEsQUFFSixnQ0FBQSxBQUNJLCtFQUFBLHlFQUFBLHFFQUFBLDhEQUFBLENBQUEsQVoraEJGLGlCWTdoQkUsV0FBQSxBQUNBLFlBQUEsQUFDQSxlQUFBLEFBQ0EsZUFBQSxBQUVKLGdDQUFBLEFaOGhCSSxpQlk3aEJFLENBQUEsQVo4aEJGLCtCWTNoQkosaUNBQUEsOEJBQUEsNkJBQUEsNEJBQUEseUJBQUEsQUFDSSxVQUFBLDBCQUFBLEFaNmhCRixjWTNoQkUsVUFBQSx3QkFDQSxVQUFBLEFBQ0EsY0FBQSxBTnRGRix1Q0FBQSxvQ0FBQSxtQ0FBQSxrQ0FBQSwrQkFBQSxBTm9uQkUsc0RZbmlCSixBWm1pQkksZ0RZbmlCSixBWm1pQkksNENZbmlCSixBWm1pQkkscUNZbmlCSixDQUFBLEFaMGlCRSx3Qll6aEJGLHFCQUFBLEFEN0llLDZCQUFBLHVCQUFBLENBQUEsQVh5cUJiLDBCWXpoQkUsY0FBQSxBWDNJa0IsY0FBQSxBVzZJbEIsZUFBQSxpQkFBQSxBQUNBLHlDQUFBLEFOeEdGLGtCQUFBLG1CQUFBLEFOb29CRSx3QllsaUJKLENBQUEsQVpzaUJJLGdDWXZoQkosbUJBQUEsQUFDSSxVQUFBLENBQUEsQVp5aEJGLG1CWXRoQkYscUJBQUEsQUQzSlcsV0FBQSxDQUFBLEFYb3JCVCxxQk05b0JBLFdBQUEsQU5ncEJFLHdDWTNoQkosQ0FBQSxBWmdpQkEsVVlyaEJFLGVBQUEsQUFDQSxtQkFBQSxBQUVGLGlCQUFBLEFac2hCRSx5Qldwc0JhLEFYb3NCYixzQldwc0JhLEFYb3NCYixxQldwc0JhLEFYb3NCYixnQldwc0JhLENBQUEsQVhxc0JiLGVZcGhCRSxjQUFBLEFBQ0EseUNBQUEsQUFDQSxlQUFBLGVBQUEsQU54SUYsbUJBQUEsQU4rcEJFLHdCWTVoQkosQ0FBQSxBQWFBLGdCRDNMZSxZQUFBLENBQUEsQUMrTGYseUNEaE1jLGFBQUEsQ0FBQSxBWG10QlosOENZL2dCRixhQUFBLENBQUEsQVpraEJBLDJCWS9nQkUsa0JBQUEsQUFDQSxlQUFBLGVBQUEsQVppaEJBLGdCQUFrQixBWTlnQnBCLGtCQUFBLG9CQUFBLENBQUEsQVppaEJBLG9CYzd0QkEsNkZBQUEsOENBQUEsMENBQUEsbUNBQUEsQ0FBQSxBZGd1QkEsV2M3dEJFLGtDQUFBLEFBQ0EsNEJBQUEsQWJFcUIsNEJBQUEsQWFBckIsMkJBQUEsc0JBQUEsQUFDQSx5Q0FBQSxBQUNBLFdBQUEsQUFDQSxZQUFBLEFBQ0EsZ0JBQUEsZ0JBQUEsQVJtQ0Esa0JBQUEsQU42ckJBLFNjMXVCRixDQUFBLEFkK3VCRSxrQmM1dEJFLFlBQUEsQUFDQSxZQUFBLEFBQ0EsV0FBQSxBQUNBLGNBQUEsQUFDQSxrQkFBQSxBQUNBLFNBQUEsQUFFSixPQUFBLEFBQ0ksdUlBQUEsQ0FBQSxBZDZ0QkYsc0JjM3RCRSx1QkFBQSxBQUVKLGtCQUFBLEFBQ0ksU0FBQSxDQUFBLEFkNHRCRixvQmMxdEJFLHdDQUFBLEFBQ0EsV0FBQSxBQUNBLGdCQUFBLGVBQUEsQUFDQSxTQUFBLEFBQ0Esa0JBQUEsQUFDQSx5QkFBQSxBQUNBLGlDQUFBLDhCQUFBLDZCQUFBLDRCQUFBLHlCQUFBLEFSS0YsbUVBQUEsNkRBQUEseURBQUEsbURBQUEsQU53dEJFLHlDY3R1QkosQWRzdUJJLHNDY3R1QkosQWRzdUJJLG9DY3R1QkosQWRzdUJJLGdDY3R1QkosQ0FBQSxBZCt1QkUsaUJDcndCUSxXQUFBLEFhNkNOLGdCQUFBLGVBQUEsQUFDQSwyQkFBQSxBZDJ0QkEsU0FBVSxBZWx4QmQsaUJBQUEsQ0FBQSxBZnF4QkEsYWVqeEJBLHNCQUFBLEFmbXhCRSxpQmVseEJFLEFma3hCRixnQmVseEJFLENBQUEsQWZteEJGLHdCTTN1QkEsVUFBQSxBTjZ1QkUsYWV0eEJKLENBQUEsQWYweEJFLHNCZWh4QkUseUNBQUEsQUFDQSxlQUFBLGVBQUEsQUFDQSxjQUFBLEFBQ0EsU0FBQSxBQUNBLGtCQUFBLGlCQUFBLEFBQ0Esa0JBQUEsQUFFSixrQkFBQSxBZml4Qkksd0JlaHhCRSxDQUFBLEFmaXhCRiw0QmUvd0JFLCtCQUFBLDBCQUFBLEFBQ0EsV0FBQSxBQUNBLGNBQUEsQUFDQSxXQUFBLEFUa0JKLFlBQUEsWUFBQSxBTmd3QkksaUJleHhCTixBZnd4Qk0sa0JleHhCTixDQUFBLEFmNHhCRSx5QmU5d0JFLHlDQUFBLEFBQ0EsZUFBQSxlQUFBLEFBQ0EsY0FBQSxBQUNBLFNBQUEsQUFFSixvQkFBQSxzQkFBQSxBSmhDVyxpQkFBQSxDQUFBLEFYZ3pCVCxtQmU3d0JFLFdBQUEsQUFDQSx5Q0FBQSxBQUVKLGVBQUEsZUFBQSxBSnZDVyxpQkFBQSxDQUFBLEFYc3pCVCxpQmUzd0JGLFdBQUEsQWY2d0JJLG9CQ3h6QmtCLEFEd3pCbEIsbUJDeHpCa0IsQ0FBQSxBRHl6QmxCLHdIZTN3QkUseUNBQUEsQUFDQSxlQUFBLGVBQUEsQUFDQSxjQUFBLEFBQ0EsU0FBQSxBQUVOLG9CQUFBLHNCQUFBLEFBQ00saUJBQUEsQ0FBQSxBZjR3QkYsd0JnQnYwQkosY0FBQSxhQUFBLENBQUEsQWhCMDBCQSxlZ0J2MEJFLGdCQUFBLEFBQ0EseUNBQUEsQUFDQSxXQUFBLEFBQ0EsWUFBQSxBQUNBLGFBQUEsYUFBQSxBQUVGLGtCQUFBLEFoQncwQkUsU2dCdjBCRSxDQUFBLEFoQncwQkYsd0JnQnQwQkUsdUJBQUEsQUFFSixrQkFBQSxBTFhXLFNBQUEsQ0FBQSxBWG0xQlQsd0JnQnIwQkUsY0FBQSxBQUNBLGdCQUFBLGVBQUEsQWZRRixrQkFBQSxBQUNBLHlCQUFBLEFLa0JBLGdCQUFBLEFOK3lCRSxrQmdCOTBCSixDQUFBLEFoQnkxQkUsd0JDOTFCUSxXQUFBLEFld0JOLGdCQUFBLGVBQUEsQUFDQSwyQkFBQSxBQUNBLFNBQUEsQWhCeTBCQSxxQkFBcUIsQUFBckIsb0JBQXFCLEFpQjUyQnpCLGlCQUFBLENBQUEsQWpCKzJCQSxTaUI1MkJFLGtDQUFBLEFBQ0EsNEJBQUEsQWhCRXFCLDRCQUFBLEFnQkFyQiwyQkFBQSxzQkFBQSxBQUNBLHlDQUFBLEFBQ0EsV0FBQSxBQUNBLFlBQUEsQVhvQ0Esa0JBQUEsQU4yMEJBLFNpQngzQkYsQ0FBQSxBakI0M0JFLGdCaUIzMkJFLFlBQUEsQUFDQSxZQUFBLEFBQ0EsV0FBQSxBQUNBLGNBQUEsQUFDQSxrQkFBQSxBQUNBLFNBQUEsQUFFSixPQUFBLEFBQ0ksdUlBQUEsQ0FBQSxBakI0MkJGLG9CaUIxMkJFLHVCQUFBLEFoQkdGLGtCQUFBLEFBQ0EsVUFBQSxBS2NBLGtCQUFBLEFONjFCRSxvQmlCbDNCSixDQUFBLEFqQnUzQkUsa0JpQjMyQkUsV0FBQSxBQUNBLGdCQUFBLGVBQUEsQUFDQSxTQUFBLEFYT0Ysa0JBQUEsQU51MkJFLHdCaUJuM0JKLENBQUEsQWpCNDNCRSxlQ3A1QlEsV0FBQSxBZ0IyQ04sZ0JBQUEsZUFBQSxBQUNBLDJCQUFBLEFYUkYsU0FBQSxBTnEzQkUsaUJpQmwzQkosQ0FBQSxBakIwM0JFLGlCa0J2NkJBLGtCQUFBLEFBQ0EsbUNBQUEsZ0NBQUEsOEJBQUEsMkJBQUEsQVBDTSwrQkFBQSxBT0NOLDBCQUFBLHFCQUFBLEFqQkdRLFdBQUEsQWlCRFIscUJBQUEsQUFDQSwyQkFBQSxBQUVGLGVBQUEsZ0JBQUEsQWxCdzZCSSxpQmtCdjZCQSxDQUFBLEFsQnc2QkEsdUJBQ0UsZ0NBQXFDLEFtQnI3QjNDLGFBQUEsQ0FBQSxBbkJ3N0JBLFVtQnI3QkUsbUJBQUEsQUFDQSxZQUFBLEFBQ0Esa0JBQUEsQUFFRixlQUFBLGVBQUEsQW5CczdCRSxpQld4N0JNLENBQUEsQVh5N0JOLG1Cb0IxN0JBLFdBQUEsQUFDQSx5Q0FBQSxBQUNBLGVBQUEsZUFBQSxBQUNBLGNBQUEsQUFDQSxTQUFBLEFBQ0Esa0JBQUEsQUFDQSxrQkFBQSxBZG1DQSxrQkFBQSxBTjA1QkUsd0JtQmg4QkosQ0FBQSxBbkJxOEJFLGdCbUIvN0JFLHFCQUFBLEFBQ0EseUNBQUEsQUFFSixlQUFBLGVBQUEsQW5CZzhCSSxlbUIvN0JFLEFuQis3QkYsY21CLzdCRSxDQUFBLEFuQmc4QkYscUJBQ0UsZ0JtQmw4Qk4sQW5CazhCTSxjbUJsOEJOLENBQUEsQW5CdzhCRSxZbUI3N0JFLG1CQUFBLHFCQUFBLEFuQis3QkEsZ0JBQWlCLEFtQjc3QnJCLFNBQUEsQ0FBQSxBbkJnOEJBLE9tQjc3QkUsa0JBQUEsQWJhQSxxQkFBQSxBTm03QkEsWW1CbjhCRixBbkJtOEJFLFdtQm44QkYsQ0FBQSxBbkJ1OEJFLGNtQjU3QkUsa0JBQUEsQW5CODdCQSxNQUFPLEFtQjU3QlgsTUFBQSxDQUFBLEFuQis3QkEsZ0JtQjU3QkUseUNBQUEsQUFFRixxQkFBQSxBbkI2N0JFLGVtQjU3QkUsQW5CNDdCRixjbUI1N0JFLENBQUEsQW5CNjdCRixzQnFCNytCRixXQUFBLENBQUEsQXJCZy9CQSxZcUI1K0JBLG1CQUFBLEFyQjgrQkUsb0JxQjcrQkUsQXJCNitCRixtQnFCNytCRSxDQUFBLEFyQjgrQkYsdUJNdDhCQSxVQUFBLEFOdzhCRSxhcUJqL0JKLENBQUEsQXJCdy9CRSxxQnFCMytCRSxXQUFBLEFBQ0EseUNBQUEsQUFDQSxlQUFBLGVBQUEsQUFDQSxjQUFBLEFBQ0EsU0FBQSxBQUNBLGtCQUFBLGlCQUFBLEFBQ0Esa0JBQUEsQWZzQkYsa0JBQUEsQU53OUJFLHdCcUJ2L0JKLENBQUEsQXJCMi9CSSwyQnFCMStCRSwrQkFBQSwwQkFBQSxBQUNBLFdBQUEsQUFDQSxjQUFBLEFBQ0EsV0FBQSxBZldKLFlBQUEsWUFBQSxBTmsrQkksaUJxQm4vQk4sQXJCbS9CTSxrQnFCbi9CTixDQUFBLEFyQnUvQkUseUJBQ0UsYVduaENVLENBQUEsQVU0Q2QsK0JWdENXLGFBQUEsQ0FBQSxBWGdoQ1QsZ0JxQnQrQkYsV0FBQSxBQUNJLG9CQUFBLG1CQUFBLENBQUEsQUFFSixrQkFDb0IsaUJBQUEsQ0FBQSxBckJ1K0JsQixvQmtCemhDQSxlQUFBLGVBQUEsQUFDQSxtQ0FBQSxnQ0FBQSw4QkFBQSwyQkFBQSxBUENNLCtCQUFBLEFPQ04sMEJBQUEscUJBQUEsQWpCR1EsV0FBQSxBaUJEUixxQkFBQSxBQUNBLDJCQUFBLEFBRUYsZUFBQSxnQkFBQSxBbEIwaENJLGlCa0J6aENBLENBQUEsQWxCMGhDQSwwQk16L0JGLGdDQUFBLEFlT0YsYUFBQSxDQUFBLEFyQm9nQ0EsYXNCcmpDRSx5QkFBQSxBQUVGLGlDQUFBLDRCQUFBLEF0QnNqQ0UsZXNCcmpDRSxBdEJxakNGLGNzQnJqQ0UsQ0FBQSxBdEJzakNGLHdCTS9nQ0EsVUFBQSxBTmloQ0UsYXNCempDSixDQUFBLEF0QjZqQ0Usc0JzQm5qQ0UsZ0NBQUEsMkJBQUEsQUFDQSx5Q0FBQSxBaEI2QkYsZUFBQSxlQUFBLEFOeWhDRSxhc0IxakNKLENBQUEsQXRCOGpDRSxtQnNCbGpDRSxjQUFBLEFBQ0EsY0FBQSxBQUVKLFNBQUEsQXRCbWpDSSxrQlc3a0NVLEFYNmtDVixrQlc3a0NVLENBQUEsQVg4a0NWLHlCQUNFLHlCQUEwQixBdUIva0NoQyxVQUFBLENBQUEsQXZCa2xDQSxLdUIva0NBLGlCQUFBLENBQUEsQXZCa2xDQSxxQnVCL2tDQSxlQUFBLENBQUEsQXZCa2xDQSxLdUIva0NFLGtCQUFBLEFBQ0YsOENBQUEsd0NBQUEsb0NBQUEsOEJBQUEsQXZCaWxDRSxnQ3VCaGxDRSxBdkJnbENGLDZCdUJobENFLEF2QmdsQ0YsMkJ1QmhsQ0UsQXZCZ2xDRix1QnVCaGxDRSxDQUFBLEF2QmlsQ0YsZUFDRSxxQ3VCaGxDRSxBdkJnbENGLGtDdUJobENFLEF2QmdsQ0YsaUN1QmhsQ0UsQXZCZ2xDRixnQ3VCaGxDRSxBdkJnbENGLDRCdUJobENFLENBQUEsQXZCaWxDRixnQ0FDRSxjQUFlLEF1Qi9rQ3JCLHNDQUFBLG1DQUFBLGlDQUFBLDZCQUFBLENBQUEsQXZCMGxDQSxRdUIva0NFLGdCQUFBLEFBRUYsaUJBQUEsaUJBQUEsQXZCZ2xDRSxpQnVCL2tDSSxDQUFBLEF2QmdsQ0oseUJ1QjlrQ0ksV0FBQSxBQUNOLGNBQUEsQUFDSSxVQUFBLENBQUEsQXZCZ2xDRixpQnVCOWtDRSxjQUFBLEFBQ0EseUNBQUEsQUFDQSxnQkFBQSxBQUNKLHlCQUFBLEFBQ0ksbUJBQUEsa0JBQUEsQ0FBQSxBdkJnbENGLHVCdUI5a0NGLG1CQUFBLEFBQ0ksYUFBQSxDQUFBLEFBQ0osdUJBQ0ksZUFBQSxDQUFBLEF2QmdsQ0YsV3VCOWtDRSxtQkFBQSxtQkFBQSxBQUNBLDBCQUFBLHFCQUFBLEFBQ0osNENBQUEsdUNBQUEsQUFDSSwyQkFBQSx3QkFBQSxzQkFBQSxrQkFBQSxDQUFBLEF2QmdsQ0YsZ0J3QmhvQ0EsU0FBQSxBQUVBLGNBQUEsQUFDQSxnQkFBQSxBQUNBLGtCQUFBLEFBQ0Esd0JBQUEsQUFDQSw0QkFBQSxBQUNBLDJCQUFBLHNCQUFBLEFBRUYsaUJBQUEsQXhCaW9DSSxjd0Job0NBLENBQUEsQXhCaW9DQSxzQndCL25DQSxXQUFBLEFBQ0EsY0FBQSxBRHNDSixtQkFBQSxBQUNJLFVBQUEsQ0FBQSxBdkI0bENGLFl1QjFsQ0UsY0FBQSxBQUNKLFdBQUEsQUFDSSxxQ0FBQSwrQkFBQSxDQUFBLEF2QjRsQ0YscUJ1QjFsQ0Usa0JBQUEsQUFDQSxNQUFBLEFBQ0EsT0FBQSxBQUNBLFdBQUEsQUFDQSxZQUFBLEFBQ0EsOEJBQUEsQUFDQSxVQUFBLHdCQUNKLHFDQUFBLGdDQUFBLEF2QjRsQ0ksK0J1QjNsQ0UsQXZCMmxDRiw0QnVCM2xDRSxBdkIybENGLDBCdUIzbENFLEF2QjJsQ0Ysc0J1QjNsQ0UsQ0FBQSxBdkI0bENGLDBCdUIxbENFLGtCQUFBLEFBQ0EsU0FBQSxBQUNBLFFBQUEsQUFDQSxZQUFBLEFBQ0EsV0FBQSxBQUNBLG9EQUFBLGlEQUFBLGdEQUFBLCtDQUFBLDRDQUFBLEF0QnRFaUIsV0FBQSxBc0J3RXZCLGVBQUEsZUFBQSxBWjVFZSx3Q0FBQSxDQUFBLEFYeXFDYixrQkNycUNxQixtQkFBQSxBc0I0RW5CLGtCQUFBLEFBQ0EseUNBQUEsQVo5RUksZ0JBQUEsQVlnRkosY0FBQSxpQkFBQSxBQUNBLFdBQUEsQUFDSixlQUFBLGVBQUEsQXZCNGxDSSx3QnVCM2xDRSxDQUFBLEF2QjRsQ0YsdUJ1QjFsQ0UsY0FBQSxBQUNOLGdCQUFBLEFBQ00sZ0JBQUEsZ0JBQUEsQ0FBQSxBdkI0bENGLHdCdUIxbENKLGVBQUEsQ0FBQSxBdkI2bENBLDJCdUIxbENBLDZDQUFBLHVDQUFBLENBQUEsQXZCNmxDQSxnRHVCMWxDQSxVQUFBLDBCQUFBLEF2Qm9tQ0EsNkJ3Qm5zQ0UsY0FBQSxBQUNBLGdCQUFBLEFBQ0Esa0JBQUEsQUFDQSx3QkFBQSxBQUNBLDRCQUFBLEFBQ0EsMkJBQUEsc0JBQUEsQUFFRixpQkFBQSxBeEJvc0NFLGN3Qm5zQ0UsQ0FBQSxBeEJvc0NGLG1Dd0Jsc0NFLFdBQUEsQUFDQSxjQUFBLEF4Qm9zQ0EsbUJBQW9CLEF1QnRtQ3hCLFVBQUEsQ0FBQSxBdkJ5bUNBLGN1QnRtQ0UsZUFBQSxBQUNBLE1BQUEsQUFDQSxRQUFBLEFBQ0EsWUFBQSxBQUNBLFlBQUEsQVpySFksZ0JBQUEsQVl1SFosaUNBQUEsQUFDQSxtQkFBQSxBQUNBLGFBQUEsQUFDQSxvQ0FBQSxpQ0FBQSxnQ0FBQSwrQkFBQSw0QkFBQSxBQUNGLDhDQUFBLHdDQUFBLG9DQUFBLDhCQUFBLEF2QndtQ0UsZ0N1QnZtQ0UsQXZCdW1DRiw2QnVCdm1DRSxBdkJ1bUNGLDJCdUJ2bUNFLEF2QnVtQ0YsdUJ1QnZtQ0UsQ0FBQSxBQUNKLHVCQUNJLGdDQUFBLDZCQUFBLDRCQUFBLDJCQUFBLHVCQUFBLENBQUEsQUFDSixtQkFDSSxpQkFBQSxDQUFBLEF2QndtQ0YseUJ1QnRtQ0UsV0FBQSxBQUNBLGtCQUFBLEFBQ0EsU0FBQSxBQUNBLE9BQUEsQUFDQSxXQUFBLEFBRUosWUFBQSxBQUNJLHNFQUFBLG1FQUFBLGlFQUFBLDZEQUFBLENBQUEsQXZCdW1DRixrQnVCcG1DRixXQUFBLEFBQ0ksYUFBQSxDQUFBLEF2QnNtQ0YseUN1Qm5tQ0YsYUFBQSxhQUFBLEF2QnFtQ0ksVVdodkNJLENBQUEsQVhpdkNKLCtDdUJubUNFLFdBQUEsQUFDQSx5Q0FBQSxBQUNBLGVBQUEsZUFBQSxBQUNBLGNBQUEsQUFDQSxTQUFBLEFBQ0Esa0JBQUEsaUJBQUEsQUFDQSxrQkFBQSxBakI1R0osa0JBQUEsQU5rdENJLHdCdUIvbUNOLENBQUEsQXZCc25DTSxxRHVCbG1DRSwrQkFBQSwwQkFBQSxBQUNBLFdBQUEsQUFDQSxjQUFBLEFBQ0EsV0FBQSxBakIxSE4sWUFBQSxZQUFBLEFOK3RDTSxpQnVCM21DUixBdkIybUNRLGtCdUIzbUNSLENBQUEsQXZCK21DSSxrRHVCam1DRSx5Q0FBQSxBQUNBLGVBQUEsZUFBQSxBQUNBLFVBQUEsQUFFTixrQkFBQSxBWjVLVyx3QkFBQSxDQUFBLEFYK3dDUCw0Q016dUNGLFdBQUEsQU4ydUNJLG9CdUJybUNOLEF2QnFtQ00sbUJ1QnJtQ04sQ0FBQSxBdkJ5bUNNLCtDdUIvbENFLHlDQUFBLEFBQ0EsZUFBQSxlQUFBLEFBQ0EsY0FBQSxBakJsSk4sb0JBQUEsc0JBQUEsQU5vdkNNLGlCdUJ2bUNSLENBQUEsQXZCNG1DQSx3RHVCL2xDQSxZQUFBLENBQUEsQXZCd25DQSxxQnVCN2xDRSxXQUFBLEFBQ0EsWUFBQSxBQUNBLGdCQUFBLEFBQ0EsZUFBQSxBQUNBLFNBQUEsQUFDQSxXQUFBLEFBQ0EsMEVBQUEsQUFDQSxpQkFBQSxBQUNBLG1CQUFBLEFBQ0YsYUFBQSxBdkIrbENFLFl1QjlsQ0UsQ0FBQSxBdkIrbENGLGdDQUNFLGNBQWUsQXVCN2xDbkIsc0NBQUEsbUNBQUEsaUNBQUEsNkJBQUEsQ0FBQSxBdkJnbUNBLGlCdUI3bENFLGtCQUFBLEFBQ0EsTUFBQSxBQUNBLE9BQUEsQUFDQSxXQUFBLEFBQ0EsWUFBQSxBQUNBLDhCQUFBLEFBQ0EsZUFBQSxBdkIrbENBLGFBQWMsQUFDZCxZdUI3bENTLENBQUEsQXZCK2xDWCxtQ0FDRSxHdUI3bENGLFVBQUEsd0JBQUEsQXZCZ21DRSxLQUNFLFV1QjdsQ08sMEJBQUEsQ0FBQSxBdkJ3bENYLGdDQUNFLEd1QjdsQ0YsVUFBQSx3QkFBQSxBdkJnbUNFLEtBQ0UsVXVCN2xDTywwQkFBQSxDQUFBLEF2QndsQ1gsOEJBQ0UsR3VCN2xDRixVQUFBLHdCQUFBLEF2QmdtQ0UsS0FDRSxVdUI3bENPLDBCQUFBLENBQUEsQXZCd2xDWCwyQkFDRSxHdUI3bENGLFVBQUEsd0JBQUEsQXZCZ21DRSxLQUNFLFV1QjdsQ08sMEJBQUEsQ0FBQSxBdkIrbENYLG1DQUNFLEd1QjdsQ0YsaURBQUEsd0NBQUEsQ0FBQSxBdkJnbUNFLEt5QnAyQ0YsK0NBQUEsc0NBQUEsQ0FBQSxDQUFBLEF6QmcyQ0EsZ0NBQ0UsR3VCN2xDRiw4Q0FBQSx3Q0FBQSxDQUFBLEF2QmdtQ0UsS3lCcDJDRiw0Q0FBQSxzQ0FBQSxDQUFBLENBQUEsQXpCZzJDQSw4QkFDRSxHdUI3bENGLDRDQUFBLHdDQUFBLENBQUEsQXZCZ21DRSxLeUJwMkNGLDBDQUFBLHNDQUFBLENBQUEsQ0FBQSxBekJnMkNBLDJCQUNFLEd1QjdsQ0YsaURBQUEsOENBQUEsNENBQUEsd0NBQUEsQ0FBQSxBdkJnbUNFLEt5QnAyQ0YsK0NBQUEsNENBQUEsMENBQUEsc0NBQUEsQ0FBQSxDQUFBLEF6QnUyQ0EsTXlCcDJDRSxnQkFBQSxBQUNBLFNBQUEsQUFDQSxXQUFBLEFBQ0EsaUJBQUEsQXpCczJDQSxnQkFBaUIsQUFDakIsaUJBQW1CLENBQUUsQUFHdkIsYXlCcDJDRSxrQkFBQSxBQUNBLFVBQUEsQUFDQSxxQkFBQSxBQUNBLGdCQUFBLEFBQ0EsaUJBQUEsdUJBQUEsQUFDQSxVQUFBLEFBQ0EsYUFBQSxBQUNBLG1CQUFBLEFuQnlCQSxrQkFBQSxBTjgwQ0EsY3lCajNDRixDQUFBLEF6QjAzQ0EsaUJ5QnAyQ0Usa0JBQUEsQUFDQSxjQUFBLEF6QnMyQ0EsZ0JBQWlCLEF5QnAyQ25CLFdBQUEseUJBQUEsQXpCdTJDQSx3QnlCcDJDRSxhQUFBLGFBQUEsQUFDQSxXQUFBLEFBQ0EseUJBQUEsQUFDQSxlQUFBLGtCQUFBLEF6QnMyQ0EsbUNBQW9DLEF5QnAyQ3RDLGdDQUFBLDBCQUFBLENBQUEsQXpCdTJDQSw2RHlCbjJDQSxtQkFBQSxDQUFBLEF6QnMyQ0EsdUN5QmwyQ0Usa0JBQUEsQUFDQSxNQUFBLEFBQ0EsT0FBQSxBekJvMkNBLFdBQVksQUFDWixXQUFhLENBQUUsQUFJakIsZXlCbDJDRSxhQUFBLEFBQ0EsaUJBQUEsQUFDQSxtQkFBQSxBekJvMkNBLFlBQWEsQXlCbDJDZixVQUFBLHdCQUFBLEF6QnEyQ0EsZ0J5QmwyQ0Usa0JBQUEscUJBQUEsQW5CdEJBLGVBQUEsZUFBQSxBTjIzQ0EsZXlCeDJDRixDQUFBLEF6QjYyQ0EscUJ5QmwyQ0EsZUFBQSxDQUFBLEF6QnEyQ0EsK0J5QmoyQ0EsUUFBQSxDQUFBLEF6Qm8yQ0EsZUFDRSxrQkFBb0IsQ0FBRSxBQUt4QixvQnlCaDJDQSw2QkFBQSxDQUFBLEF6Qm0yQ0Esd0J5QmgyQ0UsV0FBQSx5QnpCazJDQSxnQ0FBa0MsQXlCaDJDcEMsNkJBQUEsMkJBQUEsdUJBQUEsQ0FBQSxBekJtMkNBLCtCeUJoMkNFLGFBQUEsYUFBQSxBQUNBLG9DQUFBLEF6QmsyQ0EseUNBQTJDLEF5QmgyQzdDLHNDQUFBLG9DQUFBLGdDQUFBLENBQUEsQXpCbTJDQSxzQ3lCaDJDRSxrQkFBQSxBQUNBLFNBQUEsQUFDQSxXQUFBLEFBQ0EsWUFBQSxBQUNBLFVBQUEsQXpCazJDQSxzQkFBdUIsQXlCaDJDekIsVUFBQSxDQUFBLEF6Qm0yQ0EsdUJ5QmgyQ0Usa0JBQUEsQUFDQSwwQ0FBQSxBQUNBLG9DQUFBLGdDQUFBLDBCQUFBLEF6QmsyQ0Esd0NBQTJDLEF5QmgyQzdDLHFDQUFBLCtCQUFBLENBQUEsQXpCbTJDQSw0RHlCLzFDRSxVQUFBLHdCQUNBLHVEQUFBLEFBQ0EsaURBQUEsNkNBQUEsdUNBQUEsQXpCaTJDQSwyQkFBNEIsQXlCLzFDOUIsd0JBQUEsdUJBQUEsc0JBQUEsa0JBQUEsQ0FBQSxBekJrMkNBLDZCQUNFLHFDQUF3QyxBeUIvMUMxQyxrQ0FBQSw0QkFBQSxDQUFBLEF6QmsyQ0Esd0V5QjkxQ0UsVUFBQSwwQnpCZzJDQSwyQkFBNEIsQXlCOTFDOUIsd0JBQUEsdUJBQUEsc0JBQUEsa0JBQUEsQ0FBQSxBekJpMkNBLHFDeUI5MUNBLGlDQUFBLENBQUEsQXpCaTJDQSw4QjBCeitDaUIsV0FBQSx5QkFBQSxBMUI0K0NqQix1QzBCeitDRSxtQ0FBQSxnQ0FBQSwyQkFBQSxBQUNBLHVCQUFBLG9CQUFBLGtCQUFBLGVBQUEsQUFDQSxvQ0FBQSxpQ0FBQSw0QkFBQSxBQUNBLGtCQUFBLEExQjIrQ0EsTUFBTyxBMEJ6K0NXLE1BQUEsQ0FBQSxBMUI0K0NwQix5REFDRSxZQUFhLEEwQnorQ2YsWUFBQSxDQUFBLEExQjQrQ0EsYUFDRSx5QkFBMEIsQTBCMStDNUIsaUJBQUEsQ2ZYUSxBWHcvQ04sc0JvQnovQ0EsV0FBQSxBQUNBLHlDQUFBLEFBQ0EsZUFBQSxlQUFBLEFBQ0EsY0FBQSxBQUNBLFNBQUEsQUFDQSxrQkFBQSxBQUNBLGtCQUFBLEFkbUNBLGtCQUFBLEFOeTlDRSx3QjBCdC9DSixDQUFBLEExQjIvQ0Usa0IwQnQvQ0UseUJBQUEsc0JBQUEsaUJBQUEsQUFDQSxvQ0FBQSxpQ0FBQSw0QkFBQSxBMUJ3L0NBLHFCQUFzQixBMEJyL0MxQixnQkFBQSxDQUNNLEFBQ04sMkNBQ00sZ0NBQUEsNkJBQUEsdUJBQUEsQ0FBQSxBQUNOLDRDMUJ1L0NNLGtDQUEyQixBQUEzQiwrQkFBMkIsQUFBM0IseUJBQTJCLENBQUUsQUFHakMsbUIwQi8rQ0UseUJBQUEsQUFDQSxjQUFBLEFBQ0osaUJBQUEsQTFCbS9DSSxtQ0N0aERrQixBRHNoRGxCLGdDQ3RoRGtCLEFEc2hEbEIsMEJDdGhEa0IsQ0FBQSxBRHVoRGxCLDRCMEJqL0NKLHlDQUFBLEF6QnZDdUIsYUFBQSxDQUFBLEF5QjBDdkIseUJBQ0ksd0NBQUEsQ0FBQSxBMUJrL0NGLHNCMEJoL0NFLHVCQUFBLG9CQUFBLGtCQUFBLGVBQUEsQTFCay9DQSxvQ0FBNkIsQUFBN0IsaUNBQTZCLEFBQTdCLDRCQUE2QixBQUM3QixpQkFBbUIsQ0FBRSxBQTVtQ3ZCLHlCQUNFLHFCSzlhSixnQkFBQSxDQUFBLEFDZ0NFLFlNdEJGLGdCQUFBLENBQUEsQU5zQkUsU01JRixjQUFBLENBQUEsQ1BwQ0EsQUxzY0UsbVdNdGFBLFdFdkNGLDRCQUFBLENBQUEsQ0FBQSxBUmdkRSx3QkFDRSxXUTliSiw0QkFBQSxDQUFBLENBQUEsQVJ5ZEUsd0JBQ0UsV1VuZkosZ0JBQUEsQ0FBQSxBQWdEQSxtQkMvQ2MsY0FBQSxDQUFBLEFDdUZkLFFBQ0ksV0FBQSxDQUFBLEFBV0osYUFDTSxjQUFBLENBQUEsQVpzcUJBLG9CY3p0Qk4sZUFBQSxBSDdDUSxRQUFBLENBQUEsQUlNUix3QmRMdUIsVUFBQSxDQUFBLEFEbzVCakIsa0JpQjEyQk4sZUFBQSxBTjNDUSxRQUFBLENBQUEsQVhrNkJGLGVpQngyQk4sZUFBQSxBQUNvQixRQUFBLENBQUEsQWpCeTRCZCxtQm1CLzdCTixlQUFBLEFBQ0ksbUJBQUEsQ0FBQSxBbkJ5OEJJLHFCbUI5N0JBLGVBQUEsQUFFUixpQkFBQSxBQUNJLG9CQUFBLENBQUEsQUVYSix1QlZQVyxVQUFBLENBQUEsQVdLWCx3QkFDSSxTQUFBLENBQUEsQUFRSixzQlhuQmUsZ0JBQUEsQ0FBQSxBWStKZiwrQ0FDUSxjQUFBLENBQUEsQXZCOHRDSixhQUNFLFdBQVksQXlCcDJDbEIsWUFBQSxDQUFBLEF6QjY0Q0ksZ0J5QmwyQ0osZ0JBQUEsQ0FBQSxBekJnOENNLHNCMEJ0L0NOLGVBQUEsQUFDSSxtQkFBQSxDQUFBLENoQm5CSixBVjhoQkUsK0NNamZBLG1CSVZGLGdCQUFBLENBQUEsQVZvdUJNLG9CTTF0QkosZUFBQSxBUWRGLFFBQUEsQ0FBQSxBZCt6Qk0sd0JDbjBCSixlQUFBLEFLa0JBLGtCQUFBLEFVL0JGLG9CQUFBLENBQUEsQVYrQkUsZVdHRixjQUFBLENBQUEsQVhIRSx1QmV6Q0YsU0FBQSxDQUFBLENYK0JBLEFWc2lCRSx3Qk01aEJBLFlNdEJGLGNBQUEsQ0FBQSxBWjJrQkksU0FDRSxZWXJpQkssQ0FBQSxBWmlvQkwscUJZcmhCTixZQUFBLENBQUEsQUFnQkEsZUFDSSxZQUFBLENBQUEsQVppakJBLFdjNXRCSiw2QkFBQSxBQUNJLGNBQUEsQ0FBQSxBQ2VKLDRCZDFCdUIsVUFBQSxDQUFBLEFnQlF2QixTQUNJLDRCQUFBLENBQUEsQWpCNjNCRSxvQmlCMzJCTixrQkFBQSxBTjVCUSxvQkFBQSxDQUFBLEFYaTVCRixrQk16MkJKLGVBQUEsQVdaRixRQUFBLENBQUEsQUVJQSxPQUNJLGdCQUFBLENBQUEsQUVWSixxQkFDTSxjQUFBLENBQUEsQUFVTiwyQlZyQ2UsVUFBQSxDQUFBLEFYd2lDVCxvQmtCdmlDSixlQUFBLEFBQ0EsbUNBQUEsZ0NBQUEsOEJBQUEsMkJBQUEsQVBDTSwrQkFBQSxBT0NOLDBCQUFBLHFCQUFBLEFqQkdRLFdBQUEsQWlCRFIscUJBQUEsQUFDQSwyQkFBQSxBQUVGLGdCQUFBLEFsQndpQ1EsaUJrQnZpQ0osQ0FBQSxBbEJ3aUNJLDBCQUNFLGdDQUFxQyxBc0JyakMvQyxhQUFBLENBQUEsQUM0S0EscUR0QnRLdUIsVUFBQSxDQUFBLEFzQm9MdkIsNEN0QnBMdUIsbUJBQUEsQ0FBQSxBRDZ4Q2IsK0N1Qi9sQ1Ysb0JBQUEsQ0FBQSxBakJ2SkUsYW1CbkNGLFVBQUEsQ0FBQSxDYmFBLEFacWpCRSx3Qll0aUJGLFlEckNjLGdCQUFBLENBQUEsQUMwSWQsY0FDSSxVQUFBLENBQUEsQUFjSiwwQkR6SmMsZ0JBQUEsQ0FBQSxDQUFBLEFYaXFCVix5Qk1ybkJGLGNNaUZGLFNBQUEsQ0FBQSxBTmpGRSwrQ2lCbUdGLFNBQUEsQ0FBQSxDWGxCQSxBWm91QkksOENBQ0Usd0JDeDBCSixlQUFBLEFlRUYsa0JBQUEsQUx4QlEsb0JBQUEsQ0FBQSxDQUFBLEFYOGxDUix5Q0FDRSxldUIva0NGLHFDQUFBLGtDQUFBLGlDQUFBLGdDQUFBLDRCQUFBLENBQUEsQXZCNnFDRSxXdUIxbENGLHFCQUFBLEFBQ0ksU0FBQSxDQUFBLEF2QjRsQ0YseUJ1QjFsQ0YsY0FBQSxDQUFBLEF2QityQ0UsY3VCL2xDRixZQUFBLEFBQ0ksb0NBQUEsaUNBQUEsZ0NBQUEsK0JBQUEsMkJBQUEsQ0FBQSxBQUNKLHlDQUNJLFlBQUEsQ0FBQSxBdkJpbUNGLDJDdUIvbENGLGFBQUEsQ0FBQSxDQTNMQSxBdkJrbENBLDBDQUNFLGV1Qi9rQ0YscUNBQUEsa0NBQUEsaUNBQUEsZ0NBQUEsNEJBQUEsQ0FBQSxDQUFBLEF2Qnl4Q0EsMENBQ0UsY3VCL2xDRSxtQ0FBQSw4QkFBQSxBQUNKLFlBQUEsQUFDSSxxQ0FBQSxrQ0FBQSxpQ0FBQSxnQ0FBQSw0QkFBQSxDQUFBLEFBQ0osdUNBQ0ksWUFBQSxDQUFBLEF2QmltQ0YseUN1QjdsQ0YsYUFBQSxBQUNJLG9DQUFBLGlDQUFBLGdDQUFBLCtCQUFBLDJCQUFBLENBQUEsQXZCK2xDRiwwRHVCN2xDRixnQ0FBQSw2QkFBQSw0QkFBQSwyQkFBQSx1QkFBQSxDQUFBLENBQUEsQXZCMjBDQSxpZzFGQUFpZzFGIiwiZmlsZSI6Ijxuby1vdXRwdXQ+Iiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuQGltcG9ydCB1cmwoXCIvL2hlbGxvLm15Zm9udHMubmV0L2NvdW50LzJjMTM5YVwiKTtcbi8qXG4gIFRoZW1lIE5hbWU6IFNMQVdcbiAgQXV0aG9yOiBTT0xWTVxuICBBdXRob3IgVVJJOiBodHRwOi8vc29sdm0uY29tXG4gIERlc2NyaXB0aW9uOiBDdXN0b20gV1AgVGhlbWUgZm9yIFNMQVdcbiAgVmVyc2lvbjogMS4wICovXG5odG1sIHtcbiAgZm9udC1zaXplOiAyMnB4OyB9XG5cbmJvZHkge1xuICBjb2xvcjogIzMzMztcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1mYW1pbHk6IFwiVVJXR3JvdGVzay1SZWdcIiwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luLXRvcDogMDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7IH1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxuXG5vbCB7XG4gIHBhZGRpbmctbGVmdDogM3JlbTsgfVxuXG5saSB7XG4gIG1hcmdpbi10b3A6IDBweDtcbiAgbWFyZ2luLWJvdHRvbTogMHB4OyB9XG5cbnAsIG9sLCB1bCB7XG4gIHBhZGRpbmctYm90dG9tOiAxLjVyZW07IH1cblxuZmlndXJlLndpZGUge1xuICBoZWlnaHQ6IDY2MHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aWR0aDogMTAwJTsgfVxuICBmaWd1cmUud2lkZSBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHRyYW5zbGF0ZVgoLTUwJSk7IH1cblxuXFw6OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICNmZWMwNTc7IH1cblxuLyogKiArICoge1xuICogICAgbWFyZ2luLXRvcDogMS41cmVtO1xuICp9ICovXG4uZnVsbCB7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5saXN0T24gb2wgbGksIG9sLnNpbXBsZUxpc3QgbGkge1xuICBsaXN0LXN0eWxlLXR5cGU6IGRlY2ltYWw7XG4gIHBhZGRpbmctbGVmdDogLjI1cmVtO1xuICBtYXJnaW4tbGVmdDogLS4yNXJlbTsgfVxuXG5vbC5zaW1wbGVMaXN0IGxpIG9sIGxpIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBsb3dlci1hbHBoYTtcbiAgcGFkZGluZy1sZWZ0OiAuMjVyZW07XG4gIG1hcmdpbi1sZWZ0OiAtLjI1cmVtOyB9XG5cbm9sLnNpbXBsZUxpc3QgbGkgb2wgbGkgb2wgbGkge1xuICBsaXN0LXN0eWxlLXR5cGU6IGxvd2VyLXJvbWFuO1xuICBwYWRkaW5nLWxlZnQ6IC4yNXJlbTtcbiAgbWFyZ2luLWxlZnQ6IC0uMjVyZW07IH1cblxuLmxpc3RPbiB1bCBsaSwgdWwuc2ltcGxlTGlzdCBsaSB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogZGlzYztcbiAgcGFkZGluZy1sZWZ0OiAuMjVyZW07XG4gIG1hcmdpbi1sZWZ0OiAtLjI1cmVtOyB9XG5cbnVsLnNpbXBsZUxpc3QgbGkgdWwgbGkge1xuICBsaXN0LXN0eWxlLXR5cGU6IGNpcmNsZTtcbiAgcGFkZGluZy1sZWZ0OiAuMjVyZW07XG4gIG1hcmdpbi1sZWZ0OiAtLjI1cmVtOyB9XG5cbm9sLmxpc3RTcGFjZSBsaSB7XG4gIHBhZGRpbmctdG9wOiAxLjVyZW07IH1cblxuaW5wdXQsIHRleHRhcmVhIHtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLmJvbGQsIHN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7IH1cblxuLm5vcm1hbCB7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7IH1cblxuLml0YWxpYyB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYyAhaW1wb3J0YW50OyB9XG5cbi51cGNhc2UsIC51cENhc2UsIC5jYXBzIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuXG4uaW5oZXJpdCB7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDsgfVxuXG4udGV4dENlbnRlciwgLnRleHRDIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi50ZXh0TGVmdCwgLnRleHRMIHtcbiAgdGV4dC1hbGlnbjogbGVmdDsgfVxuXG4udGV4dFJpZ2h0LCAudGV4dFIge1xuICB0ZXh0LWFsaWduOiByaWdodDsgfVxuXG4uaW5kZW50IHtcbiAgdGV4dC1pbmRlbnQ6IDNyZW07IH1cblxuKiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG4qLCAqOmJlZm9yZSwgKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1haW4sIG1lbnUsIG5hdiwgc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbmJsb2NrcXVvdGUsIHEge1xuICBxdW90ZXM6IG5vbmU7IH1cblxuYmxvY2txdW90ZTpiZWZvcmUsIGJsb2NrcXVvdGU6YWZ0ZXIsIHE6YmVmb3JlLCBxOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIGNvbnRlbnQ6IG5vbmU7IH1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDsgfVxuXG4vKipcbiAqIEBsaWNlbnNlXG4gKiBNeUZvbnRzIFdlYmZvbnQgQnVpbGQgSUQgMjg4ODYwMiwgMjAxNC0wOS0yM1QxNzo0MToyOS0wNDAwXG4gKlxuICogVGhlIGZvbnRzIGxpc3RlZCBpbiB0aGlzIG5vdGljZSBhcmUgc3ViamVjdCB0byB0aGUgRW5kIFVzZXIgTGljZW5zZVxuICogQWdyZWVtZW50KHMpIGVudGVyZWQgaW50byBieSB0aGUgd2Vic2l0ZSBvd25lci4gQWxsIG90aGVyIHBhcnRpZXMgYXJlXG4gKiBleHBsaWNpdGx5IHJlc3RyaWN0ZWQgZnJvbSB1c2luZyB0aGUgTGljZW5zZWQgL3dlYmZvbnRzKHMpLlxuICpcbiAqIFlvdSBtYXkgb2J0YWluIGEgdmFsaWQgbGljZW5zZSBhdCB0aGUgVVJMcyBiZWxvdy5cbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrLUxpZ09ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbGlnaHQtb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tFeHRXaWQtQm9sIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1ib2xkLWV4dHJhLXdpZGUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrRXh0TmFyLUxpZ09ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbGlnaHQtZXh0cmEtbmFycm93LW9ibGlxdWUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrV2lkLUxpZ09ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbGlnaHQtd2lkZS1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0V4dFdpZC1FeHRMaWdPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWV4dHJhLWxpZ2h0LWV4dHJhLXdpZGUtb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2stTWVkT2JsIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1tZWRpdW0tb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2stQm9sSXRhIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1ib2xkLWl0YWxpYy9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2stRXh0TGlnT2JsIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1leHRyYS1saWdodC1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0V4dFdpZC1Cb2xPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWJvbGQtZXh0cmEtd2lkZS1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVzay1Cb2xPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWJvbGQtb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tOYXItUmVnIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1yZWd1bGFyLW5hcnJvdy9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2stRXh0TGlnIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1leHRyYS1saWdodC9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tXaWQtTGlnIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1saWdodC13aWRlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0V4dFdpZC1MaWdPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWxpZ2h0LWV4dHJhLXdpZGUtb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tOYXItTGlnIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1saWdodC1uYXJyb3cvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrV2lkLUJvbCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtYm9sZC13aWRlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza1dpZC1FeHRMaWcgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWV4dHJhLWxpZ2h0LXdpZGUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrLUxpZ0l0YSBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbGlnaHQtaXRhbGljL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza05hci1Cb2wgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWJvbGQtbmFycm93L1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza05hci1FeHRMaWdPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWV4dHJhLWxpZ2h0LW5hcnJvdy1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0V4dFdpZC1MaWcgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWxpZ2h0LWV4dHJhLXdpZGUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrLU1lZCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbWVkaXVtL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0V4dFdpZC1NZWRPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LW1lZGl1bS1leHRyYS13aWRlLW9ibGlxdWUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrV2lkLU1lZCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbWVkaXVtLXdpZGUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrRXh0TmFyLU1lZCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbWVkaXVtLWV4dHJhLW5hcnJvdy9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tFeHRXaWQtUmVnT2JsIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1yZWd1bGFyLWV4dHJhLXdpZGUtb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tFeHRXaWQtRXh0TGlnIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1leHRyYS1saWdodC1leHRyYS13aWRlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0NvbkUtTGlnIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stY29uZC1leHRyYWxpZ2h0L1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza05hci1MaWdPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWxpZ2h0LW5hcnJvdy1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVzay1NZWRJdGEgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LW1lZGl1bS1pdGFsaWMvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrQ29uLUxpZyBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbGlnaHQtY29uZGVuc2VkL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0V4dE5hci1Cb2xPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWJvbGQtZXh0cmEtbmFycm93LW9ibGlxdWUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrTmFyLU1lZE9ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbWVkaXVtLW5hcnJvdy1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVzay1SZWdPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LXJlZ3VsYXItb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tXaWQtUmVnIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1yZWd1bGFyLXdpZGUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrTmFyLUV4dExpZyBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtZXh0cmEtbGlnaHQtbmFycm93L1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVzay1SZWcgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LXJlZ3VsYXIvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDcgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrTmFyLUJvbE9ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtYm9sZC1uYXJyb3ctb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tXaWQtRXh0TGlnT2JsIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1leHRyYS1saWdodC13aWRlLW9ibGlxdWUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrLUxpZyBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbGlnaHQvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrRXh0TmFyLUV4dExpZ09ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtZXh0cmEtbGlnaHQtZXh0cmEtbmFycm93LW9ibGlxdWUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrRXh0TmFyLVJlZ09ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtcmVndWxhci1leHRyYS1uYXJyb3ctb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tXaWQtTWVkT2JsIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1tZWRpdW0td2lkZS1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza1NDLVJlZyBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXNjLXQtcmVndWxhci9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2stUmVnSXRhIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1yZWd1bGFyLWl0YWxpYy9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tFeHRXaWQtUmVnIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1yZWd1bGFyLWV4dHJhLXdpZGUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrTmFyLU1lZCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbWVkaXVtLW5hcnJvdy9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tFeHRXaWQtTWVkIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1tZWRpdW0tZXh0cmEtd2lkZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tTQy1MaWcgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay1zYy10LWxpZ2h0L1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0Nvbi1Cb2wgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWJvbGQtY29uZGVuc2VkL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0V4dE5hci1Cb2wgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWJvbGQtZXh0cmEtbmFycm93L1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0V4dE5hci1NZWRPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LW1lZGl1bS1leHRyYS1uYXJyb3ctb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tXaWQtQm9sT2JsIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1ib2xkLXdpZGUtb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tXaWQtUmVnT2JsIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1yZWd1bGFyLXdpZGUtb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tOYXItUmVnT2JsIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1yZWd1bGFyLW5hcnJvdy1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVzay1Cb2wgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWJvbGQvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrRXh0TmFyLUxpZyBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbGlnaHQtZXh0cmEtbmFycm93L1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0V4dE5hci1FeHRMaWcgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWV4dHJhLWxpZ2h0LWV4dHJhLW5hcnJvdy9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tFeHROYXItUmVnIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1yZWd1bGFyLWV4dHJhLW5hcnJvdy9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqXG4gKiBMaWNlbnNlOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL3ZpZXdsaWNlbnNlP3R5cGU9d2ViJmJ1aWxkaWQ9Mjg4ODYwMlxuICogTGljZW5zZWQgcGFnZXZpZXdzOiAyMCwwMDBcbiAqXG4gKiDCqSAyMDE0IE15Rm9udHMgSW5jICovXG4vKiBAaW1wb3J0IG11c3QgYmUgYXQgdG9wIG9mIGZpbGUsIG90aGVyd2lzZSBDU1Mgd2lsbCBub3Qgd29yayAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnVVJXR3JvdGVzay1SZWcnO1xuICBzcmM6IHVybChcIi93ZWJmb250cy8yQzEzOUFfMjRfMC5lb3RcIik7XG4gIHNyYzogdXJsKFwiL3dlYmZvbnRzLzJDMTM5QV8yNF8wLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi93ZWJmb250cy8yQzEzOUFfMjRfMC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi93ZWJmb250cy8yQzEzOUFfMjRfMC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnVVJXR3JvdGVzay1SZWdJdGEnO1xuICBzcmM6IHVybChcIi93ZWJmb250cy8yQzEzOUFfMkNfMC5lb3RcIik7XG4gIHNyYzogdXJsKFwiL3dlYmZvbnRzLzJDMTM5QV8yQ18wLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi93ZWJmb250cy8yQzEzOUFfMkNfMC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi93ZWJmb250cy8yQzEzOUFfMkNfMC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnVVJXR3JvdGVzay1Cb2wnO1xuICBzcmM6IHVybChcIi93ZWJmb250cy8yQzEzOUFfMzdfMC5lb3RcIik7XG4gIHNyYzogdXJsKFwiL3dlYmZvbnRzLzJDMTM5QV8zN18wLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi93ZWJmb250cy8yQzEzOUFfMzdfMC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi93ZWJmb250cy8yQzEzOUFfMzdfMC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnVVJXR3JvdGVzay1Cb2xJdGEnO1xuICBzcmM6IHVybChcIi93ZWJmb250cy8yQzEzOUFfNl8wLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvd2ViZm9udHMvMkMxMzlBXzZfMC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIvd2ViZm9udHMvMkMxMzlBXzZfMC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi93ZWJmb250cy8yQzEzOUFfNl8wLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdVUldHcm90ZXNrQ29uLUxpZyc7XG4gIHNyYzogdXJsKFwiL3dlYmZvbnRzLzJDMTM5QV8xRV8wLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvd2ViZm9udHMvMkMxMzlBXzFFXzAuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL3dlYmZvbnRzLzJDMTM5QV8xRV8wLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL3dlYmZvbnRzLzJDMTM5QV8xRV8wLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdVUldHcm90ZXNrQ29uLUJvbCc7XG4gIHNyYzogdXJsKFwiL3dlYmZvbnRzLzJDMTM5QV8zMV8wLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvd2ViZm9udHMvMkMxMzlBXzMxXzAuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL3dlYmZvbnRzLzJDMTM5QV8zMV8wLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL3dlYmZvbnRzLzJDMTM5QV8zMV8wLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTsgfVxuXG5zdmcge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5zbGF3Y3ViZSB7XG4gIGZpbGw6IHdoaXRlOyB9XG5cbi5kaWFtb25kIHtcbiAgZmlsbDogI2E1YTdhYTsgfVxuXG4uY29kZXBlbiB7XG4gIGZpbGw6ICNhNWE3YWE7IH1cblxuLmNvbnRhaW5lciB7XG4gIG1hcmdpbi10b3A6IDA7IH1cblxuW2NsYXNzKj1fX2NvbnRhaW5lcl0ge1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gIHBhZGRpbmc6IDAgMnJlbTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgW2NsYXNzKj1fX2NvbnRhaW5lcl0ge1xuICAgICAgbWF4LXdpZHRoOiAxMDI0cHg7IH0gfVxuXG5kaXZbY2xhc3MqPVwiLS1jb2xcIl0ge1xuICBmbG9hdDogbGVmdDsgfVxuXG4uY2xlYXJmaXg6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgY2xlYXI6IGJvdGg7IH1cblxuLnN0cmV0Y2gge1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OyB9XG5cbi5maXhlZC1pbWcge1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAvKlxuICAgKiAgbWluLXdpZHRoOjEwMjRweDtcbiAgICogIG1pbi1oZWlnaHQ6NzY4cHg7ICovIH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDM1MHB4KSBhbmQgKG1heC13aWR0aDogNzY3cHgpIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKSwgKG1pbi13aWR0aDogMzUwcHgpIGFuZCAobWF4LXdpZHRoOiA3NjdweCkgYW5kIChtaW4tcmVzb2x1dGlvbjogMzUwZHBpKSB7XG4gICAgLmZpeGVkLWltZyB7XG4gICAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IHNjcm9sbDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjlweCkge1xuICAgIC5maXhlZC1pbWcge1xuICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7IH0gfVxuXG5pbWcsIGlmcmFtZSwgZW1iZWQge1xuICBtYXgtd2lkdGg6IDEwMCU7IH1cblxuLm1ha2UtZ2FsbGVyeSBkaXYge1xuICBmbG9hdDogbGVmdDtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG4uc3F1YXJlLTQgZGl2IHtcbiAgd2lkdGg6IDI1JTtcbiAgaGVpZ2h0OiAwO1xuICBwYWRkaW5nLWJvdHRvbTogMjUlOyB9XG5cbi5zcXVhcmUtMyBkaXYge1xuICB3aWR0aDogMzMuMzMzMyU7XG4gIGhlaWdodDogMDtcbiAgcGFkZGluZy1ib3R0b206IDMzLjMzMzMlOyB9XG5cbi5zcXVhcmUtMiBkaXYge1xuICB3aWR0aDogNTAlO1xuICBoZWlnaHQ6IDA7XG4gIHBhZGRpbmctYm90dG9tOiA1MCU7IH1cblxuLmNvbnRhaW5lciB7XG4gIHBhZGRpbmctdG9wOiA2cmVtOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgIC5jb250YWluZXIge1xuICAgICAgcGFkZGluZy10b3A6IDRyZW07IH0gfVxuXG4uZm9vdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgcGFkZGluZzogM3JlbSAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmZvb3Rlcl9fdGV4dCB7XG4gICAgY29sb3I6ICNhNWE3YWE7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5mb290ZXIgYSB7XG4gICAgY29sb3I6ICMwMDdhYzI7IH1cbiAgICAuZm9vdGVyIGE6aG92ZXIge1xuICAgICAgY29sb3I6ICNlZjNlNDI7IH1cblxuLyogZm9vdGVyOmhvdmVyIHtcbiAqICBvcGFjaXR5OiAxO1xuICp9ICovXG4udHdpdHRlci1zaGFyZS1idXR0b24ge1xuICB2ZXJ0aWNhbC1hbGlnbjogLTE1JTtcbiAgbWFyZ2luLXJpZ2h0OiAtMjVweCAhaW1wb3J0YW50OyB9XG5cbi5sb2dvIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZSAhaW1wb3J0YW50O1xuICBvcGFjaXR5OiAuMjtcbiAgcGFkZGluZzogMTVweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0cmFuc2l0aW9uOiBhbGwgLjRzOyB9XG5cbi5sb2dvOmhvdmVyIHtcbiAgb3BhY2l0eTogMTsgfVxuXG4uc29jaWFsLWljb25zIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDJyZW07XG4gIHdpZHRoOiAycmVtOyB9XG5cbmEuYnJhbmRtYXJrLWJvdHRvbSB7XG4gIGNvbG9yOiAjYTVhN2FhO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IC0ycHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBhLmJyYW5kbWFyay1ib3R0b20ge1xuICAgICAgZm9udC1zaXplOiAxLjVyZW07IH0gfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICBhLmJyYW5kbWFyay1ib3R0b20ge1xuICAgICAgZm9udC1zaXplOiAxcmVtOyB9IH1cbiAgYS5icmFuZG1hcmstYm90dG9tIC5hIHtcbiAgICBjb2xvcjogI2VmM2U0MjsgfVxuICBhLmJyYW5kbWFyay1ib3R0b20gLnIge1xuICAgIGNvbG9yOiAjMDA3YWMyOyB9XG4gIGEuYnJhbmRtYXJrLWJvdHRvbSAudCB7XG4gICAgY29sb3I6ICNmZWMwNTc7IH1cbiAgYS5icmFuZG1hcmstYm90dG9tOmhvdmVyIHtcbiAgICBjb2xvcjogIzMzMzsgfVxuXG5bZGF0YS1pY29uXTpiZWZvcmUge1xuICBjb250ZW50OiAnXFwyNjMwJztcbiAgc3BlYWs6IG5vbmU7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtdmFyaWFudDogbm9ybWFsO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICBmb250LXNpemU6IDEuOHJlbTtcbiAgdHJhbnNpdGlvbjogY29sb3IgLjJzOyB9XG5cbmJvZHkubm9fc2Nyb2xsIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgaGVpZ2h0OiAxMDAlOyB9XG5cbkAtbW96LWRvY3VtZW50IHVybC1wcmVmaXgoKSB7XG4gIGJvZHkubm9fc2Nyb2xsIC5leHBhbmRlZCB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjk1KTsgfSB9XG5cbmEuYnJhbmRtYXJrIHtcbiAgY29sb3I6ICNhNWE3YWE7XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gIGZvbnQtc2l6ZTogMS44cmVtO1xuICBsZXR0ZXItc3BhY2luZzogLTJweDsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgYS5icmFuZG1hcmsge1xuICAgICAgZm9udC1zaXplOiAxLjVyZW07IH0gfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBhLmJyYW5kbWFyayB7XG4gICAgICBmb250LXNpemU6IDFyZW07IH0gfVxuICBAbWVkaWEgKG1heC13aWR0aDogMzIwcHgpIHtcbiAgICBhLmJyYW5kbWFyayB7XG4gICAgICBmb250LXNpemU6IC44NXJlbTsgfSB9XG4gIGEuYnJhbmRtYXJrIC5hIHtcbiAgICBjb2xvcjogI2VmM2U0MjsgfVxuICBhLmJyYW5kbWFyayAuciB7XG4gICAgY29sb3I6ICMwMDdhYzI7IH1cbiAgYS5icmFuZG1hcmsgLnQge1xuICAgIGNvbG9yOiAjZmVjMDU3OyB9XG4gIGEuYnJhbmRtYXJrOmhvdmVyIHtcbiAgICBjb2xvcjogIzMzMzsgfVxuXG4udGFnbGluZSB7XG4gIGNvbG9yOiAjY2NjO1xuICBmb250LWZhbWlseTogXCJVUldHcm90ZXNrQ29uLUxpZ1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEuMjVyZW07XG4gIGxldHRlci1zcGFjaW5nOiA0cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIC50YWdsaW5lIHtcbiAgICAgIGZvbnQtc2l6ZTogMXJlbTsgfSB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC50YWdsaW5lIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG5Aa2V5ZnJhbWVzIGZpcnN0RmFkZUluQW5kRHJvcCB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtNTRweCk7IH1cblxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAwKTsgfSB9XG5cbi5sYXhuYXYge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNzUpO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGhlaWdodDogNnJlbTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgei1pbmRleDogMTAwMDtcbiAgYm94LXNoYWRvdzogMCAxcHggMCAjY2NjO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAwKTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4ycywgaGVpZ2h0IC4ycywgYmFja2dyb3VuZCAuMnM7XG4gIGFuaW1hdGlvbjogZmlyc3RGYWRlSW5BbmREcm9wIC4yczsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAubGF4bmF2IHtcbiAgICAgIGhlaWdodDogNHJlbTsgfSB9XG4gIC5sYXhuYXY6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6IHdoaXRlOyB9XG4gIC5sYXhuYXZfX2JhciB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBwYWRkaW5nOiAycmVtO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgICAubGF4bmF2X19iYXIge1xuICAgICAgICBwYWRkaW5nOiAwIDFyZW07IH0gfVxuICAgIC5sYXhuYXZfX2JhciA+IGEge1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICB1c2VyLXNlbGVjdDogbm9uZTsgfVxuICAubGF4bmF2LmludmlzaWJsZSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgLTY0cHgpO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuMnM7XG4gICAgb3BhY2l0eTogMDsgfVxuICAubGF4bmF2LmRldGFjaGVkIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuMnMsIGhlaWdodCAuMnMsIGJhY2tncm91bmQgLjJzLCBvcGFjaXR5IC4yczsgfVxuICAubGF4bmF2LmV4cGFuZGVkIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSk7XG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsOyB9XG4gICAgLmxheG5hdi5leHBhbmRlZCAjbGF4bmF2X19tZW51IHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xuICAgICAgb3BhY2l0eTogMTsgfVxuICAubGF4bmF2X19tZW51IHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHdpZHRoOiA2MCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgLTEwMDBweCk7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4xNXMsIG9wYWNpdHkgLjJzOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAgICAgLmxheG5hdl9fbWVudSB7XG4gICAgICAgIHdpZHRoOiA4MCU7IH0gfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzMjBweCkge1xuICAgICAgLmxheG5hdl9fbWVudSB7XG4gICAgICAgIHdpZHRoOiAxMDAlOyB9IH1cbiAgLmxheG5hdl9fbWVudS1saXN0LWl0ZW0ge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBib3gtc2hhZG93OiAwIDFweCAwICNjY2M7IH1cbiAgLmxheG5hdl9fbWVudS1saXN0LWFuY2hvciB7XG4gICAgY29sb3I6ICMwMDdhYzI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgZm9udC1mYW1pbHk6IFwiVVJXR3JvdGVza0Nvbi1Cb2xcIiwgc2Fucy1zZXJpZjtcbiAgICBwYWRkaW5nOiAwLjFlbSAwLjVyZW07XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzMjBweCkge1xuICAgICAgLmxheG5hdl9fbWVudS1saXN0LWFuY2hvciB7XG4gICAgICAgIGZvbnQtc2l6ZTogLjg1cmVtOyB9IH1cbiAgICAubGF4bmF2X19tZW51LWxpc3QtYW5jaG9yOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICNlZjNlNDI7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuICAubGF4bmF2X19saW5rLXRleHQge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMjAwcHg7IH1cbiAgLmxheG5hdl9fbGluay10ZWFzZXIge1xuICAgIGNvbG9yOiAjMzMzO1xuICAgIGZvbnQtZmFtaWx5OiBcIlVSV0dyb3Rlc2tDb24tTGlnXCIsIHNhbnMtc2VyaWY7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5sYXhuYXZfX2xpbmstdGVhc2VyIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbi5pY29uLWJ0biB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIHVzZXItc2VsZWN0OiBub25lOyB9XG4gIC5pY29uLWJ0biBzcGFuIHtcbiAgICBjb2xvcjogIzAwN2FjMjtcbiAgICBmb250LWZhbWlseTogXCJVUldHcm90ZXNrQ29uLUxpZ1wiLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBsZXR0ZXItc3BhY2luZzogNHB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5pY29uLWJ0biBzcGFuIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gIC5pY29uLWJ0bjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTsgfVxuICAuaWNvbi1idG46YmVmb3JlLCAuaWNvbi1idG46YWN0aXZlOmJlZm9yZSB7XG4gICAgY29sb3I6ICMwMDdhYzI7IH1cbiAgLmljb24tYnRuOmhvdmVyOmJlZm9yZSwgLmljb24tYnRuOmZvY3VzOmJlZm9yZSB7XG4gICAgY29sb3I6ICNlZjNlNDI7IH1cblxuLmV4cGFuZGVkIC5pY29uLWJ0bjpiZWZvcmUge1xuICBjb250ZW50OiAnXFwwMDI3MTUnO1xuICBmb250LXNpemU6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBwYWRkaW5nLXJpZ2h0OiAuMTVyZW07IH1cblxuLmNvbnRlbnQtdHJhbnNpdGlvbiB7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuMnMsIGZpbHRlciAuMnM7IH1cblxuLmltZ0Jhbm5lciB7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGZvbnQtZmFtaWx5OiBcIlVSV0dyb3Rlc2tDb24tTGlnXCIsIHNhbnMtc2VyaWY7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmc6IDEycmVtIDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMDsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuaW1nQmFubmVyIHtcbiAgICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogc2Nyb2xsO1xuICAgICAgcGFkZGluZzogM3JlbSAwOyB9IH1cbiAgLmltZ0Jhbm5lcjo6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIiBcIjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSAwJSwgdHJhbnNwYXJlbnQgMSUsIHJnYmEoMCwgMCwgMCwgMC4wNSkgMjYlLCByZ2JhKDAsIDAsIDAsIDAuNSkgNzElLCByZ2JhKDAsIDAsIDAsIDAuNykgMTAwJSk7IH1cbiAgLmltZ0Jhbm5lcl9fY29udGFpbmVyIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogNTsgfVxuICAuaW1nQmFubmVyX19oZWFkaW5nIHtcbiAgICB0ZXh0LXNoYWRvdzogM3B4IDNweCAwIHJnYmEoNTEsIDUxLCA1MSwgMC41KTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBmb250LXNpemU6IDhyZW07XG4gICAgbWFyZ2luOiAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuNHMsIGhlaWdodCAuM3MsIGJhY2tncm91bmQgLjRzO1xuICAgIGFuaW1hdGlvbjogZmlyc3RGYWRlSW5BbmREcm9wIC41czsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgICAgLmltZ0Jhbm5lcl9faGVhZGluZyB7XG4gICAgICAgIGZvbnQtc2l6ZTogNXJlbTtcbiAgICAgICAgbWFyZ2luOiAwOyB9IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgIC5pbWdCYW5uZXJfX2hlYWRpbmcge1xuICAgICAgICBmb250LXNpemU6IDNyZW07XG4gICAgICAgIG1hcmdpbjogMDsgfSB9XG4gIC5pbWdCYW5uZXJfX3RleHQge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtc2l6ZTogNnJlbTtcbiAgICBmb250LWZhbWlseTogXCJsZWFybmluZy1jdXJ2ZVwiO1xuICAgIG1hcmdpbjogMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLm1haW5Db250ZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgcGFkZGluZzogMCAwIDNyZW0gMDsgfVxuICAubWFpbkNvbnRlbnRfX2NvbnRhaW5lciB7XG4gICAgd2lkdGg6IDY1JTtcbiAgICBtYXJnaW46IDAgYXV0bzsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgICAgLm1haW5Db250ZW50X19jb250YWluZXIge1xuICAgICAgICB3aWR0aDogMTAwJTsgfSB9XG4gIC5tYWluQ29udGVudF9faGVhZGluZyB7XG4gICAgZm9udC1mYW1pbHk6IFwiVVJXR3JvdGVza0Nvbi1MaWdcIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDNyZW07XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmctdG9wOiA1cmVtO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICAgIC5tYWluQ29udGVudF9faGVhZGluZzo6YWZ0ZXIge1xuICAgICAgYm94LXNoYWRvdzogMXB4IDFweCAwICMzMzM7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBoZWlnaHQ6IDFweDtcbiAgICAgIHdpZHRoOiAxNXJlbTtcbiAgICAgIG1hcmdpbjogLjc1cmVtIGF1dG87IH1cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAubWFpbkNvbnRlbnRfX2hlYWRpbmc6OmFmdGVyIHtcbiAgICAgICAgICB3aWR0aDogMTAwJTsgfSB9XG4gIC5tYWluQ29udGVudF9fc3ViSGVhZGluZyB7XG4gICAgZm9udC1mYW1pbHk6IFwiVVJXR3JvdGVza0Nvbi1MaWdcIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDNyZW0gMCAxLjVyZW0gMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLm1haW5Db250ZW50X19kYXRlIHtcbiAgICBjb2xvcjogI2NjYztcbiAgICBmb250LWZhbWlseTogXCJVUldHcm90ZXNrQ29uLUxpZ1wiLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLm1haW5Db250ZW50X19tZCB7XG4gICAgY29sb3I6ICMzMzM7XG4gICAgcGFkZGluZy1ib3R0b206IDNyZW07IH1cbiAgICAubWFpbkNvbnRlbnRfX21kIGgxLCAubWFpbkNvbnRlbnRfX21kIGgyLCAubWFpbkNvbnRlbnRfX21kIGgzLCAubWFpbkNvbnRlbnRfX21kIGg0LCAubWFpbkNvbnRlbnRfX21kIGg1LCAubWFpbkNvbnRlbnRfX21kIGg2IHtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIlVSV0dyb3Rlc2tDb24tQm9sXCIsIHNhbnMtc2VyaWY7XG4gICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmc6IDNyZW0gMCAxLjVyZW0gMDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgIC5tYWluQ29udGVudF9fbWQgaWZyYW1lIHtcbiAgICAgIG1hcmdpbjogM3JlbSAwOyB9XG5cbi5tZWdhU3RhdGVtZW50IHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgZm9udC1mYW1pbHk6IFwiVVJXR3JvdGVza0Nvbi1MaWdcIiwgc2Fucy1zZXJpZjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcGFkZGluZzogM3JlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAwOyB9XG4gIC5tZWdhU3RhdGVtZW50X190ZXh0Qm94IHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogNTsgfVxuICAubWVnYVN0YXRlbWVudF9faGVhZGluZyB7XG4gICAgY29sb3I6ICNhNWE3YWE7XG4gICAgZm9udC1zaXplOiA2cmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIG1hcmdpbi10b3A6IDY2cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogNjZweDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgICAgLm1lZ2FTdGF0ZW1lbnRfX2hlYWRpbmcge1xuICAgICAgICBmb250LXNpemU6IDRyZW07XG4gICAgICAgIG1hcmdpbi10b3A6IDE2LjVweDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTYuNXB4OyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMzIwcHgpIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLm1lZ2FTdGF0ZW1lbnRfX2hlYWRpbmcge1xuICAgICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICAgIG1hcmdpbi10b3A6IDE2LjVweDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTYuNXB4OyB9IH1cbiAgLm1lZ2FTdGF0ZW1lbnRfX2NvbnRlbnQge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtc2l6ZTogNnJlbTtcbiAgICBmb250LWZhbWlseTogXCJsZWFybmluZy1jdXJ2ZVwiO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nLWJvdHRvbTogNXJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLm1lZ2FDVEEge1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBmb250LWZhbWlseTogXCJVUldHcm90ZXNrQ29uLUxpZ1wiLCBzYW5zLXNlcmlmO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDA7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLm1lZ2FDVEEge1xuICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7IH0gfVxuICAubWVnYUNUQTo6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIiBcIjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSAwJSwgdHJhbnNwYXJlbnQgMSUsIHJnYmEoMCwgMCwgMCwgMC4wNSkgMjYlLCByZ2JhKDAsIDAsIDAsIDAuNSkgNzElLCByZ2JhKDAsIDAsIDAsIDAuNykgMTAwJSk7IH1cbiAgLm1lZ2FDVEFfX2NvbnRhaW5lciB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHotaW5kZXg6IDU7XG4gICAgcGFkZGluZy10b3A6IDI2NHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAyNjRweDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLm1lZ2FDVEFfX2NvbnRhaW5lciB7XG4gICAgICAgIHBhZGRpbmctdG9wOiAxMzJweDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDEzMnB4OyB9IH1cbiAgLm1lZ2FDVEFfX2hlYWRpbmcge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtc2l6ZTogOHJlbTtcbiAgICBtYXJnaW46IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5tZWdhQ1RBX19oZWFkaW5nIHtcbiAgICAgICAgZm9udC1zaXplOiA1cmVtO1xuICAgICAgICBtYXJnaW46IDA7IH0gfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgICAgLm1lZ2FDVEFfX2hlYWRpbmcge1xuICAgICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICAgIG1hcmdpbjogMDsgfSB9XG4gIC5tZWdhQ1RBX190ZXh0IHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBmb250LXNpemU6IDZyZW07XG4gICAgZm9udC1mYW1pbHk6IFwibGVhcm5pbmctY3VydmVcIjtcbiAgICBtYXJnaW46IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgICAubWVnYUNUQV9fdGV4dCB7XG4gICAgICAgIGZvbnQtc2l6ZTogNHJlbTsgfSB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgICAubWVnYUNUQV9fdGV4dCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgICAgbWFyZ2luOiAwOyB9IH1cbiAgLm1lZ2FDVEFfX2J1dHRvbiB7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIHRyYW5zaXRpb246IGFsbCAuMXMgZWFzZS1pbjtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDEyMiwgMTk0LCAwLjc1KTtcbiAgICBib3JkZXItcmFkaXVzOiAuMjVyZW07XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZvbnQtZmFtaWx5OiBcImxlYXJuaW5nLWN1cnZlXCI7XG4gICAgcGFkZGluZzogMCAuNXJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAubWVnYUNUQV9fYnV0dG9uOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KTtcbiAgICAgIGNvbG9yOiAjMDA3YWMyOyB9XG5cbi5jaGFydEJveCB7XG4gIGJhY2tncm91bmQ6ICNlZjNlNDI7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgbWFyZ2luLWJvdHRvbTogMXB4O1xuICBwYWRkaW5nOiAzcmVtIDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAuY2hhcnRCb3hfX2hlYWRpbmcge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtZmFtaWx5OiBcIlVSV0dyb3Rlc2tDb24tTGlnXCIsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nLXRvcDogNXJyZW07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgICAuY2hhcnRCb3hfX2hlYWRpbmcge1xuICAgICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxcmVtOyB9IH1cbiAgLmNoYXJ0Qm94X19zdGF0IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgZm9udC1mYW1pbHk6IFwiVVJXR3JvdGVza0Nvbi1MaWdcIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgcGFkZGluZzogMCAzcmVtOyB9XG4gICAgLmNoYXJ0Qm94X19zdGF0IHNwYW4ge1xuICAgICAgZm9udC1zaXplOiA1cmVtOyB9XG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgLmNoYXJ0Qm94X19zdGF0IHNwYW4ge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgICAgICBwYWRkaW5nOiAzcmVtIDAgMCAwO1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfSB9XG4gIC5jaGFydEJveCBwIHtcbiAgICBtYXJnaW46IDAgYXV0byAxLjVyZW07XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICB3aWR0aDogNTAlOyB9XG5cbi5jaGFydCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW46IDFyZW07IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNoYXJ0IHtcbiAgICAgIG1hcmdpbjogM3JlbSAxcmVtIDNyZW0gMXJlbTsgfSB9XG4gIC5jaGFydCBjYW52YXMge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDsgfVxuXG4uY2hhcnRfX3BlcmNlbnQge1xuICBmb250LWZhbWlseTogXCJVUldHcm90ZXNrQ29uLUxpZ1wiLCBzYW5zLXNlcmlmO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogMnJlbTsgfVxuICAuY2hhcnRfX3BlcmNlbnQ6OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiVcIjsgfVxuXG4uYXJ0aWNsZUNUQSB7XG4gIGJhY2tncm91bmQ6ICNmZWMwNTc7XG4gIHBhZGRpbmctYm90dG9tOiAzcmVtOyB9XG4gIC5hcnRpY2xlQ1RBX19jb250YWluZXIge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5hcnRpY2xlQ1RBX19jb250YWluZXIge1xuICAgICAgICB3aWR0aDogOTAlOyB9IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgIC5hcnRpY2xlQ1RBX19jb250YWluZXIge1xuICAgICAgICB3aWR0aDogMTAwJTsgfSB9XG4gIC5hcnRpY2xlQ1RBX19oZWFkaW5nIHtcbiAgICBjb2xvcjogIzMzMztcbiAgICBmb250LWZhbWlseTogXCJVUldHcm90ZXNrQ29uLUxpZ1wiLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZy10b3A6IDVyZW07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuYXJ0aWNsZUNUQV9faGVhZGluZyB7XG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTsgfSB9XG4gICAgLmFydGljbGVDVEFfX2hlYWRpbmc6OmFmdGVyIHtcbiAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggMCAjMzMzO1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICB3aWR0aDogMTVyZW07XG4gICAgICBtYXJnaW46IC43NXJlbSBhdXRvOyB9XG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgLmFydGljbGVDVEFfX2hlYWRpbmc6OmFmdGVyIHtcbiAgICAgICAgICB3aWR0aDogMTAwJTsgfSB9XG4gIC5hcnRpY2xlQ1RBX19oZWFkaW5nTGluayB7XG4gICAgY29sb3I6ICMwMDdhYzI7IH1cbiAgICAuYXJ0aWNsZUNUQV9faGVhZGluZ0xpbms6aG92ZXIge1xuICAgICAgY29sb3I6ICNlZjNlNDI7IH1cbiAgLmFydGljbGVDVEFfX21kIHtcbiAgICBjb2xvcjogIzMzMztcbiAgICBwYWRkaW5nLWJvdHRvbTogM3JlbTsgfVxuICAuYXJ0aWNsZUNUQV9fdGV4dCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5hcnRpY2xlQ1RBX19idXR0b24ge1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjFzIGVhc2UtaW47XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAxMjIsIDE5NCwgMC43NSk7XG4gICAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBmb250LWZhbWlseTogXCJsZWFybmluZy1jdXJ2ZVwiO1xuICAgIHBhZGRpbmc6IDAgLjVyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgLmFydGljbGVDVEFfX2J1dHRvbjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSk7XG4gICAgICBjb2xvcjogIzAwN2FjMjsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmFydGljbGVDVEFfX2J1dHRvbiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIC4xcyBlYXNlLWluO1xuICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDEyMiwgMTk0LCAwLjc1KTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogLjI1cmVtO1xuICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBmb250LWZhbWlseTogXCJsZWFybmluZy1jdXJ2ZVwiO1xuICAgICAgICBwYWRkaW5nOiAwIC41cmVtO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAgICAgLmFydGljbGVDVEFfX2J1dHRvbjpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpO1xuICAgICAgICAgIGNvbG9yOiAjMDA3YWMyOyB9IH1cblxuLmFydGljbGVMaXN0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcbiAgYm94LXNoYWRvdzogMCAtMXB4IDAgI2E1YTdhYTtcbiAgcGFkZGluZzogM3JlbSAwOyB9XG4gIC5hcnRpY2xlTGlzdF9fY29udGFpbmVyIHtcbiAgICB3aWR0aDogNjUlO1xuICAgIG1hcmdpbjogMCBhdXRvOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgICAuYXJ0aWNsZUxpc3RfX2NvbnRhaW5lciB7XG4gICAgICAgIHdpZHRoOiA5MCU7IH0gfVxuICAuYXJ0aWNsZUxpc3RfX2hlYWRpbmcge1xuICAgIGJveC1zaGFkb3c6IDAgMXB4IDAgI2E1YTdhYTtcbiAgICBmb250LWZhbWlseTogXCJVUldHcm90ZXNrQ29uLUxpZ1wiLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICBsaW5lLWhlaWdodDogMTsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgICAgLmFydGljbGVMaXN0X19oZWFkaW5nIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjVyZW07IH0gfVxuICAuYXJ0aWNsZUxpc3RfX2xpbmsge1xuICAgIGNvbG9yOiAjMDA3YWMyO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAxcmVtIC41cmVtOyB9XG4gICAgLmFydGljbGVMaXN0X19saW5rOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlZjNlNDI7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuXG5ib2R5IHtcbiAgb3ZlcmZsb3cteDogaGlkZGVuOyB9XG5cbmJvZHkub3ZlcmZsb3ctaGlkZGVuIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG5tYWluIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm07XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDAuM3M7IH1cbiAgbWFpbi5zbGlkZS1vdXQge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjcwcHgpOyB9XG4gICAgbWFpbi5zbGlkZS1vdXQgLnJldmVhbF9fb3ZlcmxheSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGFuaW1hdGlvbjogcmV2ZWFsX19mYWRlLWluIDAuM3M7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICBtYWluLnNsaWRlLW91dCB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC02MDBweCk7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkge1xuICBtYWluLnNsaWRlLW91dCB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC04MDBweCk7IH0gfVxuXG4ucmV2ZWFsIHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgcGFkZGluZzogMCAwIDFyZW0gMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5yZXZlYWxfX2NvbnRhaW5lcjo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIGNsZWFyOiBib3RoOyB9XG4gIC5yZXZlYWxfX2hlYWRpbmcge1xuICAgIGNvbG9yOiAjMWEyZjJhO1xuICAgIGZvbnQtZmFtaWx5OiBcIlVSV0dyb3Rlc2tDb24tQm9sXCIsIHNhbnMtc2VyaWY7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtOyB9XG4gIC5yZXZlYWxfX3BsYWNlaG9sZGVyLTEge1xuICAgIGJhY2tncm91bmQ6ICNmMjVmNWM7XG4gICAgY29sb3I6ICNmZGVhZWE7IH1cbiAgLnJldmVhbF9fcGxhY2Vob2xkZXItMiB7XG4gICAgYmFja2dyb3VuZDogI0ZGRjsgfVxuICAucmV2ZWFsIGxpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07XG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgyNTQsIDE5MiwgODcsIDApO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzOyB9XG4gIC5yZXZlYWxfX2ZpZ3VyZSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCU7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIG1heC1oZWlnaHQ6IDU1MHB4O1xuICAgIG1heC13aWR0aDogMTAwJTsgfVxuICAgIC5yZXZlYWxfX2ZpZ3VyZTo6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcGFkZGluZy1ib3R0b206IDc1JTtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5yZXZlYWwgaW1nIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXItcmFkaXVzOiAuMjVyZW0gLjI1cmVtIDAgMDsgfVxuICAucmV2ZWFsX19pbWctb3ZlcmxheSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDEyMiwgMTk0LCAwLjkpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgYm9yZGVyLXJhZGl1czogLjI1cmVtIC4yNXJlbSAwIDA7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzOyB9XG4gICAgLnJldmVhbF9faW1nLW92ZXJsYXkgc3BhbiB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIGJvdHRvbTogYXV0bztcbiAgICAgIHJpZ2h0OiBhdXRvO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgICBjb2xvcjogI0ZGRjtcbiAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIlVSV0dyb3Rlc2tDb24tTGlnXCIsIHNhbnMtc2VyaWY7IH1cbiAgLnJldmVhbF9fYm94LWluZm8ge1xuICAgIGJhY2tncm91bmQ6ICMwMDdhYzI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtZmFtaWx5OiBcIlVSV0dyb3Rlc2tDb24tTGlnXCIsIHNhbnMtc2VyaWY7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgcGFkZGluZzogLjI1cmVtIDA7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgICAucmV2ZWFsX19ib3gtaW5mbyBzcGFuIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgIG1hcmdpbi10b3A6IC41cmVtOyB9XG4gICAgLnJldmVhbF9fYm94LWluZm8gc21hbGwge1xuICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxuXG4ubm8tdG91Y2ggLnJldmVhbCBsaTpob3ZlciB7XG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMjU0LCAxOTIsIDg3LCAwLjMpOyB9XG5cbi5uby10b3VjaCAucmV2ZWFsIGxpOmhvdmVyIC5yZXZlYWxfX2ltZy1vdmVybGF5IHtcbiAgb3BhY2l0eTogMTsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5yZXZlYWwgbGkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogNDUlOyB9XG4gIC5yZXZlYWwgbGk6bnRoLWNoaWxkKDNuKSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwOyB9IH1cblxuLnJldmVhbC1wYW5lbF9fcGljLWZsZXhlbWJlZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgbWF4LWhlaWdodDogNTUwcHg7XG4gIG1heC13aWR0aDogMTAwJTsgfVxuICAucmV2ZWFsLXBhbmVsX19waWMtZmxleGVtYmVkOjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nLWJvdHRvbTogNzUlO1xuICAgIHdpZHRoOiAxMDAlOyB9XG5cbi5yZXZlYWwtcGFuZWwge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIHdpZHRoOiAzMjBweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvdmVyZmxvdy15OiBhdXRvO1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gIGJhY2tncm91bmQ6ICNmZWMwNTc7XG4gIHotaW5kZXg6IDEwMDE7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgzMjBweCk7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zZm9ybTtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4zczsgfVxuICAucmV2ZWFsLXBhbmVsLnNsaWRlLWluIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH1cbiAgLnJldmVhbC1wYW5lbF9fcGljIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLnJldmVhbC1wYW5lbF9fcGljOjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogODBweDtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAjZmVjMDU3LCByZ2JhKDI1NCwgMTkyLCA4NywgMCkpOyB9XG4gIC5yZXZlYWwtcGFuZWwgaW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAucmV2ZWFsLXBhbmVsIC5yZXZlYWwtcGFuZWxfX2Jpby1jb250ZW50IHtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLnJldmVhbC1wYW5lbCAucmV2ZWFsLXBhbmVsX19iaW8tY29udGVudC10aXRsZSB7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIlVSV0dyb3Rlc2tDb24tTGlnXCIsIHNhbnMtc2VyaWY7XG4gICAgICBmb250LXNpemU6IDNyZW07XG4gICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmctdG9wOiA1cmVtO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAgICAgICAucmV2ZWFsLXBhbmVsIC5yZXZlYWwtcGFuZWxfX2Jpby1jb250ZW50LXRpdGxlIHtcbiAgICAgICAgICBwYWRkaW5nOiAwOyB9IH1cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgICAgICAucmV2ZWFsLXBhbmVsIC5yZXZlYWwtcGFuZWxfX2Jpby1jb250ZW50LXRpdGxlIHtcbiAgICAgICAgICBmb250LXNpemU6IDJyZW07IH0gfVxuICAgICAgLnJldmVhbC1wYW5lbCAucmV2ZWFsLXBhbmVsX19iaW8tY29udGVudC10aXRsZTo6YWZ0ZXIge1xuICAgICAgICBib3gtc2hhZG93OiAxcHggMXB4IDAgIzMzMztcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICB3aWR0aDogMTVyZW07XG4gICAgICAgIG1hcmdpbjogLjc1cmVtIGF1dG87IH1cbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgICAgLnJldmVhbC1wYW5lbCAucmV2ZWFsLXBhbmVsX19iaW8tY29udGVudC10aXRsZTo6YWZ0ZXIge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuICAgIC5yZXZlYWwtcGFuZWwgLnJldmVhbC1wYW5lbF9fYmlvLWNvbnRlbnQtc3VidGl0bGUge1xuICAgICAgZm9udC1mYW1pbHk6IFwiVVJXR3JvdGVza0Nvbi1MaWdcIiwgc2Fucy1zZXJpZjtcbiAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gICAgLnJldmVhbC1wYW5lbCAucmV2ZWFsLXBhbmVsX19iaW8tY29udGVudC1tZCB7XG4gICAgICBjb2xvcjogIzMzMztcbiAgICAgIHBhZGRpbmctYm90dG9tOiAzcmVtOyB9XG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgLnJldmVhbC1wYW5lbCAucmV2ZWFsLXBhbmVsX19iaW8tY29udGVudC1tZCB7XG4gICAgICAgICAgcGFkZGluZy1ib3R0b206IDFyZW07IH0gfVxuICAgICAgLnJldmVhbC1wYW5lbCAucmV2ZWFsLXBhbmVsX19iaW8tY29udGVudC1tZCBoMyB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIlVSV0dyb3Rlc2tDb24tTGlnXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgICAgIHBhZGRpbmc6IDNyZW0gMCAxLjVyZW0gMDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgIC5yZXZlYWwtcGFuZWwgLnJldmVhbC1wYW5lbF9fYmlvLWNvbnRlbnQtbWQgaDMge1xuICAgICAgICAgICAgcGFkZGluZzogMXJlbSAwIC41cmVtIDA7IH0gfVxuXG4ubm8tY3NzZ3JhZGllbnRzIC5yZXZlYWwtcGFuZWwgLnJldmVhbC1wYW5lbF9fcGljOjphZnRlciB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAucmV2ZWFsLXBhbmVsIHtcbiAgICB3aWR0aDogNjAwcHg7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDYwMHB4KTsgfVxuICAucmV2ZWFsLXBhbmVsIC5yZXZlYWwtcGFuZWxfX2Jpby1jb250ZW50IHtcbiAgICBwYWRkaW5nOiAycmVtOyB9XG4gIC5yZXZlYWwtcGFuZWwgLnJldmVhbC1wYW5lbF9fYmlvLWNvbnRlbnQgcCB7XG4gICAgbWFyZ2luOiAycmVtIDA7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkge1xuICAucmV2ZWFsLXBhbmVsIHtcbiAgICBib3gtc2hhZG93OiAtMTBweCAwIDEwMHB4ICMzMzM7XG4gICAgd2lkdGg6IDkwMHB4O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAwcHgpOyB9XG4gIC5yZXZlYWwtcGFuZWwgLnJldmVhbC1wYW5lbF9fcGljOjphZnRlciB7XG4gICAgaGVpZ2h0OiAxNTBweDsgfVxuICAucmV2ZWFsLXBhbmVsIC5yZXZlYWwtcGFuZWxfX2Jpby1jb250ZW50IHtcbiAgICBwYWRkaW5nOiA0cmVtO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtODBweCk7IH1cbiAgLm5vLWNzc2dyYWRpZW50cyAucmV2ZWFsLXBhbmVsIC5yZXZlYWwtcGFuZWxfX2Jpby1jb250ZW50IHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7IH0gfVxuXG4ucmV2ZWFsLXBhbmVsX19jbG9zZSB7XG4gIHdpZHRoOiA3NXB4O1xuICBoZWlnaHQ6IDc1cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAyNXB4O1xuICByaWdodDogMjVweDtcbiAgYmFja2dyb3VuZDogdXJsKFwiL2ltYWdlcy9zdmcvcmV2ZWFsLWljb24tY2xvc2Uuc3ZnXCIpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xuICB0ZXh0LWluZGVudDogMTAwJTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgei1pbmRleDogMzAwMTtcbiAgZGlzcGxheTogbm9uZTsgfVxuICAucmV2ZWFsLXBhbmVsX19jbG9zZS5pcy12aXNpYmxlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBhbmltYXRpb246IHJldmVhbF9fbW92ZS1pbiAwLjhzOyB9XG5cbi5yZXZlYWxfX292ZXJsYXkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAxMjIsIDE5NCwgMC44KTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBub25lO1xuICB6LWluZGV4OiAyMDAwOyB9XG5cbkBrZXlmcmFtZXMgcmV2ZWFsX19mYWRlLWluIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7IH1cblxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxOyB9IH1cblxuQGtleWZyYW1lcyByZXZlYWxfX21vdmUtaW4ge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMHB4KSByb3RhdGUoMGRlZyk7IH1cblxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCkgcm90YXRlKDU0MGRlZyk7IH0gfVxuXG4uZ3JpZCB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1hcmdpbjogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTkyMHB4O1xuICBsaXN0LXN0eWxlOiBub25lO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLyogQ29tbW9uIHN0eWxlICovXG4uZ3JpZCBmaWd1cmUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDE7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luOiAtMC4yM3JlbSAtMC4xNXJlbTtcbiAgd2lkdGg6IDUwJTtcbiAgaGVpZ2h0OiA0MDBweDtcbiAgYmFja2dyb3VuZDogIzMwODVhMztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmdyaWQgZmlndXJlIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgLmdyaWQgZmlndXJlIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAyMDBweDsgfSB9XG5cbi5ncmlkIGZpZ3VyZSBpbWcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICBvcGFjaXR5OiAwLjg7IH1cblxuLmdyaWQgZmlndXJlIGZpZ2NhcHRpb24ge1xuICBwYWRkaW5nOiAycmVtO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOyB9XG5cbi5ncmlkIGZpZ3VyZSBmaWdjYXB0aW9uOjpiZWZvcmUsIC5ncmlkIGZpZ3VyZSBmaWdjYXB0aW9uOjphZnRlciB7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lOyB9XG5cbi5ncmlkIGZpZ3VyZSBmaWdjYXB0aW9uLCAuZ3JpZCBmaWd1cmUgYSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlOyB9XG5cbi8qIEFuY2hvciB3aWxsIGNvdmVyIHRoZSB3aG9sZSBpdHJlbSBieSBkZWZhdWx0ICovXG4vKiBGb3Igc29tZSBlZmZlY3RzIGl0IHdpbGwgc2hvdyBhcyBhIGJ1dHRvbiAqL1xuLmdyaWQgZmlndXJlIGEge1xuICB6LWluZGV4OiAxMDAwO1xuICB0ZXh0LWluZGVudDogMjAwJTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgZm9udC1zaXplOiAwO1xuICBvcGFjaXR5OiAwOyB9XG5cbi5ncmlkIGZpZ3VyZSBoMiB7XG4gIHdvcmQtc3BhY2luZzogLTAuMTVyZW07XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAuZ3JpZCBmaWd1cmUgaDIge1xuICAgICAgZm9udC1zaXplOiAxLjVyZW07IH0gfVxuXG4uZ3JpZCBmaWd1cmUgaDIgc3BhbiB7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7IH1cblxuLmdyaWQgZmlndXJlIGgyLCAuZ3JpZCBmaWd1cmUgcCB7XG4gIG1hcmdpbjogMDsgfVxuXG4uZ3JpZCBmaWd1cmUgcCB7XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7IH1cblxuLyotLS0tLS0tLS0tLS0tLS0gKi9cbi8qKioqKiBPc2NhciAqKioqICovXG4vKi0tLS0tLS0tLS0tLS0tLSAqL1xuZmlndXJlLmVmZmVjdC1vc2NhciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjM5LCA2MiwgNjYsIDAuOCk7IH1cblxuZmlndXJlLmVmZmVjdC1vc2NhciBpbWcge1xuICBvcGFjaXR5OiAwLjk7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjM1cztcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjM1czsgfVxuXG5maWd1cmUuZWZmZWN0LW9zY2FyIGZpZ2NhcHRpb24ge1xuICBwYWRkaW5nOiAzcmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDEyMiwgMTk0LCAwLjcpO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zNXM7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zNXM7IH1cblxuZmlndXJlLmVmZmVjdC1vc2NhciBmaWdjYXB0aW9uOjpiZWZvcmUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMzBweDtcbiAgcmlnaHQ6IDMwcHg7XG4gIGJvdHRvbTogMzBweDtcbiAgbGVmdDogMzBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcbiAgY29udGVudDogJyc7IH1cblxuZmlndXJlLmVmZmVjdC1vc2NhciBoMiB7XG4gIG1hcmdpbjogMTAlIDAgMTBweCAwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDAuMzVzO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zNXM7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAxMDAlLCAwKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAxMDAlLCAwKTsgfVxuXG5maWd1cmUuZWZmZWN0LW9zY2FyIGZpZ2NhcHRpb246OmJlZm9yZSwgZmlndXJlLmVmZmVjdC1vc2NhciBwIHtcbiAgb3BhY2l0eTogMDtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMzVzLCAtd2Via2l0LXRyYW5zZm9ybSAwLjM1cztcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjM1cywgdHJhbnNmb3JtIDAuMzVzO1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMCk7XG4gIHRyYW5zZm9ybTogc2NhbGUoMCk7IH1cblxuZmlndXJlLmVmZmVjdC1vc2Nhcjpob3ZlciBoMiB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTsgfVxuXG5maWd1cmUuZWZmZWN0LW9zY2FyOmhvdmVyIGZpZ2NhcHRpb246OmJlZm9yZSwgZmlndXJlLmVmZmVjdC1vc2Nhcjpob3ZlciBwIHtcbiAgb3BhY2l0eTogMTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEpOyB9XG5cbmZpZ3VyZS5lZmZlY3Qtb3NjYXI6aG92ZXIgZmlnY2FwdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTgsIDUyLCA0MiwgMCk7IH1cblxuZmlndXJlLmVmZmVjdC1vc2Nhcjpob3ZlciBpbWcge1xuICBvcGFjaXR5OiAwLjI7IH1cblxuLmZsaXBHYWxsZXJ5X19mcm9udCwgLmZsaXBHYWxsZXJ5X19iYWNrIHtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICB0cmFuc2l0aW9uOiAwLjZzO1xuICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDsgfVxuXG4uZmxpcEdhbGxlcnlfX2JveCwgLmZsaXBHYWxsZXJ5X19mcm9udCwgLmZsaXBHYWxsZXJ5X19iYWNrIHtcbiAgd2lkdGg6IDI1MHB4O1xuICBoZWlnaHQ6IDI1MHB4OyB9XG5cbi5mbGlwR2FsbGVyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDdhYzI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgLyogZmxpcCBzcGVlZCBnb2VzIGhlcmUgKi8gfVxuICAuZmxpcEdhbGxlcnlfX2hlYWRpbmcge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtZmFtaWx5OiBcIlVSV0dyb3Rlc2tDb24tTGlnXCIsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nLXRvcDogNXJyZW07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgICAuZmxpcEdhbGxlcnlfX2hlYWRpbmcge1xuICAgICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxcmVtOyB9IH1cbiAgLmZsaXBHYWxsZXJ5X19ib3gge1xuICAgIHBlcnNwZWN0aXZlOiAxMDAwO1xuICAgIHRyYW5zZm9ybS1zdHlsZTogcHJlc2VydmUtM2Q7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1hcmdpbjogMCAxcHggMXB4IDFweDtcbiAgICAvKiAgVVBEQVRFRCEgZmxpcCB0aGUgcGFuZSB3aGVuIGhvdmVyZWQgKi8gfVxuICAgIC5mbGlwR2FsbGVyeV9fYm94OmhvdmVyIC5mbGlwR2FsbGVyeV9fYmFjayB7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoMGRlZyk7IH1cbiAgICAuZmxpcEdhbGxlcnlfX2JveDpob3ZlciAuZmxpcEdhbGxlcnlfX2Zyb250IHtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlWSgxODBkZWcpOyB9XG4gIC5mbGlwR2FsbGVyeV9fZnJvbnQge1xuICAgIC8qIGhpZGUgYmFjayBvZiBwYW5lIGR1cmluZyBzd2FwICovIH1cbiAgLmZsaXBHYWxsZXJ5X19iYWNrIHtcbiAgICAvKiBoaWRlIGJhY2sgb2YgcGFuZSBkdXJpbmcgc3dhcCAqL1xuICAgIC8qIGJhY2ssIGluaXRpYWxseSBoaWRkZW4gcGFuZSAqL1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZWMwNTc7XG4gICAgZm9udC1zaXplOiAyZW07XG4gICAgcGFkZGluZy10b3A6IC41ZW07XG4gICAgdHJhbnNmb3JtOiByb3RhdGVZKC0xODBkZWcpOyB9XG4gICAgLmZsaXBHYWxsZXJ5X19iYWNrX19oZWFkaW5nIHtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIlVSV0dyb3Rlc2tDb24tQm9sXCIsIHNhbnMtc2VyaWY7XG4gICAgICBsaW5lLWhlaWdodDogMTsgfVxuICAgIC5mbGlwR2FsbGVyeV9fYmFja19fdGV4dCB7XG4gICAgICBmb250LWZhbWlseTogXCJVUldHcm90ZXNrQ29uLUxpZ1wiLCBzYW5zLXNlcmlmOyB9XG4gIC5mbGlwR2FsbGVyeV9fZmxpcHBlciB7XG4gICAgdHJhbnNpdGlvbjogMC42cztcbiAgICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG5cblxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltTnZibVpwWnk5ZmRIbHdiMmR5WVhCb2VTNXpZWE56SWl3aVkyOXVabWxuTDE5amIyeHZjbk11YzJGemN5SXNJbU52Ym1acFp5OWZjbVZ6WlhRdWMyRnpjeUlzSW1OdmJtWnBaeTlmWm05dWRITXVjMkZ6Y3lJc0ltTnZibVpwWnk5ZmFXTnZibk11YzJGemN5SXNJbU52Ym1acFp5OWZiR0Y1YjNWMExuTmhjM01pTENKamIyNW1hV2N2WDJsdVkyeDFaR1V0YldWa2FXRXVjMkZ6Y3lJc0ltTnZibVpwWnk5ZlkyeGxZWEl0Wm1sNExuTmhjM01pTENKamIyNW1hV2N2WDJsdFlXZGxjeTV6WVhOeklpd2liVzlrZFd4bGN5OWZZMjl1ZEdGcGJtVnlMbk5oYzNNaUxDSnRiMlIxYkdWekwxOW1iMjkwWlhJdWMyRnpjeUlzSW0xdlpIVnNaWE12WDI1aGRpNXpZWE56SWl3aVkyOXVabWxuTDE5dGFYaHBibk11YzJGemN5SXNJbTF2WkhWc1pYTXZYMmx0WjBKaGJtNWxjaTV6WVhOeklpd2liVzlrZFd4bGN5OWZiV0ZwYmtOdmJuUmxiblF1YzJGemN5SXNJbTF2WkhWc1pYTXZYMjFsWjJGVGRHRjBaVzFsYm5RdWMyRnpjeUlzSW0xdlpIVnNaWE12WDIxbFoyRkRWRUV1YzJGemN5SXNJbTF2WkhWc1pYTXZYMjFwZUdsdUxXSjFkSFJ2Ym5NdWMyRnpjeUlzSW0xdlpIVnNaWE12WDJOb1lYSjBMV0p2ZUM1ellYTnpJaXdpYlc5a2RXeGxjeTlmYldsNGFXNHRhR1ZoWkdWeWN5NXpZWE56SWl3aWJXOWtkV3hsY3k5ZllYSjBhV05zWlVOVVFTNXpZWE56SWl3aWJXOWtkV3hsY3k5ZllYSjBhV05zWlV4cGMzUXVjMkZ6Y3lJc0ltMXZaSFZzWlhNdlgzSmxkbVZoYkMxaWIzZ3VjMkZ6Y3lJc0ltMXZaSFZzWlhNdlgyMXBlR2x1TFdac1pYaEZiV0psWkM1ellYTnpJaXdpYlc5a2RXeGxjeTlmWm1sbmRYSmxMV0p2ZUM1ellYTnpJaXdpYlc5a2RXeGxjeTlmWm14cGNDMW5ZV3hzWlhKNUxuTmhjM01pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanM3T3pzN08wRkJhME5CTzBWQmFrSnBRaXhCUVd0Q1pqczdRVUZGUmp0RlF6bENWeXhCUkN0Q1ZEdEZRWEJDYVVJc1FVRnhRbXBDTzBWQmRrTkxMRUZCZDBOTU8wVkJRMEVzUVVGQldUdEZRVU5hTEVGQlFYZENPenRCUVVVeFFpeEJRVUZKTEVGQlFVa3NRVUZCU1N4QlFVRkpMRUZCUVVrN1JVRkRiRUlzUVVGQlZ6dEZRUzlDU2l4QlFXZERVRHM3UVVGRlJqdEZRVU5GTEVGQlFXTTdPMEZCUldoQ08wVkJla0pGTEVGQlFWazdSVUZEV2l4QlFVRmxPenRCUVRKQ2FrSXNRVUZCUnl4QlFVRkpPMFZCUTB3c1FVRkJaMEk3TzBGQlJXeENMRUZCUVUwN1JVRkRTaXhCUVVGUk8wVkJRMUlzUVVGQlZUdEZRVU5XTEVGQlFVODdSVUZEVkN4QlFVRk5MRUZCUVUwN1NVRkRVaXhCUVVGUE8wbEJRMUFzUVVGQlN6dEpRVU5NTEVGQlFVMDdTVUZEVGl4QlFVRlZPMGxCUTFZc1FVRkJNRUk3TzBGQlJUbENMRUZCUVVVN1JVTndSVmtzUVVSeFJWbzdPenM3TzBGQlQwWTdSVUZEUlN4QlFVRlBPenRCUVVWVUxFRkJRVkVzUVVGQlJ5eEJRVUZKTEVGQlFVVXNRVUZCV1R0RlFVTXpRaXhCUVVGcFFqdEZRVU5xUWl4QlFVRmpPMFZCUTJRc1FVRkJZVHM3UVVGRlppeEJRVUZGTEVGQlFWa3NRVUZCUnl4QlFVRkhPMFZCUTJ4Q0xFRkJRV2xDTzBWQlEycENMRUZCUVdNN1JVRkRaQ3hCUVVGaE96dEJRVVZtTEVGQlFVVXNRVUZCV1N4QlFVRkhMRUZCUVVjc1FVRkJSeXhCUVVGSE8wVkJRM2hDTEVGQlFXbENPMFZCUTJwQ0xFRkJRV003UlVGRFpDeEJRVUZoT3p0QlFVVm1MRUZCUVZFc1FVRkJSeXhCUVVGSkxFRkJRVVVzUVVGQldUdEZRVU16UWl4QlFVRnBRanRGUVVOcVFpeEJRVUZqTzBWQlEyUXNRVUZCWVRzN1FVRkZaaXhCUVVGRkxFRkJRVmtzUVVGQlJ5eEJRVUZITzBWQlEyeENMRUZCUVdsQ08wVkJRMnBDTEVGQlFXTTdSVUZEWkN4QlFVRmhPenRCUVVWbUxFRkJRVVVzUVVGQlZ6dEZRVU5ZTEVGQlFXRTdPMEZCUldZc1FVRkJUenRGUVVOTUxFRkJRVTg3TzBGQlIxUXNRVUZCVHp0RlFVTk1MRUZCUVdFN08wRkJSV1k3UlVGRFJTeEJRVUZoT3p0QlFVVm1PMFZCUTBVc1FVRkJXVHM3UVVGRlpDeEJRVUZUTEVGQlFWTTdSVUZEYUVJc1FVRkJaMEk3TzBGQlJXeENPMFZCUTBVc1FVRkJWenM3UVVGSFlpeEJRVUZoTzBWQlExZ3NRVUZCV1RzN1FVRkZaQ3hCUVVGWE8wVkJRMVFzUVVGQldUczdRVUZGWkN4QlFVRlpPMFZCUTFZc1FVRkJXVHM3UVVGRlpEdEZRVU5GTEVGQlFXRTdPMEZGZWtsbU8wVkJRMFVzUVVGQlVUdEZRVU5TTEVGQlFWTTdPMEZCUlZnN1JVRkRReXhCUVVGWk96dEJRVVZpTEVGQlFVY3NRVUZCUXl4QlFVRlRMRUZCUVVNN1JVRkRZaXhCUVVGWk96dEJRVVZpTzBWQlEwVXNRVUZCVVRzN1FVRkZWanRGUVVORExFRkJRV2xDT3p0QlFVVnNRaXhCUVVGVExFRkJRVThzUVVGQlV5eEJRVUZaTEVGQlFWRXNRVUZCVVN4QlFVRlJMRUZCUVZFc1FVRkJUU3hCUVVGTkxFRkJRVXM3UlVGRGNrWXNRVUZCVXpzN1FVRkZWaXhCUVVGWk8wVkJRMUlzUVVGQlVUczdRVUZGV2l4QlFVRlZMRUZCUVZNc1FVRkJWU3hCUVVGUkxFRkJRVU1zUVVGQlV5eEJRVUZETzBWQlJUVkRMRUZCUVZNN1JVRkRWQ3hCUVVGVE96dEJRVVZpTzBWQlEwa3NRVUZCYVVJN1JVRkRha0lzUVVGQlowSTdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPMEZEWjA5d1FqdEZRVWxGTEVGQlFXRTdSVUZEWWl4QlFVRkxPMFZCUTB3c1FVRkJkVVU3T3p0RlFVbDJSU3hCUVVGaE8wVkJRMklzUVVGQlN6dEZRVU5NTEVGQlFYVkZPenM3UlVGSmRrVXNRVUZCWVR0RlFVTmlMRUZCUVVzN1JVRkRUQ3hCUVVGMVJUczdPMFZCU1haRkxFRkJRV0U3UlVGRFlpeEJRVUZMTzBWQlEwd3NRVUZCYzBVN096dEZRVWwwUlN4QlFVRmhPMFZCUTJJc1FVRkJTenRGUVVOTUxFRkJRWFZGT3pzN1JVRkpka1VzUVVGQllUdEZRVU5pTEVGQlFVczdSVUZEVEN4QlFVRjFSVHM3UVVOb1UzcEZPMFZCUTBVc1FVRkJVVHRGUVVOU0xFRkJRVTg3TzBGQlJWUTdSVUZEUlN4QlFVRk5PenRCUVVWU08wVklURmNzUVVkTlZEczdRVUZGUmp0RlNGSlhMRUZIVTFRN08wRkRXa1k3UlVGRFJTeEJRVUZaT3p0QlFVZGtPMFZCUTBVc1FVRkJVVHRGUVVOU0xFRkJRVmM3UlVGRFdDeEJRVUZUTzBWRGMwTlVPMGxFZWtOR08wMUJUVWtzUVVGQlZ6czdRVUZIWml4QlFVRkhPMFZCUTBRc1FVRkJUenM3UVVWa1ZDeEJRVUZUTzBWQlExQXNRVUZCVVR0RlFVTlNMRUZCUVZFN1JVRkRVaXhCUVVGTk96dEJRMFpTTzBWQlEwVXNRVUZCYVVJN1JVRkRha0lzUVVGQmNVSTdSVUZEY2tJc1FVRkJiVUk3TzBGQlJYSkNPMFZCUTBVc1FVRkJjVUk3UlVGRGNrSXNRVUZCYlVJN1JVRkRia0lzUVVGQmRVSTdSVUZEZGtJc1FVRkJhVUk3T3pzN1JVWnRRMnBDTzBsRmRrTkdPMDFCVDBrc1FVRkJkVUk3UlVablEzcENPMGxGZGtOR08wMUJWVWtzUVVGQmRVSTdPMEZCVXpOQ0xFRkJRVXNzUVVGQlVUdEZRVU5ZTEVGQlFWYzdPMEZCUjJJc1FVRkJZenRGUVVOYUxFRkJRVTg3UlVGRFVDeEJRVUZaT3p0QlFVVmtMRUZCUVZVN1JVRkRVaXhCUVVGUE8wVkJRMUFzUVVGQlVUdEZRVU5TTEVGQlFXZENPenRCUVVWc1FpeEJRVUZWTzBWQlExSXNRVUZCVHp0RlFVTlFMRUZCUVZFN1JVRkRVaXhCUVVGblFqczdRVUZGYkVJc1FVRkJWVHRGUVVOU0xFRkJRVTg3UlVGRFVDeEJRVUZSTzBWQlExSXNRVUZCWjBJN08wRkRPVU5zUWp0RlFVTkZMRUZCUVdFN1JVZzBRMkk3U1VjM1EwWTdUVUZKU1N4QlFVRmhPenRCUTBwcVFqdEZWRTlYTEVGVFRsUTdSVUZEUVN4QlFVRlRPMFZCUTFRc1FVRkJXVHRGUVVOa08wbFVSRmNzUVZORlVEdEpRVU5CTEVGQlFWazdSVUZEYUVJc1FVRkJVVHRKVkV4UExFRlRUVmc3U1VGRFNpeEJRVUZSTEVGQlFVTTdUVlJTU3l4QlUxTlNPenM3T3p0QlFVMU9PMFZCUTBVc1FVRkJaMEk3UlVGRGFFSXNRVUZCWXpzN1FVRkZhRUk3UlVGRFJTeEJRVUZsTzBWQlEyWXNRVUZCVXp0RlFVTlVMRUZCUVZNN1JVRkRWQ3hCUVVGVE8wVkJRMVFzUVVGQldUczdRVUZGWkN4QlFVRkxPMFZCUTBnc1FVRkJVenM3UVVGRldEdEZRVU5GTEVGQlFWTTdSVUZEVkN4QlFVRlJPMFZCUTFJc1FVRkJUenM3UVVGRlZDeEJRVUZETzBWVWFFTlZMRUZUYVVOVU8wVkJRMEVzUVVGQlV6dEZRVU5VTEVGQlFWYzdSVUZEV0N4QlFVRm5RanRGUVVOb1FpeEJRVUZaTzBWS1MxbzdTVWxXUml4QlFVRkRPMDFCVVVjc1FVRkJWenRGU2tWaU8wbEpWa1lzUVVGQlF6dE5RVmRITEVGQlFWYzdSVUZGWml4QlFVRkRMRUZCUVd0Q08wbFVMME5NTEVGVFowUldPMFZCUTBvc1FVRkJReXhCUVVGclFqdEpWR2hFU2l4QlUybEVXRHRGUVVOS0xFRkJRVU1zUVVGQmEwSTdTVlJ3UkV3c1FWTnhSRlk3UlVGRlNpeEJRVUZETEVGQlFXbENPMGxVYUVSUUxFRlRhVVJRT3p0QlEzWkVTaXhCUVVGWE8wVkJRMVFzUVVGQlV6dEZRVU5VTEVGQlFVODdSVUZEVUN4QlFVRmhPMFZCUTJJc1FVRkJZenRGUVVOa0xFRkJRV2RDTzBWQlEyaENMRUZCUVdFN1JVRkRZaXhCUVVGM1FqdEZRVU40UWl4QlFVRjVRanRGUVVONlFpeEJRVUZYTzBWQlExZ3NRVUZCV1RzN1FVRkZaQ3hCUVVGSk8wVkJRMFlzUVVGQlZUdEZRVU5XTEVGQlFWRTdPMlZCUlVzN1JVRkZaaXhCUVVGSkxFRkJRVmM3U1VGRFZDeEJRVUZaT3p0QlFVZHNRaXhCUVVGRE8wVldjRUpWTEVGVmNVSlVPMFZCUTBFc1FVRkJVenRGUVVOVUxFRkJRVmM3UlVGRFdDeEJRVUZuUWp0RlRHdENhRUk3U1V0MFFrWXNRVUZCUXp0TlFVOUhMRUZCUVZjN1JVeGxZanRKUzNSQ1JpeEJRVUZETzAxQlZVY3NRVUZCVnp0RlRGbGlPMGxMZEVKR0xFRkJRVU03VFVGaFJ5eEJRVUZYTzBWQlJXWXNRVUZCUXl4QlFVRlhPMGxXY2tORkxFRlZjME5XTzBWQlEwb3NRVUZCUXl4QlFVRlhPMGxXZEVOSExFRlZkVU5ZTzBWQlEwb3NRVUZCUXl4QlFVRlhPMGxXTVVORkxFRlZNa05XTzBWQlJVb3NRVUZCUXl4QlFVRlZPMGxXZEVOQkxFRlZkVU5RT3p0QlFVZEtPMFZXZWtOWExFRlZNRU5VTzBWWU5VTnhRaXhCVnpaRGNrSTdSVUZEUVN4QlFVRlhPMFZCUTFnc1FVRkJaMEk3UlVGRGFFSXNRVUZCWjBJN1JVeFVhRUk3U1V0SlJqdE5RVkZKTEVGQlFWYzdSVXhhWWp0SlMwbEdPMDFCVjBrc1FVRkJVenM3VjBGRlJqdEZRVU5ZTzBsQlEwa3NRVUZCVnpzN1JVRkRaanRKUVVOSkxFRkJRVmM3TzBGQlNXWTdSVUZEUlN4QlFVRlpPMFZCUTFvc1FVRkJVVHRGUVVOU0xFRkJRVkU3UlVGRFVpeEJRVUZWTzBWQlExWXNRVUZCVlR0RlFVTldMRUZCUVU4N1JVRkRVQ3hCUVVGTE8wVkJRMHdzUVVGQlR6dEZRVU5RTEVGQlFWTTdSVU01UlZRc1FVRkJXVHRGUkdkR1dpeEJRVUZYTzBWQlExZ3NRVUZCYzBJN1JVRkRkRUlzUVVGQlZ6dEZUSFJEV0R0SlMzbENSanROUVdkQ1NTeEJRVUZSTzBWQlJWb3NRVUZCVHp0SlFVTklMRUZCUVZrN1JVRkZhRUk3U1VGRFNTeEJRVUZaTzBsQlExb3NRVUZCVXp0SlFVTlVMRUZCUVZNN1NVRkRWQ3hCUVVGUE8wbE1iRVJVTzAxTE9FTkdPMUZCVDAwc1FVRkJVenRKUVVWbUxFRkJRV1U3VFVGRFZDeEJRVUZoTzAxQlEySXNRVUZCWVR0RlFVVnVRaXhCUVVGUE8wbEJRMGdzUVVGQlZ6dEpRVU5ZTEVGQlFWazdTVUZEV2l4QlFVRlRPMFZCUldJc1FVRkJUenRKUVVOSUxFRkJRVlU3U1VGRFZpeEJRVUZaTzBsQlExb3NRVUZCYzBJN1JVRkZNVUlzUVVGQlR6dEpRVU5JTEVGQlFVODdTVUZEVUN4QlFVRlJPMGxCUTFJc1FVRkJWVHRKUVVOV0xFRkJRVkU3U1VGRFVpeEJRVUZaTzBsQlExb3NRVUZCV1R0SlFVVm9RaXhCUVVGUExFRkJRVlU3VFVGRFdDeEJRVUZYTzAxQlExZ3NRVUZCVXp0RlFVVm1PMGxCUTBrc1FVRkJVenRKUVVOVUxFRkJRVTg3U1VGRFVDeEJRVUZSTzBsQlExSXNRVUZCVnp0SlFVTllMRUZCUVhOQ08wbE1kRVo0UWp0TlMybEdSanRSUVZGTkxFRkJRVTg3U1V4NlJsZzdUVXRwUmtZN1VVRlhUU3hCUVVGUE8wVkJSV0k3U1VGRFNTeEJRVUZwUWp0SlF6Tkpia0lzUVVGQldUdEZSRGhKWkR0SlZqZEpaU3hCVlRoSldEdEpRVU5CTEVGQlFWTTdTVUZEVkN4QlFVRlhPMGxZTTBsUExFRlhORWxzUWp0SlFVTkJMRUZCUVZNN1NVRkRWQ3hCUVVGblFqdEpUSGhIYkVJN1RVdHJSMFk3VVVGVFRTeEJRVUZYTzBsQlJXcENMRUZCUVhsQ08wMVdla3BZTEVGVk1FcFNPMDFXZEVwRkxFRlZkVXBHTzBWQlJVNDdTVUZEU1N4QlFVRlRPMGxCUTFRc1FVRkJUenRGUVVWWU8wbFdNMHBYTEVGVk5FcFFPMGxZTjBwdFFpeEJWemhLYmtJN1NVeDJTRVk3VFV0eFNFWTdVVUZMVFN4QlFVRlRPenRCUVVkbU8wVkJRMFVzUVVGQlVUdEZRVU5TTEVGQlFWTTdSVUZEVkN4QlFVRlpPMFZCUTFvc1FVRkJZVHRGUVVWbUxFRkJRVlU3U1ZZNVMwc3NRVlVyUzFnN1NWZ3pTMjFDTEVGWE5FdHVRanRKUVVOQkxFRkJRVmM3U1VGRFdDeEJRVUZuUWp0SlFVTm9RaXhCUVVGblFqdEpUSGhKYkVJN1RVdHRTVVlzUVVGQlZUdFJRVkZLTEVGQlFWTTdSVUZGWml4QlFVRlRPMGxCUTB3c1FVRkJVenRGUVVWaUxFRkJRVk1zUVVGQlV5eEJRVUZUTEVGQlFVODdTVll6VEc1Q0xFRlZOa3hZTzBWQlJVb3NRVUZCVXl4QlFVRk5MRUZCUVZNc1FVRkJVeXhCUVVGTk8wbFdhRTE2UWl4QlZXdE5WanM3UVVGRlNpeEJRVUZWTEVGQlFWTTdSVUZEYWtJc1FVRkJVenRGUVVOVUxFRkJRVmM3UlVGRFdDeEJRVUZoTzBWQlEySXNRVUZCWlRzN1FVRkhha0k3UlVGRFJTeEJRVUZ6UWpzN1FVVTNUWGhDTzBWQlEwVXNRVUZCY1VJN1JVRkRja0lzUVVGQmJVSTdSVUZEYmtJc1FVRkJkVUk3UlVGRGRrSXNRVUZCYVVJN1JXSkZTU3hCWVVSeVFqdEZRVU5CTEVGQlFVODdSVUZEVUN4QlFVRlJPMFZCUTFJc1FVRkJVenRGUVVOVUxFRkJRVlU3UlVGRFZpeEJRVUZUTzBWUWJVTlVPMGxQTjBOR08wMUJZVWtzUVVGQmRVSTdUVUZEZGtJc1FVRkJVenRGUVVWaUxFRkJRVlU3U1VGRFRpeEJRVUZUTzBsQlExUXNRVUZCVVR0SlFVTlNMRUZCUVU4N1NVRkRVQ3hCUVVGVE8wbEJRMVFzUVVGQlZUdEpRVU5XTEVGQlFWRTdTVUZEVWl4QlFVRk5PMGxCUTA0c1FVRkJXVHRGUVVWb1FqdEpRVU5KTEVGQlFWazdTVUZEV2l4QlFVRlZPMGxCUTFZc1FVRkJVenRGUVVWaU8wbEJRMGtzUVVGQllUdEpXak5DVkN4QldUUkNTanRKUVVOQkxFRkJRVmM3U1VGRFdDeEJRVUZSTzBsQlExSXNRVUZCV1R0SlFVTmFMRUZCUVdkQ08wbEJRMmhDTEVGQlFWYzdTVUZEV0N4QlFVRnpRanRKUVVOMFFpeEJRVUZYTzBsUVMySTdUVTlrUmp0UlFWbE5MRUZCUVZjN1VVRkRXQ3hCUVVGUk8wbFFRMW83VFU5a1JqdFJRV2RDVFN4QlFVRlhPMUZCUTFnc1FVRkJVVHRGUVVWa08wbGFOME5STEVGWk9FTktPMGxCUTBFc1FVRkJWenRKWWpORFRDeEJZVFJEVGp0SlFVTkJMRUZCUVZFN1NVRkRVaXhCUVVGWk96dEJRM1pFYUVJN1JXSkxVU3hCWVVwT08wVkJRMEVzUVVGQlV6dEZRVVZZTzBsQlEwa3NRVUZCVHp0SlFVTlFMRUZCUVZFN1NWSjFRMVk3VFZGNlEwWTdVVUZMVFN4QlFVRlBPMFZCUldJN1NXUk1kVUlzUVdOTmJrSTdTVUZEUVN4QlFVRlhPMGxCUTFnc1FVRkJZVHRKUVVOaUxFRkJRVkU3U1VGRFVpeEJRVUZoTzBsQlEySXNRVUZCVlR0SlFVTldMRUZCUVZrN1NVRkRXaXhCUVVGblFqdEpRVVZ3UWl4QlFVRnhRanROUVVObUxFRkJRVms3VFVGRFdpeEJRVUZUTzAxQlExUXNRVUZCVXp0TlFVTlVMRUZCUVZFN1RVRkRVaXhCUVVGUE8wMUJRMUFzUVVGQlVUdE5VbXRDV2p0UlVYaENSaXhCUVVGeFFqdFZRVk5pTEVGQlFVODdSVUZGWmp0SlpERkNkVUlzUVdNeVFtNUNPMGxCUTBFc1FVRkJWenRKUVVOWUxFRkJRV0U3U1VGRFlpeEJRVUZSTzBsQlExSXNRVUZCVXp0SlFVTlVMRUZCUVZrN1JVRkZhRUk3U1dKb1ExY3NRV0ZwUTFBN1NXUnVRMjFDTEVGamIwTnVRanRKUVVOQkxFRkJRVmM3U1VGRFdDeEJRVUZaTzBWQlJXaENPMGxpZGtOWExFRmhkME5RTzBsQlEwRXNRVUZCWjBJN1NVRkZjRUlzUVVGQmFVSXNRVUZCU1N4QlFVRnBRaXhCUVVGSkxFRkJRV2xDTEVGQlFVa3NRVUZCYVVJc1FVRkJTU3hCUVVGcFFpeEJRVUZKTEVGQlFXbENPMDFrTTBOd1J5eEJZelJEYUVJN1RVRkRRU3hCUVVGWE8wMUJRMWdzUVVGQllUdE5RVU5pTEVGQlFWRTdUVUZEVWl4QlFVRlRPMDFCUTFRc1FVRkJXVHRKUVVWc1FpeEJRVUZwUWp0TlFVTllMRUZCUVZFN08wRkRNMFJrTzBWa1MxRXNRV05LVGp0RlprdHhRaXhCWlVweVFqdEZRVU5CTEVGQlFVODdSVUZEVUN4QlFVRlJPMFZCUTFJc1FVRkJVenRGUVVOVUxFRkJRVlU3UlVGRFZpeEJRVUZUTzBWQlJWZzdTVUZEU1N4QlFVRlpPMGxCUTFvc1FVRkJWVHRKUVVOV0xFRkJRVk03UlVGRllqdEpaRmhYTEVGaldWQTdTVUZEUVN4QlFVRlhPMGxCUTFnc1FVRkJXVHRKUVVOYUxFRkJRV2RDTzBsbVVXeENMRUZCUVZrN1NVRkRXaXhCUVVGbE8wbE5hMEptTzAxVEwwSkdPMUZCVVUwc1FVRkJWenRSWmtsbUxFRkJRVms3VVVGRFdpeEJRVUZsTzBsTmEwSm1PMDFUTDBKR08xRkJXVTBzUVVGQlZ6dFJaa0ZtTEVGQlFWazdVVUZEV2l4QlFVRmxPMFZsUldwQ08wbGtlRUpSTEVGamVVSktPMGxCUTBFc1FVRkJWenRKWm5SQ1RDeEJaWFZDVGp0SlFVTkJMRUZCUVZFN1NVRkRVaXhCUVVGblFqdEpRVU5vUWl4QlFVRlpPenRCUTI1RGFFSTdSVUZEUlN4QlFVRnhRanRGUVVOeVFpeEJRVUZ0UWp0RlFVTnVRaXhCUVVGMVFqdEZRVU4yUWl4QlFVRnBRanRGYUVKRlNTeEJaMEpFY2tJN1JVRkRRU3hCUVVGUE8wVkJRMUFzUVVGQlVUdEZRVU5TTEVGQlFWVTdSVUZEVml4QlFVRlRPMFZXYjBOVU8wbFZOME5HTzAxQldVa3NRVUZCZFVJN1JVRkZNMElzUVVGQlVUdEpRVU5LTEVGQlFWTTdTVUZEVkN4QlFVRlJPMGxCUTFJc1FVRkJUenRKUVVOUUxFRkJRVk03U1VGRFZDeEJRVUZWTzBsQlExWXNRVUZCVVR0SlFVTlNMRUZCUVUwN1NVRkRUaXhCUVVGWk8wVkJSV2hDTzBsQlEwa3NRVUZCV1R0SlFVTmFMRUZCUVZVN1NVRkRWaXhCUVVGVE8wbG9Ra2RZTEVGQlFXRTdTVUZEWWl4QlFVRm5RanRKVFdOb1FqdE5WWEpDUmp0UmFFSk5SU3hCUVVGaE8xRkJRMklzUVVGQlowSTdSV2RDUld4Q08wbG1OVUpSTEVGbE5rSktPMGxCUTBFc1FVRkJWenRKUVVOWUxFRkJRVkU3U1VGRFVpeEJRVUZaTzBsQlExb3NRVUZCWjBJN1NWWlBiRUk3VFZWYVJqdFJRVkZOTEVGQlFWYzdVVUZEV0N4QlFVRlJPMGxXUjFvN1RWVmFSanRSUVZsTkxFRkJRVmM3VVVGRFdDeEJRVUZSTzBWQlJXUTdTV1l6UTFFc1FXVTBRMG83U1VGRFFTeEJRVUZYTzBsb1FucERUQ3hCWjBJd1EwNDdTVUZEUVN4QlFVRlJPMGxCUTFJc1FVRkJXVHRKVmxKa08wMVZSMFk3VVVGUlRTeEJRVUZYTzBsV1dHWTdUVlZIUmp0UlFWbE5MRUZCUVZjN1VVRkRXQ3hCUVVGUk8wVkJSV1E3U1VGRGIwSXNRVU12Ukd4Q08wbEJRMEVzUVVGQldUdEpRVU5hTEVGQlFWazdTVUZEV2l4QlFVRmxPMGxvUWtOVUxFRm5Ra0ZPTzBsQlEwRXNRVUZCVXp0SmFrSkhSQ3hCYVVKR1VqdEpRVU5CTEVGQlFWTTdTVUZEVkN4QlFVRlpPMGxCUldRc1FVRkJaMEk3VFVGRFdpeEJRVUZaTzAxb1FsWkVMRUZuUWxkWU96dEJRMkpLTzBWcVFrTmpMRUZwUWtGYU8wVkJRMEVzUVVGQlR6dEZRVU5RTEVGQlFXVTdSVUZEWml4QlFVRlRPMFZCUTFRc1FVRkJXVHRGUVVWa08wbHFRa1pSTEVGclFraE9PMGx1UWtseFFpeEJiVUpJY2tJN1NVRkRRU3hCUVVGWE8wbEJRMWdzUVVGQllUdEpRVU5pTEVGQlFWRTdTVUZEVWl4QlFVRmhPMGxCUTJJc1FVRkJWVHRKUVVOV0xFRkJRVms3U1VGRFdpeEJRVUZuUWp0SlltMURhRUk3VFZsMFEwWTdVVU5OU1N4QlFVRlhPMUZCUTFnc1FVRkJaMEk3UlVSS2NFSTdTVUZEU1N4QlFVRlRPMGxzUWt4VkxFRnJRazF1UWp0SlFVTkJMRUZCUVZjN1NVRkRXQ3hCUVVGVE8wbEJSV0lzUVVGQlowSTdUVUZEVml4QlFVRlhPMDFhTkVKbU8xRlpOMEpHTEVGQlFXZENPMVZCU1ZJc1FVRkJWenRWUVVOWUxFRkJRVk03VlVGRFZDeEJRVUZUTzBWQlJXcENMRUZCUVZVN1NVRkRUaXhCUVVGUk8wbEJRMUlzUVVGQldUdEpRVU5hTEVGQlFVODdPMEZCUlZnN1JVRkRSU3hCUVVGVk8wVkJRMVlzUVVGQlV6dEZRVU5VTEVGQlFWRTdSVnBoVWp0SldXaENSanROUVUxSkxFRkJRVkU3UlVGRldpeEJRVUZQTzBsQlEwZ3NRVUZCVlR0SlFVTldMRUZCUVVzN1NVRkRUQ3hCUVVGTk96dEJRVVZXTzBWc1FuQkRkVUlzUVd0Q2NVTnlRanRGUVVOQkxFRkJRVk03UlVGRFZDeEJRVUZYTzBWQlJXSXNRVUZCWlR0SlFVTllMRUZCUVZNN08wRkZhRVJpTzBWdVFrRmpMRUZ0UWtOYU8wVkJRMEVzUVVGQlowSTdSVUZGYkVJN1NVRkRTU3hCUVVGUE8wbEJRMUFzUVVGQlVUdEpaSFZEVmp0TlkzcERSanRSUVV0TkxFRkJRVTg3U1dSdlExZzdUV042UTBZN1VVRlJUU3hCUVVGUE8wVkJSV0k3U1c1Q1VGY3NRVzFDVVZBN1NYQkNWRzFDTEVGdlFsVnVRanRKUVVOQkxFRkJRVmM3U1VGRFdDeEJRVUZoTzBsQlEySXNRVUZCVVR0SlFVTlNMRUZCUVdFN1NVRkRZaXhCUVVGVk8wbEJRMVlzUVVGQldUdEpRVU5hTEVGQlFXZENPMGxrYzBKc1FqdE5ZeTlDUmp0UlFWbE5MRUZCUVZjN1NVRkZha0lzUVVGQmIwSTdUVUZEWkN4QlFVRlpPMDFCUTFvc1FVRkJVenROUVVOVUxFRkJRVk03VFVGRFZDeEJRVUZSTzAxQlExSXNRVUZCVHp0TlFVTlFMRUZCUVZFN1RXUlhXanRSWTJwQ1JpeEJRVUZ2UWp0VlFWTmFMRUZCUVU4N1JVRkZaanRKYmtKeVEyVXNRVzFDYzBOWU8wbEJSVW9zUVVGQmQwSTdUVzVDZWtOV0xFRnRRakJEVWp0RlFVVk9PMGx1UW5SRFZ5eEJiVUoxUTFBN1NVRkRRU3hCUVVGblFqdEZRVVZ3UWp0SlFVTkpMRUZCUVZrN1JVRkZhRUk3U1VGRGIwSXNRVWh3Ukd4Q08wbEJRMEVzUVVGQldUdEpRVU5hTEVGQlFWazdTVUZEV2l4QlFVRmxPMGxvUWtOVUxFRm5Ra0ZPTzBsQlEwRXNRVUZCVXp0SmFrSkhSQ3hCYVVKR1VqdEpRVU5CTEVGQlFWTTdTVUZEVkN4QlFVRlpPMGxCUldRc1FVRkJiVUk3VFVGRFppeEJRVUZaTzAxb1FsWkVMRUZuUWxkWU8wbFlaME5HTzAxalQwWTdVVUZKYzBJc1FVaDJSSEJDTzFGQlEwRXNRVUZCV1R0UlFVTmFMRUZCUVZrN1VVRkRXaXhCUVVGbE8xRm9Ra05VTEVGblFrRk9PMUZCUTBFc1FVRkJVenRSYWtKSFJDeEJhVUpHVWp0UlFVTkJMRUZCUVZNN1VVRkRWQ3hCUVVGWk8xRkJSV1FzUVVGQmJVSTdWVUZEWml4QlFVRlpPMVZvUWxaRUxFRm5RbGRZT3p0QlNXSktPMFZ3UWxOVExFRnZRbEpRTzBWQlEwRXNRVUZCV1R0RlFVTmFMRUZCUVZNN1JVRkZXRHRKUVVOSkxFRkJRVTg3U1VGRFVDeEJRVUZSTzBsbWMwTldPMDFsZUVOR08xRkJTMDBzUVVGQlR6dEZRVVZpTzBsQlEwa3NRVUZCV1R0SmNrSlFUeXhCY1VKUmJrSTdTVUZEUVN4QlFVRlhPMGxCUTFnc1FVRkJZVHRKWmpaQ1pqdE5aV3BEUmp0UlFVOU5MRUZCUVZjN1JVRkZha0k3U1hCQ2JrSmxMRUZ2UW05Q1dEdEpRVU5CTEVGQlFWTTdTVUZEVkN4QlFVRlJPMGxCUTFJc1FVRkJVenRKUVVWaUxFRkJRV3RDTzAxd1FqRkNTaXhCYjBJeVFsSTdUWEJDZGtKRkxFRnZRbmRDUmpzN1FVTTFRazQ3UlVGRFJTeEJRVUZaT3p0QlFVVmtMRUZCUVVrN1JVRkRSaXhCUVVGVk96dEJRVVZhTzBWQlEwVXNRVUZCVlR0RlFVTldMRUZCUVhGQ08wVkJRM0pDTEVGQlFYRkNPMFZCUTNaQ0xFRkJRVWs3U1VGRFFTeEJRVUZYTzBsQlEyWXNRVUZCU1N4QlFVRlhPMDFCUTFRc1FVRkJVenROUVVOVUxFRkJRVmM3TzBGQlJXcENPMFZCUTBFc1FVRkJTVHRKUVVOQkxFRkJRVmM3TzBGQlJXWTdSVUZEUVN4QlFVRkpPMGxCUTBFc1FVRkJWenM3UVVGRlpqdEZja0p3UWxFc1FYRkNjVUpPTzBWQlEwRXNRVUZCVXp0RlFVTlVMRUZCUVZrN1JVRkZaQ3hCUVVGclFqdEpRVU5hTEVGQlFWTTdTVUZEVkN4QlFVRlRPMGxCUTFRc1FVRkJUenRGUVVOaU8wbEJRMGtzUVVGQlR6dEpkRUkxUWxjc1FYTkNOa0pzUWp0SlFVTkJMRUZCUVdFN1NVRkRZaXhCUVVGblFqdEpRVU5vUWl4QlFVRmxPMFZCUTI1Q08wbEJRMGtzUVVGQldUdEpRVU5hTEVGQlFVODdSVUZEV0R0SlFVTkpMRUZCUVZrN1JVRkRhRUlzUVVGQlVUdEpRVU5LTEVGQlFXVTdTVUZEWml4QlFVRmxPMGxCUTJZc1FVRkJXVHRKUVVOYUxFRkJRVms3UlVGRGFFSTdTVUZEU1N4QlFVRlJPMGxCUTFJc1FVRkJWVHRKUTJwRVdpeEJRVUZUTzBsQlExUXNRVUZCVlR0SlFVTldMRUZCUVZVN1NVRkRWaXhCUVVGeFFqdEpRVU55UWl4QlFVRnRRanRKUVVOdVFpeEJRVUZwUWp0SlFVTnFRaXhCUkRSRGNVSTdTVU16UTNKQ0xFRkJRVmM3U1VGRllpeEJRVUZsTzAxQlExZ3NRVUZCVXp0TlFVTlVMRUZCUVZNN1RVRkRWQ3hCUkhORE1FSTdUVU55UXpGQ0xFRkJRVTg3UlVSelExZ3NRVUZCVVR0SlFVTktMRUZCUVZNN1NVRkRWQ3hCUVVGUE8wbEJRMUFzUVVGQlpUdEZRVU51UWp0SlFVTkpMRUZCUVZVN1NVRkRWaXhCUVVGTE8wbEJRMHdzUVVGQlRUdEpRVU5PTEVGQlFVODdTVUZEVUN4QlFVRlJPMGxCUTFJc1FVRkJXVHRKUVVOYUxFRkJRVk03U1VGRFZDeEJRVUZsTzBsQlEyWXNRVUZCV1R0SlFVTm9RaXhCUVVGeFFqdE5RVU5tTEVGQlFWVTdUVUZEVml4QlFVRk5PMDFCUTA0c1FVRkJTenROUVVOTUxFRkJRVkU3VFVGRFVpeEJRVUZQTzAxQlExQXNRVUZCTUVJN1RVRkRNVUlzUVVGQlR6dE5RVU5RTEVGQlFWYzdUWFJDZEVWTkxFRnpRblZGYWtJN1JVRkRUanRKY2tJMVJXVXNRWEZDTmtWWU8wbEJRMEVzUVVGQldUdEpkRUl4UlU4c1FYTkNNa1Z1UWp0SlFVTkJMRUZCUVdFN1NVRkRZaXhCUVVGVE8wbHlRamxGVEN4QmNVSXJSVW83U1VGRFFTeEJRVUZYTzBsQlExZ3NRVUZCWjBJN1NVRkRjRUlzUVVGQmEwSTdUVUZEV2l4QlFVRlRPMDFCUTFRc1FVRkJZVHROUVVOaUxFRkJRVms3U1VGRGJFSXNRVUZCYTBJN1RVRkRXaXhCUVVGaE96dEJRVVZ1UWl4QlFVRlZMRUZCUVZFc1FVRkJSVHRGUVVOc1FpeEJRVUZaT3p0QlFVVmtMRUZCUVZVc1FVRkJVU3hCUVVGRkxFRkJRVTg3UlVGRGVrSXNRVUZCVXpzN1FVRkZXRHRGUVVOQkxFRkJRVkU3U1VGRFNpeEJRVUZUTzBsQlExUXNRVUZCVHp0RlFVTllMRUZCUVZFc1FVRkJSVHRKUVVOT0xFRkJRV003TzBGQlJXeENPMFZEZUVkRkxFRkJRVk03UlVGRFZDeEJRVUZWTzBWQlExWXNRVUZCVlR0RlFVTldMRUZCUVhGQ08wVkJRM0pDTEVGQlFXMUNPMFZCUTI1Q0xFRkJRV2xDTzBWQlEycENMRUZFYlVkdFFqdEZRMnhIYmtJc1FVRkJWenRGUVVWaUxFRkJRVFJDTzBsQlEzaENMRUZCUVZNN1NVRkRWQ3hCUVVGVE8wbEJRMVFzUVVRMlJuZENPMGxETlVaNFFpeEJRVUZQT3p0QlJEaEdXRHRGUVVORkxFRkJRVlU3UlVGRFZpeEJRVUZMTzBWQlEwd3NRVUZCVHp0RlFVTlFMRUZCUVU4N1JVRkRVQ3hCUVVGUk8wVkJRMUlzUVVGQldUdEZRVU5hTEVGQlFUUkNPMFZ5UW5KSWFFSXNRWEZDYzBoYU8wVkJRMEVzUVVGQlV6dEZRVU5VTEVGQlFWYzdSVUZEV0N4QlFVRnhRanRGUVVOeVFpeEJRVUZ4UWp0RlFVTjJRaXhCUVVGaE8wbEJRMVFzUVVGQlZ6dEZRVU5tTzBsQlEwa3NRVUZCVlR0RlFVTmtMRUZCUVd0Q08wbEJRMlFzUVVGQlV6dEpRVU5VTEVGQlFWVTdTVUZEVml4QlFVRlJPMGxCUTFJc1FVRkJUVHRKUVVOT0xFRkJRVTg3U1VGRFVDeEJRVUZSTzBsQlExSXNRVUZCV1R0RlFVVm9RaXhCUVVGak8wbEJRMVlzUVVGQlR6dEpRVU5RTEVGQlFWTTdSVUZGWWl4QlFVRmpPMGxCUTFZc1FVRkJVenRKY2tKNFNVd3NRWEZDZVVsS08wbEJSVW9zUVVGQll6dE5ja0l6U1U0c1FYRkNORWxHTzAxMFFqTkphVUlzUVhOQ05FbHFRanROUVVOQkxFRkJRVmM3VFVGRFdDeEJRVUZoTzAxQlEySXNRVUZCVVR0TlFVTlNMRUZCUVdFN1RVRkRZaXhCUVVGVk8wMUJRMVlzUVVGQldUdE5RVU5hTEVGQlFXZENPMDFvUWpWSGNFSTdVV2RDYlVkR0xFRkJRV003VlVGWlRpeEJRVUZUTzAxb1FpOUhaanRSWjBKdFIwWXNRVUZCWXp0VlFXVk9MRUZCUVZjN1RVRkZia0lzUVVGQll5eEJRVUZuUXp0UlFVTjBReXhCUVVGWk8xRkJRMW9zUVVGQlV6dFJRVU5VTEVGQlFWTTdVVUZEVkN4QlFVRlJPMUZCUTFJc1FVRkJUenRSUVVOUUxFRkJRVkU3VVdoQ01VaGtPMVZuUW05SVJpeEJRVUZqTEVGQlFXZERPMWxCVTNCRExFRkJRVTg3U1VGRmFrSXNRVUZCWXp0TmRFSjBTMU1zUVhOQ2RVdHFRanROUVVOQkxFRkJRVmM3VFVGRFdDeEJRVUZUTzAxQlExUXNRVUZCV1R0TlFVTmFMRUZCUVdkQ08wbEJSWFJDTEVGQlFXTTdUWEpDTlV0SUxFRnhRalpMVER0TlFVTkJMRUZCUVdkQ08wMW9RbmhKY0VJN1VXZENjMGxHTEVGQlFXTTdWVUZMVGl4QlFVRm5RanROUVVWNFFpeEJRVUZqTEVGQlFUaENPMUYwUW5CTWNrSXNRWE5DY1V4bU8xRkJRMEVzUVVGQlZ6dFJRVU5ZTEVGQlFXRTdVVUZEWWl4QlFVRlRPMUZCUTFRc1FVRkJXVHRSYUVKc1NteENPMVZuUWpaSlJpeEJRVUZqTEVGQlFUaENPMWxCVVd4RExFRkJRVk03TzBGQlJXNUNMRUZCUVdsQ0xFRkJRV01zUVVGQmEwSTdSVUZETDBNc1FVRkJVenM3UVVGRldEdEZRVU5CTzBsQlEwa3NRVUZCVHp0SlFVTlFMRUZCUVZjN1JVRkRaaXhCUVVGak8wbEJRMVlzUVVGQlV6dEZRVU5pTEVGQlFXTXNRVUZCTWtJN1NVRkRja01zUVVGQlVUczdRVUZGV2p0RlFVTkJPMGxCUTBrc1FVRkJXVHRKUVVOYUxFRkJRVTg3U1VGRFVDeEJRVUZYTzBWQlEyWXNRVUZCWXl4QlFVRnJRanRKUVVNMVFpeEJRVUZSTzBWQlExb3NRVUZCWXp0SlFVTldMRUZCUVZNN1NVRkRWQ3hCUVVGWE8wVkJSMllzUVVGQmFVSXNRVUZCWXp0SlFVTXpRaXhCUVVGWE96dEJRVVZtTzBWQlEwVXNRVUZCVHp0RlFVTlFMRUZCUVZFN1JVRkRVaXhCUVVGVk8wVkJRMVlzUVVGQlZUdEZRVU5XTEVGQlFVczdSVUZEVEN4QlFVRlBPMFZCUTFBc1FVRkJiVVE3UlVGRGJrUXNRVUZCWVR0RlFVTmlMRUZCUVdFN1JVRkRZaXhCUVVGVE8wVkJRMVFzUVVGQlV6dEZRVU5ZTEVGQlFXOUNPMGxCUTJoQ0xFRkJRVk03U1VGRFZDeEJRVUZYT3p0QlFVVm1PMFZCUTBVc1FVRkJWVHRGUVVOV0xFRkJRVXM3UlVGRFRDeEJRVUZOTzBWQlEwNHNRVUZCVHp0RlFVTlFMRUZCUVZFN1JVRkRVaXhCUVVGWk8wVkJRMW9zUVVGQlVUdEZRVU5TTEVGQlFWTTdSVUZEVkN4QlFVRlRPenRYUVVkQk8wVkJRMWc3U1VGRFNTeEJRVUZUT3p0RlFVTmlPMGxCUTBrc1FVRkJVenM3VjBGSFJqdEZRVU5ZTzBsQlEwa3NRVUZCTWtJN08wVkJReTlDTzBsQlEwa3NRVUZCZFVJN08wRkZjbEV6UWp0RlFVTkZMRUZCUVZVN1JVRkRWaXhCUVVGUk8wVkJRMUlzUVVGQlR6dEZRVU5RTEVGQlFWYzdSVUZEV0N4QlFVRlpPMFZCUTFvc1FVRkJXVHM3TzBGQlIyUXNRVUZCVFR0RlFVTktMRUZCUVZVN1JVRkRWaXhCUVVGVE8wVkJRMVFzUVVGQlV6dEZRVU5VTEVGQlFWVTdSVUZEVml4QlFVRlJPMFZCUTFJc1FVRkJUenRGUVVOUUxFRkJRVkU3UlVGRFVpeEJRVUZaTzBWQlExb3NRVUZCV1R0RlFVTmFMRUZCUVZFN1JXeENlVUpTTzBsclFtNURSaXhCUVVGTk8wMUJZVVlzUVVGQlR6dEZiRUp6UWxRN1NXdENia05HTEVGQlFVMDdUVUZuUWtZc1FVRkJUenROUVVOUUxFRkJRVkU3TzBGQlJWb3NRVUZCVFN4QlFVRlBPMFZCUTFnc1FVRkJWVHRGUVVOV0xFRkJRVk03UlVGRFZDeEJRVUZaTzBWQlExb3NRVUZCVXpzN1FVRkZXQ3hCUVVGTkxFRkJRVTg3UlVGRFdDeEJRVUZUTzBWMlFpOUNTQ3hCZFVKblEwNDdSVUZEUVN4QlFVRm5RanRGUVVOb1FpeEJRVUZYTzBWQlExZ3NRVUZCTmtJN1JVRkROMElzUVVGQmNVSTdPMEZCUlhaQ0xFRkJRVTBzUVVGQlR5eEJRVUZWTEVGQlFWVXNRVUZCVFN4QlFVRlBMRUZCUVZVN1JVRkZkRVFzUVVGQlowSTdPMEZCUld4Q0xFRkJRVTBzUVVGQlR5eEJRVUZaTEVGQlFVMHNRVUZCVHp0RlFVVndReXhCUVVGVk8wVkJRMVlzUVVGQlN6dEZRVU5NTEVGQlFVMDdSVUZEVGl4QlFVRlBPMFZCUTFBc1FVRkJVVHM3T3p0QlFVbFdMRUZCUVUwc1FVRkJUenRGUVVOWUxFRkJRVk03UlVGRFZDeEJRVUZoTzBWQlEySXNRVUZCWVR0RlFVTmlMRUZCUVZjN1JVRkRXQ3hCUVVGVE96dEJRVVZZTEVGQlFVMHNRVUZCVHp0RlFVTllMRUZCUVdNN1JVRkRaQ3hCUVVGWE8wVkJRMWdzUVVGQllUdEZiRUowUW1JN1NXdENiVUpHTEVGQlFVMHNRVUZCVHp0TlFVMVVMRUZCUVZjN08wRkJSV1lzUVVGQlRTeEJRVUZQTEVGQlFVYzdSVUZEWkN4QlFVRmhPenRCUVVWbUxFRkJRVTBzUVVGQlR5eEJRVUZKTEVGQlFVMHNRVUZCVHp0RlFVVTFRaXhCUVVGUk96dEJRVVZXTEVGQlFVMHNRVUZCVHp0RlFVTllMRUZCUVdkQ096czdPenRCUVUxc1FpeEJRVUZOTzBWQlEwb3NRVUZCV1RzN1FVRkZaQ3hCUVVGTkxFRkJRV003UlVGRGJFSXNRVUZCVXp0RlFVTlVMRUZCUVc5Q08wVkJRM0JDTEVGQlFWazdPMEZCUldRc1FVRkJUU3hCUVVGak8wVkJRMnhDTEVGQlFWTTdSVUZEVkN4QlFVRnJRanRGUVVOc1FpeEJRVUZ2UWp0RlFVTndRaXhCUVVGWk96dEJRVVZrTEVGQlFVMHNRVUZCWXl4QlFVRlZPMFZCUXpWQ0xFRkJRVlU3UlVGRFZpeEJRVUZMTzBWQlEwd3NRVUZCVHp0RlFVTlFMRUZCUVZFN1JVRkRVaXhCUVVGTk8wVkJRMDRzUVVGQlVUdEZRVU5TTEVGQlFWTTdPMEZCUlZnc1FVRkJUU3hCUVVGak8wVkJRMnhDTEVGQlFWRTdSVUZEVWl4QlFVRnhRanRGUVVOeVFpeEJRVUZaTzBWQlExb3NRVUZCYlVJN1JVRkRia0lzUVVGQlZ6czdRVUZGWWl4QlFVRk5MRUZCUVdNc1FVRkJWU3hCUVVGVkxFRkJRVTBzUVVGQll6dEZRVVV4UkN4QlFVRlRPMFZCUTFRc1FVRkJORUk3UlVGRE5VSXNRVUZCYjBJN1JVRkRjRUlzUVVGQmJVSTdSVUZEYmtJc1FVRkJWenM3UVVGRllpeEJRVUZOTEVGQlFXRXNRVUZCVHp0RlFVTjRRaXhCUVVGdFFqdEZRVU51UWl4QlFVRlhPenRCUVVWaUxFRkJRVTBzUVVGQllTeEJRVUZQTEVGQlFWVXNRVUZCVlN4QlFVRk5MRUZCUVdFc1FVRkJUenRGUVVWMFJTeEJRVUZUTzBWQlExUXNRVUZCYlVJN1JVRkRia0lzUVVGQlZ6czdRVUZGWWl4QlFVRk5MRUZCUVdFc1FVRkJUenRGUVVONFFpeEJRVUZyUWpzN1FVRkZjRUlzUVVGQlRTeEJRVUZoTEVGQlFVODdSVUZEZUVJc1FVRkJVenM3UVVONlNVMHNRVUZCY1VJN1JVRkRjRU1zUVVGQmNVSTdSVUZEY2tJc1FVRkJXVHRGUVVOYUxFRkJRV2xDTzBWQlEycENMRUZCUVZVN1JVRkRWaXhCUVVGTE8wVkJRMHdzUVVGQlRUczdRVUZGV1N4QlFVRnRRaXhCUVVGeFFqdEZRVU14UkN4QlFVRlBPMFZCUTFBc1FVRkJVVHM3UVVGRlZqdEZlRUpZWlN4QmQwSlpZanRGUVVOQkxFRkJRVms3TzBWQlEyUTdTWGhDV0ZFc1FXdENTRTQ3U1c1Q1NYRkNMRUZ0UWtoeVFqdEpRVU5CTEVGQlFWYzdTVUZEV0N4QlFVRmhPMGxCUTJJc1FVRkJVVHRKUVVOU0xFRkJRV0U3U1VGRFlpeEJRVUZWTzBsQlExWXNRVUZCV1R0SlFVTmFMRUZCUVdkQ08wbGliVU5vUWp0TmJVSTNRa1k3VVU1SVNTeEJRVUZYTzFGQlExZ3NRVUZCWjBJN1JVMUpjRUk3U1VGRFNTeEJRVUZoTzBsQlEySXNRVUZCYVVJN1NVRkRha0lzUVVGQlV6dEpRVU5VTEVGQlFWRTdPMGxCUjFvc1FVRkJhVUlzUVVGQlR6dE5RVU5zUWl4QlFVRlhPMGxCUTJwQ0xFRkJRV2xDTEVGQlFVODdUVUZEYkVJc1FVRkJWenRGUVVOcVFqczdSVUZKUVRzN08wbDRRbXBEWXl4QmQwSnpRMVk3U1VGRFFTeEJRVUZYTzBsQlExZ3NRVUZCWVR0SlFVTmlMRUZCUVZjN1NVRkRaanROZWtKdVEzTkNMRUY1UW05RGFFSTdUVUZEUVN4QlFVRmhPMGxCUTI1Q08wMTZRblpEZFVJc1FYbENkME5xUWp0RlFVVk9PMGxCUTBrc1FVRkJXVHRKUVVOYUxFRkJRV2xDTzBsQlEycENMRUZCUVZVaUxDSm1hV3hsSWpvaWMzUjViR1V1WTNOeklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lMeThnVkhsd1pXWmhZMlVvY3lrZ1lXNWtJRVp2Ym5SelhHNHZMMXh1SkhOaGJuTTZJRndpVlZKWFIzSnZkR1Z6YXkxU1pXZGNJaXdnYzJGdWN5MXpaWEpwWmx4dUpITmhibk10YVhSaGJHbGpPaUJjSWxWU1YwZHliM1JsYzJzdFVtVm5TWFJoWENJc0lITmhibk10YzJWeWFXWmNibHh1SkhOaGJuTXRZbTlzWkRvZ1hDSlZVbGRIY205MFpYTnJMVUp2YkZ3aUxDQnpZVzV6TFhObGNtbG1YRzRrYzJGdWN5MWliMnhrTFdsMFlXeHBZem9nWENKVlVsZEhjbTkwWlhOckxVSnZiRWwwWVZ3aUxDQnpZVzV6TFhObGNtbG1YRzVjYmlSellXNXpMV052Ym1SbGJuTmxaQzFzYVdkb2REb2dYQ0pWVWxkSGNtOTBaWE5yUTI5dUxVeHBaMXdpTENCellXNXpMWE5sY21sbVhHNGtjMkZ1Y3kxamIyNWtaVzV6WldRdFltOXNaRG9nWENKVlVsZEhjbTkwWlhOclEyOXVMVUp2YkZ3aUxDQnpZVzV6TFhObGNtbG1YRzVjYmlSamRYSnphWFpsT2lCY0lteGxZWEp1YVc1bkxXTjFjblpsWENKY2JseHVKRzF2Ym05emNHRmpaVG9nWENKRGIzVnlhV1Z5SUU1bGQxd2lMQ0J0YjI1dmMzQmhZMlZjYmx4dVhHNGtibTl5YldGc09pQnViM0p0WVd4Y2JseHVYRzR2THlCV1lYSnpYRzRrWW1GelpTMW1iMjUwTFhOcGVtVTZJREl5Y0hoY2JpUmlZWE5sTFd4cGJtVXRhR1ZwWjJoME9pQXhMalZjYmx4dUx5OGdSblZ1WTNOY2JrQm1kVzVqZEdsdmJpQnNhVzVsTFdobGFXZG9kQ2dwWEc0Z0lFQnlaWFIxY200Z0pHSmhjMlV0Wm05dWRDMXphWHBsSUNvZ0pHSmhjMlV0YkdsdVpTMW9aV2xuYUhSY2JseHVMeThnVm1GeUlHMTFjM1FnWW1VZ2MzQmxZMmxtYVdWa0lHRm1kR1Z5SUhKbGRIVnlibWx1WnlCMGFHVWdiR2x1WlMxb1pXbG5hSFFnWm5WdVkzUnBiMjVjYmlSallXd3RiR2x1WlMxb1pXbG5hSFE2SUd4cGJtVXRhR1ZwWjJoMEtDbGNibHh1THk4Z1RXbDRhVzV6WEc0OWRIbHdaUzF0WVhKbmFXNG9KSFJ2Y0RvZ01Td2dKR0p2ZEhSdmJUb2dNU2xjYmlBZ0x5OXdZV1JrYVc1bkxYUnZjRG9nSkdOaGJDMXNhVzVsTFdobGFXZG9kQ0FxSUNSMGIzQmNiaUFnTHk5d1lXUmthVzVuTFdKdmRIUnZiVG9nSkdOaGJDMXNhVzVsTFdobGFXZG9kQ0FxSUNSaWIzUjBiMjFjYmlBZ2JXRnlaMmx1TFhSdmNEb2dKR05oYkMxc2FXNWxMV2hsYVdkb2RDQXFJQ1IwYjNCY2JpQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ0pHTmhiQzFzYVc1bExXaGxhV2RvZENBcUlDUmliM1IwYjIxY2JseHVMeThnVFdsNGFXNXpYRzQ5WW14dlkyc3RjR0ZrWkdsdVp5Z2tkRzl3T2lBeExDQWtZbTkwZEc5dE9pQXhLVnh1SUNBdkwzQmhaR1JwYm1jdGRHOXdPaUFrWTJGc0xXeHBibVV0YUdWcFoyaDBJQ29nSkhSdmNGeHVJQ0F2TDNCaFpHUnBibWN0WW05MGRHOXRPaUFrWTJGc0xXeHBibVV0YUdWcFoyaDBJQ29nSkdKdmRIUnZiVnh1SUNCd1lXUmthVzVuTFhSdmNEb2dKR05oYkMxc2FXNWxMV2hsYVdkb2RDQXFJQ1IwYjNCY2JpQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklDUmpZV3d0YkdsdVpTMW9aV2xuYUhRZ0tpQWtZbTkwZEc5dFhHNWNiaTh2SUhSb2FYTWdhWE1nWVd4c0lIZGxJRzVsWldRZ2RHOGdUazlTVFVGTVNWcEZJSFI1Y0c5bmNtRndhSGxjYmx4dWFIUnRiRnh1SUNCbWIyNTBMWE5wZW1VNklDUmlZWE5sTFdadmJuUXRjMmw2WlZ4dVhHNWliMlI1WEc0Z0lHTnZiRzl5T2lBa1kyaGhjbU52WVd4Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SUNSaVlYTmxMV3hwYm1VdGFHVnBaMmgwWEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUFrYzJGdWMxeHVJQ0F2TDJKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUd4cGJtVmhjaTFuY21Ga2FXVnVkQ2gwY21GdWMzQmhjbVZ1ZEN3Z2RISmhibk53WVhKbGJuUWdiR2x1WlMxb1pXbG5hSFFvS1NBdElERndlQ3dnY21Wa0lERndlQ0FzSUhSeVlXNXpjR0Z5Wlc1MEtUdGNiaUFnTHk5aVlXTnJaM0p2ZFc1a0xYTnBlbVVnT2lCaGRYUnZJR3hwYm1VdGFHVnBaMmgwS0NrN1hHNGdJQzh2Y0dGa1pHbHVaem9nYkdsdVpTMW9aV2xuYUhRb01pa2diR2x1WlMxb1pXbG5hSFFvTVNrZ01EdGNiaUFnYldGeVoybHVMWFJ2Y0RvZ01GeHVJQ0F0ZDJWaWEybDBMV1p2Ym5RdGMyMXZiM1JvYVc1bk9pQmhiblJwWVd4cFlYTmxaRnh1WEc1b01Td2dhRElzSUdnekxDQm9OQ3dnYURVc0lHZzJYRzRnSUdadmJuUXRjMmw2WlRvZ01YSmxiVnh1SUNCbWIyNTBMWGRsYVdkb2REb2dKRzV2Y20xaGJGeHVYRzV2YkZ4dUlDQndZV1JrYVc1bkxXeGxablE2SUROeVpXMWNibHh1YkdsY2JpQWdLM1I1Y0dVdGJXRnlaMmx1S0RBc0lEQXBYRzVjYm5Bc0lHOXNMQ0IxYkZ4dUlDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ01TNDFjbVZ0WEc1Y2JtWnBaM1Z5WlM1M2FXUmxYRzRnSUM4dmJXRnlaMmx1T2lCc2FXNWxMV2hsYVdkb2RDZ3BJR0YxZEc4Z01EdGNiaUFnYUdWcFoyaDBPaUJzYVc1bExXaGxhV2RvZENncElDb2dNakJjYmlBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmx4dUlDQjNhV1IwYURvZ01UQXdKVnh1SUNCcGJXZGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pWeHVJQ0FnSUhSdmNEb2dOVEFsWEc0Z0lDQWdiR1ZtZERvZ05UQWxYRzRnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabFhHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWktDMDFNQ1VwSUhSeVlXNXpiR0YwWlZnb0xUVXdKU2xjYmx4dUx5OGdWR1Y0ZENCVFpXeGxZM1JwYjI0Z2MzUjViR1ZjYmx4Y09qcHpaV3hsWTNScGIyNWNiaUFnWW1GamEyZHliM1Z1WkRvZ0pITmxiR1ZqZEdsdmJpMWpiMnh2Y2x4dVhHNHZMeUJNYjJKdmRHOXRhWHBsWkNCUGQyeHpYRzR2THlCb2RIUndPaTh2WVd4cGMzUmhjR0Z5ZEM1amIyMHZZWEowYVdOc1pTOWhlR2x2YldGMGFXTXRZM056TFdGdVpDMXNiMkp2ZEc5dGFYcGxaQzF2ZDJ4elhHNWNiaThxSUNvZ0t5QXFJSHRjYmlBcUlDQWdJRzFoY21kcGJpMTBiM0E2SURFdU5YSmxiVHRjYmlBcWZWeHVYRzR1Wm5Wc2JGeHVJQ0IzYVdSMGFEb2dNVEF3SlZ4dVhHNHZMeUJNYVhOMGMxeHVMeThnYm5WdFltVnlaV1FnYkdsemRGeHVMbXhwYzNSUGJpQnZiQ0JzYVN3Z2Iyd3VjMmx0Y0d4bFRHbHpkQ0JzYVZ4dUlDQnNhWE4wTFhOMGVXeGxMWFI1Y0dVNklHUmxZMmx0WVd4Y2JpQWdjR0ZrWkdsdVp5MXNaV1owT2lBdU1qVnlaVzFjYmlBZ2JXRnlaMmx1TFd4bFpuUTZJQzB1TWpWeVpXMWNiaUFnTHk4Z1ZHaHBjeUJ0WVd0bGN5QkpSU0JrYVhOd2JHRjVJR2gxYm1jZ1luVnNiR1YwYzF4dVhHNHZMeUJ1ZFcxaVpYSmxaQ0JzYVhOMFhHNXZiQzV6YVcxd2JHVk1hWE4wSUd4cElHOXNJR3hwWEc0Z0lHeHBjM1F0YzNSNWJHVXRkSGx3WlRvZ2JHOTNaWEl0WVd4d2FHRmNiaUFnY0dGa1pHbHVaeTFzWldaME9pQXVNalZ5WlcxY2JpQWdiV0Z5WjJsdUxXeGxablE2SUMwdU1qVnlaVzFjYmlBZ0x5OGdWR2hwY3lCdFlXdGxjeUJKUlNCa2FYTndiR0Y1SUdoMWJtY2dZblZzYkdWMGMxeHVYRzR2THlCdWRXMWlaWEpsWkNCc2FYTjBYRzV2YkM1emFXMXdiR1ZNYVhOMElHeHBJRzlzSUd4cElHOXNJR3hwWEc0Z0lHeHBjM1F0YzNSNWJHVXRkSGx3WlRvZ2JHOTNaWEl0Y205dFlXNWNiaUFnY0dGa1pHbHVaeTFzWldaME9pQXVNalZ5WlcxY2JpQWdiV0Z5WjJsdUxXeGxablE2SUMwdU1qVnlaVzFjYmlBZ0x5OGdWR2hwY3lCdFlXdGxjeUJKUlNCa2FYTndiR0Y1SUdoMWJtY2dZblZzYkdWMGMxeHVYRzR2THlCemRHRnVaR0Z5WkNCc2FYTjBYRzR1YkdsemRFOXVJSFZzSUd4cExDQjFiQzV6YVcxd2JHVk1hWE4wSUd4cFhHNGdJR3hwYzNRdGMzUjViR1V0ZEhsd1pUb2daR2x6WTF4dUlDQndZV1JrYVc1bkxXeGxablE2SUM0eU5YSmxiVnh1SUNCdFlYSm5hVzR0YkdWbWREb2dMUzR5TlhKbGJWeHVJQ0F2THlCVWFHbHpJRzFoYTJWeklFbEZJR1JwYzNCc1lYa2dhSFZ1WnlCaWRXeHNaWFJ6WEc1Y2JpOHZJRzUxYldKbGNtVmtJR3hwYzNSY2JuVnNMbk5wYlhCc1pVeHBjM1FnYkdrZ2RXd2diR2xjYmlBZ2JHbHpkQzF6ZEhsc1pTMTBlWEJsT2lCamFYSmpiR1ZjYmlBZ2NHRmtaR2x1Wnkxc1pXWjBPaUF1TWpWeVpXMWNiaUFnYldGeVoybHVMV3hsWm5RNklDMHVNalZ5WlcxY2JpQWdMeThnVkdocGN5QnRZV3RsY3lCSlJTQmthWE53YkdGNUlHaDFibWNnWW5Wc2JHVjBjMXh1WEc1dmJDNXNhWE4wVTNCaFkyVWdiR2xjYmlBZ2NHRmtaR2x1WnkxMGIzQTZJREV1TlhKbGJWeHVYRzR2THlCR1QxSk5VMXh1YVc1d2RYUXNJSFJsZUhSaGNtVmhYRzRnSUhkcFpIUm9PaUF4TURBbFhHNWNiaTh2SUVadmJuUWdVM1I1YkdWelhHNWNiaTVpYjJ4a0xDQnpkSEp2Ym1kY2JpQWdabTl1ZEMxM1pXbG5hSFE2SURjd01GeHVYRzR1Ym05eWJXRnNYRzRnSUdadmJuUXRkMlZwWjJoME9pQXpNREJjYmx4dUxtbDBZV3hwWTF4dUlDQm1iMjUwTFhOMGVXeGxPaUJwZEdGc2FXTWdJV2x0Y0c5eWRHRnVkRnh1WEc0dWRYQmpZWE5sTENBdWRYQkRZWE5sTENBdVkyRndjMXh1SUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sWEc1Y2JpNXBibWhsY21sMFhHNGdJR1p2Ym5RdGMybDZaVG9nYVc1b1pYSnBkRnh1WEc0dkx5QlVaWGgwSUVGc2FXZHVYRzVjYmk1MFpYaDBRMlZ1ZEdWeUxDQXVkR1Y0ZEVOY2JpQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlYRzVjYmk1MFpYaDBUR1ZtZEN3Z0xuUmxlSFJNWEc0Z0lIUmxlSFF0WVd4cFoyNDZJR3hsWm5SY2JseHVMblJsZUhSU2FXZG9kQ3dnTG5SbGVIUlNYRzRnSUhSbGVIUXRZV3hwWjI0NklISnBaMmgwWEc1Y2JpNXBibVJsYm5SY2JpQWdkR1Y0ZEMxcGJtUmxiblE2SUROeVpXMWNiaUlzSWk4dklFSnlZVzVrSUVOdmJHOXljMXh1SkdkdmIyVjVZblYwZEdWeU9pQWpabVZqTURVM1hHNGtZMkZ5WkdsdVlXeHlaV1E2SUNObFpqTmxOREpjYmlSemRHeHZkV2x6WW14MVpYTTZJQ013TURkaFl6SmNiaVJoY21Ob1ozSmhlVG9nSTJFMVlUZGhZVnh1WEc0dkx5QkhaVzVsY21Gc0lFTnZiRzl5YzF4dUpIZG9hWFJsT2lBalptWm1YRzRrWW14aFkyczZJQ013TURCY2JpUmphR0Z5WTI5aGJEb2dJek16TTF4dUpHZHlZWEJvYVhSbE9pQWpZMk5qWEc0a2MybHNkbVZ5T2lBalpqVm1OV1kxWEc0a1pHbHlkRG9nSTJVNFpUaGxNbHh1THk4a2NtVmtPaUFqWmpBd1hHNHZMeVI1Wld4c2IzYzZJQ05tWmpCY2JpOHZKR2R2YkdRNklDTm1NV00wTUdaY2JseHVMeThnVFVGUUlHTnZiRzl5SUhSdklHTnZiWEJ2Ym1WdWRGeHVYRzRrZEdWNGRDMXNhVzVyTFdOdmJHOXlPaUFrYzNSc2IzVnBjMkpzZFdWelhHNGtkR1Y0ZEMxc2FXNXJMV052Ykc5eUxXaHZkbVZ5T2lBa1kyRnlaR2x1WVd4eVpXUmNibHh1Skc1aGRpMXNhVzVyTFdOdmJHOXlPaUFrYzNSc2IzVnBjMkpzZFdWelhHNWNiaVJpZFhSMGIyNHRZMjlzYjNJNklDUnpkR3h2ZFdsellteDFaWE5jYmlSbGNuSnZjaTEwWlhoMExXTnZiRzl5T2lBa1kyRnlaR2x1WVd4eVpXUmNiaVJ6Wld4bFkzUnBiMjR0WTI5c2IzSTZJQ1JuYjI5bGVXSjFkSFJsY2x4dUpHTnZaR1ZEYjJ4dmNpQTZJQ1JuY21Gd2FHbDBaVnh1SWl3aUtseHVJQ0J0WVhKbmFXNDZJREJjYmlBZ2NHRmtaR2x1WnpvZ01GeHVYRzVvZEcxc1hHNGdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUZ4dVhHNHFMQ0FxT21KbFptOXlaU3dnS2pwaFpuUmxjbHh1SUdKdmVDMXphWHBwYm1jNklHbHVhR1Z5YVhSY2JseHVZbTlrZVZ4dUlDQnRZWEpuYVc0NklEQmNibHh1WVZ4dUlIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVnh1WEc1aGNuUnBZMnhsTENCaGMybGtaU3dnWkdWMFlXbHNjeXdnWm1sblkyRndkR2x2Yml3Z1ptbG5kWEpsTENCbWIyOTBaWElzSUdobFlXUmxjaXdnYUdkeWIzVndMQ0J0WVdsdUxDQnRaVzUxTENCdVlYWXNJSE5sWTNScGIyNWNibHgwWkdsemNHeGhlVG9nWW14dlkydGNibHh1WW14dlkydHhkVzkwWlN3Z2NWeHVJQ0FnSUhGMWIzUmxjem9nYm05dVpWeHVYRzVpYkc5amEzRjFiM1JsT21KbFptOXlaU3dnWW14dlkydHhkVzkwWlRwaFpuUmxjaXhjYm5FNlltVm1iM0psTENCeE9tRm1kR1Z5WEc0Z0lDQWdZMjl1ZEdWdWREb2dKeWRjYmlBZ0lDQmpiMjUwWlc1ME9pQnViMjVsWEc0Z0lDQWdYRzUwWVdKc1pWeHVJQ0FnSUdKdmNtUmxjaTFqYjJ4c1lYQnpaVG9nWTI5c2JHRndjMlZjYmlBZ0lDQmliM0prWlhJdGMzQmhZMmx1WnpvZ01GeHVJaXdpTHlvcVhHNGdLaUJBYkdsalpXNXpaVnh1SUNvZ1RYbEdiMjUwY3lCWFpXSm1iMjUwSUVKMWFXeGtJRWxFSURJNE9EZzJNRElzSURJd01UUXRNRGt0TWpOVU1UYzZOREU2TWprdE1EUXdNRnh1SUNwY2JpQXFJRlJvWlNCbWIyNTBjeUJzYVhOMFpXUWdhVzRnZEdocGN5QnViM1JwWTJVZ1lYSmxJSE4xWW1wbFkzUWdkRzhnZEdobElFVnVaQ0JWYzJWeUlFeHBZMlZ1YzJWY2JpQXFJRUZuY21WbGJXVnVkQ2h6S1NCbGJuUmxjbVZrSUdsdWRHOGdZbmtnZEdobElIZGxZbk5wZEdVZ2IzZHVaWEl1SUVGc2JDQnZkR2hsY2lCd1lYSjBhV1Z6SUdGeVpWeHVJQ29nWlhod2JHbGphWFJzZVNCeVpYTjBjbWxqZEdWa0lHWnliMjBnZFhOcGJtY2dkR2hsSUV4cFkyVnVjMlZrSUM5M1pXSm1iMjUwY3loektTNWNiaUFxWEc0Z0tpQlpiM1VnYldGNUlHOWlkR0ZwYmlCaElIWmhiR2xrSUd4cFkyVnVjMlVnWVhRZ2RHaGxJRlZTVEhNZ1ltVnNiM2N1WEc0Z0tseHVJQ29nVjJWaVptOXVkRG9nVlZKWFIzSnZkR1Z6YXkxTWFXZFBZbXdnWW5rZ1ZWSlhLeXRjYmlBcUlGVlNURG9nYUhSMGNEb3ZMM2QzZHk1dGVXWnZiblJ6TG1OdmJTOW1iMjUwY3k5MWNuY3ZaM0p2ZEdWemF5OTFjbmN0WjNKdmRHVnpheTEwTFd4cFoyaDBMVzlpYkdseGRXVXZYRzRnS2lCRGIzQjVjbWxuYUhRNklDaFZVbGNwS3lzc1EyOXdlWEpwWjJoMElESXdNRFlnWW5rZ0tGVlNWeWtyS3lCRVpYTnBaMjRnSm1GdGNEc2dSR1YyWld4dmNHMWxiblJjYmlBcVhHNGdLaUJYWldKbWIyNTBPaUJWVWxkSGNtOTBaWE5yUlhoMFYybGtMVUp2YkNCaWVTQlZVbGNySzF4dUlDb2dWVkpNT2lCb2RIUndPaTh2ZDNkM0xtMTVabTl1ZEhNdVkyOXRMMlp2Ym5SekwzVnlkeTluY205MFpYTnJMM1Z5ZHkxbmNtOTBaWE5yTFhRdFltOXNaQzFsZUhSeVlTMTNhV1JsTDF4dUlDb2dRMjl3ZVhKcFoyaDBPaUFvVlZKWEtTc3JMRU52Y0hseWFXZG9kQ0F5TURBMklHSjVJQ2hWVWxjcEt5c2dSR1Z6YVdkdUlDWmhiWEE3SUVSbGRtVnNiM0J0Wlc1MFhHNGdLbHh1SUNvZ1YyVmlabTl1ZERvZ1ZWSlhSM0p2ZEdWemEwVjRkRTVoY2kxTWFXZFBZbXdnWW5rZ1ZWSlhLeXRjYmlBcUlGVlNURG9nYUhSMGNEb3ZMM2QzZHk1dGVXWnZiblJ6TG1OdmJTOW1iMjUwY3k5MWNuY3ZaM0p2ZEdWemF5OTFjbmN0WjNKdmRHVnpheTEwTFd4cFoyaDBMV1Y0ZEhKaExXNWhjbkp2ZHkxdllteHBjWFZsTDF4dUlDb2dRMjl3ZVhKcFoyaDBPaUFvVlZKWEtTc3JMRU52Y0hseWFXZG9kQ0F5TURBMklHSjVJQ2hWVWxjcEt5c2dSR1Z6YVdkdUlDWmhiWEE3SUVSbGRtVnNiM0J0Wlc1MFhHNGdLbHh1SUNvZ1YyVmlabTl1ZERvZ1ZWSlhSM0p2ZEdWemExZHBaQzFNYVdkUFltd2dZbmtnVlZKWEt5dGNiaUFxSUZWU1REb2dhSFIwY0RvdkwzZDNkeTV0ZVdadmJuUnpMbU52YlM5bWIyNTBjeTkxY25jdlozSnZkR1Z6YXk5MWNuY3RaM0p2ZEdWemF5MTBMV3hwWjJoMExYZHBaR1V0YjJKc2FYRjFaUzljYmlBcUlFTnZjSGx5YVdkb2REb2dLRlZTVnlrckt5eERiM0I1Y21sbmFIUWdNakF3TmlCaWVTQW9WVkpYS1NzcklFUmxjMmxuYmlBbVlXMXdPeUJFWlhabGJHOXdiV1Z1ZEZ4dUlDcGNiaUFxSUZkbFltWnZiblE2SUZWU1YwZHliM1JsYzJ0RmVIUlhhV1F0UlhoMFRHbG5UMkpzSUdKNUlGVlNWeXNyWEc0Z0tpQlZVa3c2SUdoMGRIQTZMeTkzZDNjdWJYbG1iMjUwY3k1amIyMHZabTl1ZEhNdmRYSjNMMmR5YjNSbGMyc3ZkWEozTFdkeWIzUmxjMnN0ZEMxbGVIUnlZUzFzYVdkb2RDMWxlSFJ5WVMxM2FXUmxMVzlpYkdseGRXVXZYRzRnS2lCRGIzQjVjbWxuYUhRNklDaFZVbGNwS3lzc1EyOXdlWEpwWjJoMElESXdNRFlnWW5rZ0tGVlNWeWtyS3lCRVpYTnBaMjRnSm1GdGNEc2dSR1YyWld4dmNHMWxiblJjYmlBcVhHNGdLaUJYWldKbWIyNTBPaUJWVWxkSGNtOTBaWE5yTFUxbFpFOWliQ0JpZVNCVlVsY3JLMXh1SUNvZ1ZWSk1PaUJvZEhSd09pOHZkM2QzTG0xNVptOXVkSE11WTI5dEwyWnZiblJ6TDNWeWR5OW5jbTkwWlhOckwzVnlkeTFuY205MFpYTnJMWFF0YldWa2FYVnRMVzlpYkdseGRXVXZYRzRnS2lCRGIzQjVjbWxuYUhRNklDaFZVbGNwS3lzc1EyOXdlWEpwWjJoMElESXdNRFlnWW5rZ0tGVlNWeWtyS3lCRVpYTnBaMjRnSm1GdGNEc2dSR1YyWld4dmNHMWxiblJjYmlBcVhHNGdLaUJYWldKbWIyNTBPaUJWVWxkSGNtOTBaWE5yTFVKdmJFbDBZU0JpZVNCVlVsY3JLMXh1SUNvZ1ZWSk1PaUJvZEhSd09pOHZkM2QzTG0xNVptOXVkSE11WTI5dEwyWnZiblJ6TDNWeWR5OW5jbTkwWlhOckwzVnlkeTFuY205MFpYTnJMWFF0WW05c1pDMXBkR0ZzYVdNdlhHNGdLaUJEYjNCNWNtbG5hSFE2SUNoVlVsY3BLeXNzUTI5d2VYSnBaMmgwSURJd01EWWdZbmtnS0ZWU1Z5a3JLeUJFWlhOcFoyNGdKbUZ0Y0RzZ1JHVjJaV3h2Y0cxbGJuUmNiaUFxWEc0Z0tpQlhaV0ptYjI1ME9pQlZVbGRIY205MFpYTnJMVVY0ZEV4cFowOWliQ0JpZVNCVlVsY3JLMXh1SUNvZ1ZWSk1PaUJvZEhSd09pOHZkM2QzTG0xNVptOXVkSE11WTI5dEwyWnZiblJ6TDNWeWR5OW5jbTkwWlhOckwzVnlkeTFuY205MFpYTnJMWFF0WlhoMGNtRXRiR2xuYUhRdGIySnNhWEYxWlM5Y2JpQXFJRU52Y0hseWFXZG9kRG9nS0ZWU1Z5a3JLeXhEYjNCNWNtbG5hSFFnTWpBd05pQmllU0FvVlZKWEtTc3JJRVJsYzJsbmJpQW1ZVzF3T3lCRVpYWmxiRzl3YldWdWRGeHVJQ3BjYmlBcUlGZGxZbVp2Ym5RNklGVlNWMGR5YjNSbGMydEZlSFJYYVdRdFFtOXNUMkpzSUdKNUlGVlNWeXNyWEc0Z0tpQlZVa3c2SUdoMGRIQTZMeTkzZDNjdWJYbG1iMjUwY3k1amIyMHZabTl1ZEhNdmRYSjNMMmR5YjNSbGMyc3ZkWEozTFdkeWIzUmxjMnN0ZEMxaWIyeGtMV1Y0ZEhKaExYZHBaR1V0YjJKc2FYRjFaUzljYmlBcUlFTnZjSGx5YVdkb2REb2dLRlZTVnlrckt5eERiM0I1Y21sbmFIUWdNakF3TmlCaWVTQW9WVkpYS1NzcklFUmxjMmxuYmlBbVlXMXdPeUJFWlhabGJHOXdiV1Z1ZEZ4dUlDcGNiaUFxSUZkbFltWnZiblE2SUZWU1YwZHliM1JsYzJzdFFtOXNUMkpzSUdKNUlGVlNWeXNyWEc0Z0tpQlZVa3c2SUdoMGRIQTZMeTkzZDNjdWJYbG1iMjUwY3k1amIyMHZabTl1ZEhNdmRYSjNMMmR5YjNSbGMyc3ZkWEozTFdkeWIzUmxjMnN0ZEMxaWIyeGtMVzlpYkdseGRXVXZYRzRnS2lCRGIzQjVjbWxuYUhRNklDaFZVbGNwS3lzc1EyOXdlWEpwWjJoMElESXdNRFlnWW5rZ0tGVlNWeWtyS3lCRVpYTnBaMjRnSm1GdGNEc2dSR1YyWld4dmNHMWxiblJjYmlBcVhHNGdLaUJYWldKbWIyNTBPaUJWVWxkSGNtOTBaWE5yVG1GeUxWSmxaeUJpZVNCVlVsY3JLMXh1SUNvZ1ZWSk1PaUJvZEhSd09pOHZkM2QzTG0xNVptOXVkSE11WTI5dEwyWnZiblJ6TDNWeWR5OW5jbTkwWlhOckwzVnlkeTFuY205MFpYTnJMWFF0Y21WbmRXeGhjaTF1WVhKeWIzY3ZYRzRnS2lCRGIzQjVjbWxuYUhRNklDaFZVbGNwS3lzc1EyOXdlWEpwWjJoMElESXdNRFlnWW5rZ0tGVlNWeWtyS3lCRVpYTnBaMjRnSm1GdGNEc2dSR1YyWld4dmNHMWxiblJjYmlBcVhHNGdLaUJYWldKbWIyNTBPaUJWVWxkSGNtOTBaWE5yTFVWNGRFeHBaeUJpZVNCVlVsY3JLMXh1SUNvZ1ZWSk1PaUJvZEhSd09pOHZkM2QzTG0xNVptOXVkSE11WTI5dEwyWnZiblJ6TDNWeWR5OW5jbTkwWlhOckwzVnlkeTFuY205MFpYTnJMWFF0WlhoMGNtRXRiR2xuYUhRdlhHNGdLaUJEYjNCNWNtbG5hSFE2SUNoVlVsY3BLeXNzUTI5d2VYSnBaMmgwSURJd01EWWdZbmtnS0ZWU1Z5a3JLeUJFWlhOcFoyNGdKbUZ0Y0RzZ1JHVjJaV3h2Y0cxbGJuUmNiaUFxWEc0Z0tpQlhaV0ptYjI1ME9pQlZVbGRIY205MFpYTnJWMmxrTFV4cFp5QmllU0JWVWxjcksxeHVJQ29nVlZKTU9pQm9kSFJ3T2k4dmQzZDNMbTE1Wm05dWRITXVZMjl0TDJadmJuUnpMM1Z5ZHk5bmNtOTBaWE5yTDNWeWR5MW5jbTkwWlhOckxYUXRiR2xuYUhRdGQybGtaUzljYmlBcUlFTnZjSGx5YVdkb2REb2dLRlZTVnlrckt5eERiM0I1Y21sbmFIUWdNakF3TmlCaWVTQW9WVkpYS1NzcklFUmxjMmxuYmlBbVlXMXdPeUJFWlhabGJHOXdiV1Z1ZEZ4dUlDcGNiaUFxSUZkbFltWnZiblE2SUZWU1YwZHliM1JsYzJ0RmVIUlhhV1F0VEdsblQySnNJR0o1SUZWU1Z5c3JYRzRnS2lCVlVrdzZJR2gwZEhBNkx5OTNkM2N1YlhsbWIyNTBjeTVqYjIwdlptOXVkSE12ZFhKM0wyZHliM1JsYzJzdmRYSjNMV2R5YjNSbGMyc3RkQzFzYVdkb2RDMWxlSFJ5WVMxM2FXUmxMVzlpYkdseGRXVXZYRzRnS2lCRGIzQjVjbWxuYUhRNklDaFZVbGNwS3lzc1EyOXdlWEpwWjJoMElESXdNRFlnWW5rZ0tGVlNWeWtyS3lCRVpYTnBaMjRnSm1GdGNEc2dSR1YyWld4dmNHMWxiblJjYmlBcVhHNGdLaUJYWldKbWIyNTBPaUJWVWxkSGNtOTBaWE5yVG1GeUxVeHBaeUJpZVNCVlVsY3JLMXh1SUNvZ1ZWSk1PaUJvZEhSd09pOHZkM2QzTG0xNVptOXVkSE11WTI5dEwyWnZiblJ6TDNWeWR5OW5jbTkwWlhOckwzVnlkeTFuY205MFpYTnJMWFF0YkdsbmFIUXRibUZ5Y205M0wxeHVJQ29nUTI5d2VYSnBaMmgwT2lBb1ZWSlhLU3NyTEVOdmNIbHlhV2RvZENBeU1EQTJJR0o1SUNoVlVsY3BLeXNnUkdWemFXZHVJQ1poYlhBN0lFUmxkbVZzYjNCdFpXNTBYRzRnS2x4dUlDb2dWMlZpWm05dWREb2dWVkpYUjNKdmRHVnphMWRwWkMxQ2Iyd2dZbmtnVlZKWEt5dGNiaUFxSUZWU1REb2dhSFIwY0RvdkwzZDNkeTV0ZVdadmJuUnpMbU52YlM5bWIyNTBjeTkxY25jdlozSnZkR1Z6YXk5MWNuY3RaM0p2ZEdWemF5MTBMV0p2YkdRdGQybGtaUzljYmlBcUlFTnZjSGx5YVdkb2REb2dLRlZTVnlrckt5eERiM0I1Y21sbmFIUWdNakF3TmlCaWVTQW9WVkpYS1NzcklFUmxjMmxuYmlBbVlXMXdPeUJFWlhabGJHOXdiV1Z1ZEZ4dUlDcGNiaUFxSUZkbFltWnZiblE2SUZWU1YwZHliM1JsYzJ0WGFXUXRSWGgwVEdsbklHSjVJRlZTVnlzclhHNGdLaUJWVWt3NklHaDBkSEE2THk5M2QzY3ViWGxtYjI1MGN5NWpiMjB2Wm05dWRITXZkWEozTDJkeWIzUmxjMnN2ZFhKM0xXZHliM1JsYzJzdGRDMWxlSFJ5WVMxc2FXZG9kQzEzYVdSbEwxeHVJQ29nUTI5d2VYSnBaMmgwT2lBb1ZWSlhLU3NyTEVOdmNIbHlhV2RvZENBeU1EQTJJR0o1SUNoVlVsY3BLeXNnUkdWemFXZHVJQ1poYlhBN0lFUmxkbVZzYjNCdFpXNTBYRzRnS2x4dUlDb2dWMlZpWm05dWREb2dWVkpYUjNKdmRHVnpheTFNYVdkSmRHRWdZbmtnVlZKWEt5dGNiaUFxSUZWU1REb2dhSFIwY0RvdkwzZDNkeTV0ZVdadmJuUnpMbU52YlM5bWIyNTBjeTkxY25jdlozSnZkR1Z6YXk5MWNuY3RaM0p2ZEdWemF5MTBMV3hwWjJoMExXbDBZV3hwWXk5Y2JpQXFJRU52Y0hseWFXZG9kRG9nS0ZWU1Z5a3JLeXhEYjNCNWNtbG5hSFFnTWpBd05pQmllU0FvVlZKWEtTc3JJRVJsYzJsbmJpQW1ZVzF3T3lCRVpYWmxiRzl3YldWdWRGeHVJQ3BjYmlBcUlGZGxZbVp2Ym5RNklGVlNWMGR5YjNSbGMydE9ZWEl0UW05c0lHSjVJRlZTVnlzclhHNGdLaUJWVWt3NklHaDBkSEE2THk5M2QzY3ViWGxtYjI1MGN5NWpiMjB2Wm05dWRITXZkWEozTDJkeWIzUmxjMnN2ZFhKM0xXZHliM1JsYzJzdGRDMWliMnhrTFc1aGNuSnZkeTljYmlBcUlFTnZjSGx5YVdkb2REb2dLRlZTVnlrckt5eERiM0I1Y21sbmFIUWdNakF3TmlCaWVTQW9WVkpYS1NzcklFUmxjMmxuYmlBbVlXMXdPeUJFWlhabGJHOXdiV1Z1ZEZ4dUlDcGNiaUFxSUZkbFltWnZiblE2SUZWU1YwZHliM1JsYzJ0T1lYSXRSWGgwVEdsblQySnNJR0o1SUZWU1Z5c3JYRzRnS2lCVlVrdzZJR2gwZEhBNkx5OTNkM2N1YlhsbWIyNTBjeTVqYjIwdlptOXVkSE12ZFhKM0wyZHliM1JsYzJzdmRYSjNMV2R5YjNSbGMyc3RkQzFsZUhSeVlTMXNhV2RvZEMxdVlYSnliM2N0YjJKc2FYRjFaUzljYmlBcUlFTnZjSGx5YVdkb2REb2dLRlZTVnlrckt5eERiM0I1Y21sbmFIUWdNakF3TmlCaWVTQW9WVkpYS1NzcklFUmxjMmxuYmlBbVlXMXdPeUJFWlhabGJHOXdiV1Z1ZEZ4dUlDcGNiaUFxSUZkbFltWnZiblE2SUZWU1YwZHliM1JsYzJ0RmVIUlhhV1F0VEdsbklHSjVJRlZTVnlzclhHNGdLaUJWVWt3NklHaDBkSEE2THk5M2QzY3ViWGxtYjI1MGN5NWpiMjB2Wm05dWRITXZkWEozTDJkeWIzUmxjMnN2ZFhKM0xXZHliM1JsYzJzdGRDMXNhV2RvZEMxbGVIUnlZUzEzYVdSbEwxeHVJQ29nUTI5d2VYSnBaMmgwT2lBb1ZWSlhLU3NyTEVOdmNIbHlhV2RvZENBeU1EQTJJR0o1SUNoVlVsY3BLeXNnUkdWemFXZHVJQ1poYlhBN0lFUmxkbVZzYjNCdFpXNTBYRzRnS2x4dUlDb2dWMlZpWm05dWREb2dWVkpYUjNKdmRHVnpheTFOWldRZ1lua2dWVkpYS3l0Y2JpQXFJRlZTVERvZ2FIUjBjRG92TDNkM2R5NXRlV1p2Ym5SekxtTnZiUzltYjI1MGN5OTFjbmN2WjNKdmRHVnpheTkxY25jdFozSnZkR1Z6YXkxMExXMWxaR2wxYlM5Y2JpQXFJRU52Y0hseWFXZG9kRG9nS0ZWU1Z5a3JLeXhEYjNCNWNtbG5hSFFnTWpBd05pQmllU0FvVlZKWEtTc3JJRVJsYzJsbmJpQW1ZVzF3T3lCRVpYWmxiRzl3YldWdWRGeHVJQ3BjYmlBcUlGZGxZbVp2Ym5RNklGVlNWMGR5YjNSbGMydEZlSFJYYVdRdFRXVmtUMkpzSUdKNUlGVlNWeXNyWEc0Z0tpQlZVa3c2SUdoMGRIQTZMeTkzZDNjdWJYbG1iMjUwY3k1amIyMHZabTl1ZEhNdmRYSjNMMmR5YjNSbGMyc3ZkWEozTFdkeWIzUmxjMnN0ZEMxdFpXUnBkVzB0WlhoMGNtRXRkMmxrWlMxdllteHBjWFZsTDF4dUlDb2dRMjl3ZVhKcFoyaDBPaUFvVlZKWEtTc3JMRU52Y0hseWFXZG9kQ0F5TURBMklHSjVJQ2hWVWxjcEt5c2dSR1Z6YVdkdUlDWmhiWEE3SUVSbGRtVnNiM0J0Wlc1MFhHNGdLbHh1SUNvZ1YyVmlabTl1ZERvZ1ZWSlhSM0p2ZEdWemExZHBaQzFOWldRZ1lua2dWVkpYS3l0Y2JpQXFJRlZTVERvZ2FIUjBjRG92TDNkM2R5NXRlV1p2Ym5SekxtTnZiUzltYjI1MGN5OTFjbmN2WjNKdmRHVnpheTkxY25jdFozSnZkR1Z6YXkxMExXMWxaR2wxYlMxM2FXUmxMMXh1SUNvZ1EyOXdlWEpwWjJoME9pQW9WVkpYS1NzckxFTnZjSGx5YVdkb2RDQXlNREEySUdKNUlDaFZVbGNwS3lzZ1JHVnphV2R1SUNaaGJYQTdJRVJsZG1Wc2IzQnRaVzUwWEc0Z0tseHVJQ29nVjJWaVptOXVkRG9nVlZKWFIzSnZkR1Z6YTBWNGRFNWhjaTFOWldRZ1lua2dWVkpYS3l0Y2JpQXFJRlZTVERvZ2FIUjBjRG92TDNkM2R5NXRlV1p2Ym5SekxtTnZiUzltYjI1MGN5OTFjbmN2WjNKdmRHVnpheTkxY25jdFozSnZkR1Z6YXkxMExXMWxaR2wxYlMxbGVIUnlZUzF1WVhKeWIzY3ZYRzRnS2lCRGIzQjVjbWxuYUhRNklDaFZVbGNwS3lzc1EyOXdlWEpwWjJoMElESXdNRFlnWW5rZ0tGVlNWeWtyS3lCRVpYTnBaMjRnSm1GdGNEc2dSR1YyWld4dmNHMWxiblJjYmlBcVhHNGdLaUJYWldKbWIyNTBPaUJWVWxkSGNtOTBaWE5yUlhoMFYybGtMVkpsWjA5aWJDQmllU0JWVWxjcksxeHVJQ29nVlZKTU9pQm9kSFJ3T2k4dmQzZDNMbTE1Wm05dWRITXVZMjl0TDJadmJuUnpMM1Z5ZHk5bmNtOTBaWE5yTDNWeWR5MW5jbTkwWlhOckxYUXRjbVZuZFd4aGNpMWxlSFJ5WVMxM2FXUmxMVzlpYkdseGRXVXZYRzRnS2lCRGIzQjVjbWxuYUhRNklDaFZVbGNwS3lzc1EyOXdlWEpwWjJoMElESXdNRFlnWW5rZ0tGVlNWeWtyS3lCRVpYTnBaMjRnSm1GdGNEc2dSR1YyWld4dmNHMWxiblJjYmlBcVhHNGdLaUJYWldKbWIyNTBPaUJWVWxkSGNtOTBaWE5yUlhoMFYybGtMVVY0ZEV4cFp5QmllU0JWVWxjcksxeHVJQ29nVlZKTU9pQm9kSFJ3T2k4dmQzZDNMbTE1Wm05dWRITXVZMjl0TDJadmJuUnpMM1Z5ZHk5bmNtOTBaWE5yTDNWeWR5MW5jbTkwWlhOckxYUXRaWGgwY21FdGJHbG5hSFF0WlhoMGNtRXRkMmxrWlM5Y2JpQXFJRU52Y0hseWFXZG9kRG9nS0ZWU1Z5a3JLeXhEYjNCNWNtbG5hSFFnTWpBd05pQmllU0FvVlZKWEtTc3JJRVJsYzJsbmJpQW1ZVzF3T3lCRVpYWmxiRzl3YldWdWRGeHVJQ3BjYmlBcUlGZGxZbVp2Ym5RNklGVlNWMGR5YjNSbGMydERiMjVGTFV4cFp5QmllU0JWVWxjcksxeHVJQ29nVlZKTU9pQm9kSFJ3T2k4dmQzZDNMbTE1Wm05dWRITXVZMjl0TDJadmJuUnpMM1Z5ZHk5bmNtOTBaWE5yTDNWeWR5MW5jbTkwWlhOckxXTnZibVF0WlhoMGNtRnNhV2RvZEM5Y2JpQXFJRU52Y0hseWFXZG9kRG9nS0ZWU1Z5a3JLeXhEYjNCNWNtbG5hSFFnTWpBd05pQmllU0FvVlZKWEtTc3JJRVJsYzJsbmJpQW1ZVzF3T3lCRVpYWmxiRzl3YldWdWRGeHVJQ3BjYmlBcUlGZGxZbVp2Ym5RNklGVlNWMGR5YjNSbGMydE9ZWEl0VEdsblQySnNJR0o1SUZWU1Z5c3JYRzRnS2lCVlVrdzZJR2gwZEhBNkx5OTNkM2N1YlhsbWIyNTBjeTVqYjIwdlptOXVkSE12ZFhKM0wyZHliM1JsYzJzdmRYSjNMV2R5YjNSbGMyc3RkQzFzYVdkb2RDMXVZWEp5YjNjdGIySnNhWEYxWlM5Y2JpQXFJRU52Y0hseWFXZG9kRG9nS0ZWU1Z5a3JLeXhEYjNCNWNtbG5hSFFnTWpBd05pQmllU0FvVlZKWEtTc3JJRVJsYzJsbmJpQW1ZVzF3T3lCRVpYWmxiRzl3YldWdWRGeHVJQ3BjYmlBcUlGZGxZbVp2Ym5RNklGVlNWMGR5YjNSbGMyc3RUV1ZrU1hSaElHSjVJRlZTVnlzclhHNGdLaUJWVWt3NklHaDBkSEE2THk5M2QzY3ViWGxtYjI1MGN5NWpiMjB2Wm05dWRITXZkWEozTDJkeWIzUmxjMnN2ZFhKM0xXZHliM1JsYzJzdGRDMXRaV1JwZFcwdGFYUmhiR2xqTDF4dUlDb2dRMjl3ZVhKcFoyaDBPaUFvVlZKWEtTc3JMRU52Y0hseWFXZG9kQ0F5TURBMklHSjVJQ2hWVWxjcEt5c2dSR1Z6YVdkdUlDWmhiWEE3SUVSbGRtVnNiM0J0Wlc1MFhHNGdLbHh1SUNvZ1YyVmlabTl1ZERvZ1ZWSlhSM0p2ZEdWemEwTnZiaTFNYVdjZ1lua2dWVkpYS3l0Y2JpQXFJRlZTVERvZ2FIUjBjRG92TDNkM2R5NXRlV1p2Ym5SekxtTnZiUzltYjI1MGN5OTFjbmN2WjNKdmRHVnpheTkxY25jdFozSnZkR1Z6YXkxMExXeHBaMmgwTFdOdmJtUmxibk5sWkM5Y2JpQXFJRU52Y0hseWFXZG9kRG9nS0ZWU1Z5a3JLeXhEYjNCNWNtbG5hSFFnTWpBd05pQmllU0FvVlZKWEtTc3JJRVJsYzJsbmJpQW1ZVzF3T3lCRVpYWmxiRzl3YldWdWRGeHVJQ3BjYmlBcUlGZGxZbVp2Ym5RNklGVlNWMGR5YjNSbGMydEZlSFJPWVhJdFFtOXNUMkpzSUdKNUlGVlNWeXNyWEc0Z0tpQlZVa3c2SUdoMGRIQTZMeTkzZDNjdWJYbG1iMjUwY3k1amIyMHZabTl1ZEhNdmRYSjNMMmR5YjNSbGMyc3ZkWEozTFdkeWIzUmxjMnN0ZEMxaWIyeGtMV1Y0ZEhKaExXNWhjbkp2ZHkxdllteHBjWFZsTDF4dUlDb2dRMjl3ZVhKcFoyaDBPaUFvVlZKWEtTc3JMRU52Y0hseWFXZG9kQ0F5TURBMklHSjVJQ2hWVWxjcEt5c2dSR1Z6YVdkdUlDWmhiWEE3SUVSbGRtVnNiM0J0Wlc1MFhHNGdLbHh1SUNvZ1YyVmlabTl1ZERvZ1ZWSlhSM0p2ZEdWemEwNWhjaTFOWldSUFltd2dZbmtnVlZKWEt5dGNiaUFxSUZWU1REb2dhSFIwY0RvdkwzZDNkeTV0ZVdadmJuUnpMbU52YlM5bWIyNTBjeTkxY25jdlozSnZkR1Z6YXk5MWNuY3RaM0p2ZEdWemF5MTBMVzFsWkdsMWJTMXVZWEp5YjNjdGIySnNhWEYxWlM5Y2JpQXFJRU52Y0hseWFXZG9kRG9nS0ZWU1Z5a3JLeXhEYjNCNWNtbG5hSFFnTWpBd05pQmllU0FvVlZKWEtTc3JJRVJsYzJsbmJpQW1ZVzF3T3lCRVpYWmxiRzl3YldWdWRGeHVJQ3BjYmlBcUlGZGxZbVp2Ym5RNklGVlNWMGR5YjNSbGMyc3RVbVZuVDJKc0lHSjVJRlZTVnlzclhHNGdLaUJWVWt3NklHaDBkSEE2THk5M2QzY3ViWGxtYjI1MGN5NWpiMjB2Wm05dWRITXZkWEozTDJkeWIzUmxjMnN2ZFhKM0xXZHliM1JsYzJzdGRDMXlaV2QxYkdGeUxXOWliR2x4ZFdVdlhHNGdLaUJEYjNCNWNtbG5hSFE2SUNoVlVsY3BLeXNzUTI5d2VYSnBaMmgwSURJd01EWWdZbmtnS0ZWU1Z5a3JLeUJFWlhOcFoyNGdKbUZ0Y0RzZ1JHVjJaV3h2Y0cxbGJuUmNiaUFxWEc0Z0tpQlhaV0ptYjI1ME9pQlZVbGRIY205MFpYTnJWMmxrTFZKbFp5QmllU0JWVWxjcksxeHVJQ29nVlZKTU9pQm9kSFJ3T2k4dmQzZDNMbTE1Wm05dWRITXVZMjl0TDJadmJuUnpMM1Z5ZHk5bmNtOTBaWE5yTDNWeWR5MW5jbTkwWlhOckxYUXRjbVZuZFd4aGNpMTNhV1JsTDF4dUlDb2dRMjl3ZVhKcFoyaDBPaUFvVlZKWEtTc3JMRU52Y0hseWFXZG9kQ0F5TURBMklHSjVJQ2hWVWxjcEt5c2dSR1Z6YVdkdUlDWmhiWEE3SUVSbGRtVnNiM0J0Wlc1MFhHNGdLbHh1SUNvZ1YyVmlabTl1ZERvZ1ZWSlhSM0p2ZEdWemEwNWhjaTFGZUhSTWFXY2dZbmtnVlZKWEt5dGNiaUFxSUZWU1REb2dhSFIwY0RvdkwzZDNkeTV0ZVdadmJuUnpMbU52YlM5bWIyNTBjeTkxY25jdlozSnZkR1Z6YXk5MWNuY3RaM0p2ZEdWemF5MTBMV1Y0ZEhKaExXeHBaMmgwTFc1aGNuSnZkeTljYmlBcUlFTnZjSGx5YVdkb2REb2dLRlZTVnlrckt5eERiM0I1Y21sbmFIUWdNakF3TmlCaWVTQW9WVkpYS1NzcklFUmxjMmxuYmlBbVlXMXdPeUJFWlhabGJHOXdiV1Z1ZEZ4dUlDcGNiaUFxSUZkbFltWnZiblE2SUZWU1YwZHliM1JsYzJzdFVtVm5JR0o1SUZWU1Z5c3JYRzRnS2lCVlVrdzZJR2gwZEhBNkx5OTNkM2N1YlhsbWIyNTBjeTVqYjIwdlptOXVkSE12ZFhKM0wyZHliM1JsYzJzdmRYSjNMV2R5YjNSbGMyc3RkQzF5WldkMWJHRnlMMXh1SUNvZ1EyOXdlWEpwWjJoME9pQW9WVkpYS1NzckxFTnZjSGx5YVdkb2RDQXlNREEzSUdKNUlDaFZVbGNwS3lzZ1JHVnphV2R1SUNaaGJYQTdJRVJsZG1Wc2IzQnRaVzUwWEc0Z0tseHVJQ29nVjJWaVptOXVkRG9nVlZKWFIzSnZkR1Z6YTA1aGNpMUNiMnhQWW13Z1lua2dWVkpYS3l0Y2JpQXFJRlZTVERvZ2FIUjBjRG92TDNkM2R5NXRlV1p2Ym5SekxtTnZiUzltYjI1MGN5OTFjbmN2WjNKdmRHVnpheTkxY25jdFozSnZkR1Z6YXkxMExXSnZiR1F0Ym1GeWNtOTNMVzlpYkdseGRXVXZYRzRnS2lCRGIzQjVjbWxuYUhRNklDaFZVbGNwS3lzc1EyOXdlWEpwWjJoMElESXdNRFlnWW5rZ0tGVlNWeWtyS3lCRVpYTnBaMjRnSm1GdGNEc2dSR1YyWld4dmNHMWxiblJjYmlBcVhHNGdLaUJYWldKbWIyNTBPaUJWVWxkSGNtOTBaWE5yVjJsa0xVVjRkRXhwWjA5aWJDQmllU0JWVWxjcksxeHVJQ29nVlZKTU9pQm9kSFJ3T2k4dmQzZDNMbTE1Wm05dWRITXVZMjl0TDJadmJuUnpMM1Z5ZHk5bmNtOTBaWE5yTDNWeWR5MW5jbTkwWlhOckxYUXRaWGgwY21FdGJHbG5hSFF0ZDJsa1pTMXZZbXhwY1hWbEwxeHVJQ29nUTI5d2VYSnBaMmgwT2lBb1ZWSlhLU3NyTEVOdmNIbHlhV2RvZENBeU1EQTJJR0o1SUNoVlVsY3BLeXNnUkdWemFXZHVJQ1poYlhBN0lFUmxkbVZzYjNCdFpXNTBYRzRnS2x4dUlDb2dWMlZpWm05dWREb2dWVkpYUjNKdmRHVnpheTFNYVdjZ1lua2dWVkpYS3l0Y2JpQXFJRlZTVERvZ2FIUjBjRG92TDNkM2R5NXRlV1p2Ym5SekxtTnZiUzltYjI1MGN5OTFjbmN2WjNKdmRHVnpheTkxY25jdFozSnZkR1Z6YXkxMExXeHBaMmgwTDF4dUlDb2dRMjl3ZVhKcFoyaDBPaUFvVlZKWEtTc3JMRU52Y0hseWFXZG9kQ0F5TURBMklHSjVJQ2hWVWxjcEt5c2dSR1Z6YVdkdUlDWmhiWEE3SUVSbGRtVnNiM0J0Wlc1MFhHNGdLbHh1SUNvZ1YyVmlabTl1ZERvZ1ZWSlhSM0p2ZEdWemEwVjRkRTVoY2kxRmVIUk1hV2RQWW13Z1lua2dWVkpYS3l0Y2JpQXFJRlZTVERvZ2FIUjBjRG92TDNkM2R5NXRlV1p2Ym5SekxtTnZiUzltYjI1MGN5OTFjbmN2WjNKdmRHVnpheTkxY25jdFozSnZkR1Z6YXkxMExXVjRkSEpoTFd4cFoyaDBMV1Y0ZEhKaExXNWhjbkp2ZHkxdllteHBjWFZsTDF4dUlDb2dRMjl3ZVhKcFoyaDBPaUFvVlZKWEtTc3JMRU52Y0hseWFXZG9kQ0F5TURBMklHSjVJQ2hWVWxjcEt5c2dSR1Z6YVdkdUlDWmhiWEE3SUVSbGRtVnNiM0J0Wlc1MFhHNGdLbHh1SUNvZ1YyVmlabTl1ZERvZ1ZWSlhSM0p2ZEdWemEwVjRkRTVoY2kxU1pXZFBZbXdnWW5rZ1ZWSlhLeXRjYmlBcUlGVlNURG9nYUhSMGNEb3ZMM2QzZHk1dGVXWnZiblJ6TG1OdmJTOW1iMjUwY3k5MWNuY3ZaM0p2ZEdWemF5OTFjbmN0WjNKdmRHVnpheTEwTFhKbFozVnNZWEl0WlhoMGNtRXRibUZ5Y205M0xXOWliR2x4ZFdVdlhHNGdLaUJEYjNCNWNtbG5hSFE2SUNoVlVsY3BLeXNzUTI5d2VYSnBaMmgwSURJd01EWWdZbmtnS0ZWU1Z5a3JLeUJFWlhOcFoyNGdKbUZ0Y0RzZ1JHVjJaV3h2Y0cxbGJuUmNiaUFxWEc0Z0tpQlhaV0ptYjI1ME9pQlZVbGRIY205MFpYTnJWMmxrTFUxbFpFOWliQ0JpZVNCVlVsY3JLMXh1SUNvZ1ZWSk1PaUJvZEhSd09pOHZkM2QzTG0xNVptOXVkSE11WTI5dEwyWnZiblJ6TDNWeWR5OW5jbTkwWlhOckwzVnlkeTFuY205MFpYTnJMWFF0YldWa2FYVnRMWGRwWkdVdGIySnNhWEYxWlM5Y2JpQXFJRU52Y0hseWFXZG9kRG9nS0ZWU1Z5a3JLeXhEYjNCNWNtbG5hSFFnTWpBd05pQmllU0FvVlZKWEtTc3JJRVJsYzJsbmJpQW1ZVzF3T3lCRVpYWmxiRzl3YldWdWRGeHVJQ3BjYmlBcUlGZGxZbVp2Ym5RNklGVlNWMGR5YjNSbGMydFRReTFTWldjZ1lua2dWVkpYS3l0Y2JpQXFJRlZTVERvZ2FIUjBjRG92TDNkM2R5NXRlV1p2Ym5SekxtTnZiUzltYjI1MGN5OTFjbmN2WjNKdmRHVnpheTkxY25jdFozSnZkR1Z6YXkxell5MTBMWEpsWjNWc1lYSXZYRzRnS2lCRGIzQjVjbWxuYUhRNklDaFZVbGNwS3lzc1EyOXdlWEpwWjJoMElESXdNRFlnWW5rZ0tGVlNWeWtyS3lCRVpYTnBaMjRnSm1GdGNEc2dSR1YyWld4dmNHMWxiblJjYmlBcVhHNGdLaUJYWldKbWIyNTBPaUJWVWxkSGNtOTBaWE5yTFZKbFowbDBZU0JpZVNCVlVsY3JLMXh1SUNvZ1ZWSk1PaUJvZEhSd09pOHZkM2QzTG0xNVptOXVkSE11WTI5dEwyWnZiblJ6TDNWeWR5OW5jbTkwWlhOckwzVnlkeTFuY205MFpYTnJMWFF0Y21WbmRXeGhjaTFwZEdGc2FXTXZYRzRnS2lCRGIzQjVjbWxuYUhRNklDaFZVbGNwS3lzc1EyOXdlWEpwWjJoMElESXdNRFlnWW5rZ0tGVlNWeWtyS3lCRVpYTnBaMjRnSm1GdGNEc2dSR1YyWld4dmNHMWxiblJjYmlBcVhHNGdLaUJYWldKbWIyNTBPaUJWVWxkSGNtOTBaWE5yUlhoMFYybGtMVkpsWnlCaWVTQlZVbGNySzF4dUlDb2dWVkpNT2lCb2RIUndPaTh2ZDNkM0xtMTVabTl1ZEhNdVkyOXRMMlp2Ym5SekwzVnlkeTluY205MFpYTnJMM1Z5ZHkxbmNtOTBaWE5yTFhRdGNtVm5kV3hoY2kxbGVIUnlZUzEzYVdSbEwxeHVJQ29nUTI5d2VYSnBaMmgwT2lBb1ZWSlhLU3NyTEVOdmNIbHlhV2RvZENBeU1EQTJJR0o1SUNoVlVsY3BLeXNnUkdWemFXZHVJQ1poYlhBN0lFUmxkbVZzYjNCdFpXNTBYRzRnS2x4dUlDb2dWMlZpWm05dWREb2dWVkpYUjNKdmRHVnphMDVoY2kxTlpXUWdZbmtnVlZKWEt5dGNiaUFxSUZWU1REb2dhSFIwY0RvdkwzZDNkeTV0ZVdadmJuUnpMbU52YlM5bWIyNTBjeTkxY25jdlozSnZkR1Z6YXk5MWNuY3RaM0p2ZEdWemF5MTBMVzFsWkdsMWJTMXVZWEp5YjNjdlhHNGdLaUJEYjNCNWNtbG5hSFE2SUNoVlVsY3BLeXNzUTI5d2VYSnBaMmgwSURJd01EWWdZbmtnS0ZWU1Z5a3JLeUJFWlhOcFoyNGdKbUZ0Y0RzZ1JHVjJaV3h2Y0cxbGJuUmNiaUFxWEc0Z0tpQlhaV0ptYjI1ME9pQlZVbGRIY205MFpYTnJSWGgwVjJsa0xVMWxaQ0JpZVNCVlVsY3JLMXh1SUNvZ1ZWSk1PaUJvZEhSd09pOHZkM2QzTG0xNVptOXVkSE11WTI5dEwyWnZiblJ6TDNWeWR5OW5jbTkwWlhOckwzVnlkeTFuY205MFpYTnJMWFF0YldWa2FYVnRMV1Y0ZEhKaExYZHBaR1V2WEc0Z0tpQkRiM0I1Y21sbmFIUTZJQ2hWVWxjcEt5c3NRMjl3ZVhKcFoyaDBJREl3TURZZ1lua2dLRlZTVnlrckt5QkVaWE5wWjI0Z0ptRnRjRHNnUkdWMlpXeHZjRzFsYm5SY2JpQXFYRzRnS2lCWFpXSm1iMjUwT2lCVlVsZEhjbTkwWlhOclUwTXRUR2xuSUdKNUlGVlNWeXNyWEc0Z0tpQlZVa3c2SUdoMGRIQTZMeTkzZDNjdWJYbG1iMjUwY3k1amIyMHZabTl1ZEhNdmRYSjNMMmR5YjNSbGMyc3ZkWEozTFdkeWIzUmxjMnN0YzJNdGRDMXNhV2RvZEM5Y2JpQXFJRU52Y0hseWFXZG9kRG9nS0ZWU1Z5a3JLeXhEYjNCNWNtbG5hSFFnTWpBd05pQmllU0FvVlZKWEtTc3JJRVJsYzJsbmJpQW1ZVzF3T3lCRVpYWmxiRzl3YldWdWRGeHVJQ3BjYmlBcUlGZGxZbVp2Ym5RNklGVlNWMGR5YjNSbGMydERiMjR0UW05c0lHSjVJRlZTVnlzclhHNGdLaUJWVWt3NklHaDBkSEE2THk5M2QzY3ViWGxtYjI1MGN5NWpiMjB2Wm05dWRITXZkWEozTDJkeWIzUmxjMnN2ZFhKM0xXZHliM1JsYzJzdGRDMWliMnhrTFdOdmJtUmxibk5sWkM5Y2JpQXFJRU52Y0hseWFXZG9kRG9nS0ZWU1Z5a3JLeXhEYjNCNWNtbG5hSFFnTWpBd05pQmllU0FvVlZKWEtTc3JJRVJsYzJsbmJpQW1ZVzF3T3lCRVpYWmxiRzl3YldWdWRGeHVJQ3BjYmlBcUlGZGxZbVp2Ym5RNklGVlNWMGR5YjNSbGMydEZlSFJPWVhJdFFtOXNJR0o1SUZWU1Z5c3JYRzRnS2lCVlVrdzZJR2gwZEhBNkx5OTNkM2N1YlhsbWIyNTBjeTVqYjIwdlptOXVkSE12ZFhKM0wyZHliM1JsYzJzdmRYSjNMV2R5YjNSbGMyc3RkQzFpYjJ4a0xXVjRkSEpoTFc1aGNuSnZkeTljYmlBcUlFTnZjSGx5YVdkb2REb2dLRlZTVnlrckt5eERiM0I1Y21sbmFIUWdNakF3TmlCaWVTQW9WVkpYS1NzcklFUmxjMmxuYmlBbVlXMXdPeUJFWlhabGJHOXdiV1Z1ZEZ4dUlDcGNiaUFxSUZkbFltWnZiblE2SUZWU1YwZHliM1JsYzJ0RmVIUk9ZWEl0VFdWa1QySnNJR0o1SUZWU1Z5c3JYRzRnS2lCVlVrdzZJR2gwZEhBNkx5OTNkM2N1YlhsbWIyNTBjeTVqYjIwdlptOXVkSE12ZFhKM0wyZHliM1JsYzJzdmRYSjNMV2R5YjNSbGMyc3RkQzF0WldScGRXMHRaWGgwY21FdGJtRnljbTkzTFc5aWJHbHhkV1V2WEc0Z0tpQkRiM0I1Y21sbmFIUTZJQ2hWVWxjcEt5c3NRMjl3ZVhKcFoyaDBJREl3TURZZ1lua2dLRlZTVnlrckt5QkVaWE5wWjI0Z0ptRnRjRHNnUkdWMlpXeHZjRzFsYm5SY2JpQXFYRzRnS2lCWFpXSm1iMjUwT2lCVlVsZEhjbTkwWlhOclYybGtMVUp2YkU5aWJDQmllU0JWVWxjcksxeHVJQ29nVlZKTU9pQm9kSFJ3T2k4dmQzZDNMbTE1Wm05dWRITXVZMjl0TDJadmJuUnpMM1Z5ZHk5bmNtOTBaWE5yTDNWeWR5MW5jbTkwWlhOckxYUXRZbTlzWkMxM2FXUmxMVzlpYkdseGRXVXZYRzRnS2lCRGIzQjVjbWxuYUhRNklDaFZVbGNwS3lzc1EyOXdlWEpwWjJoMElESXdNRFlnWW5rZ0tGVlNWeWtyS3lCRVpYTnBaMjRnSm1GdGNEc2dSR1YyWld4dmNHMWxiblJjYmlBcVhHNGdLaUJYWldKbWIyNTBPaUJWVWxkSGNtOTBaWE5yVjJsa0xWSmxaMDlpYkNCaWVTQlZVbGNySzF4dUlDb2dWVkpNT2lCb2RIUndPaTh2ZDNkM0xtMTVabTl1ZEhNdVkyOXRMMlp2Ym5SekwzVnlkeTluY205MFpYTnJMM1Z5ZHkxbmNtOTBaWE5yTFhRdGNtVm5kV3hoY2kxM2FXUmxMVzlpYkdseGRXVXZYRzRnS2lCRGIzQjVjbWxuYUhRNklDaFZVbGNwS3lzc1EyOXdlWEpwWjJoMElESXdNRFlnWW5rZ0tGVlNWeWtyS3lCRVpYTnBaMjRnSm1GdGNEc2dSR1YyWld4dmNHMWxiblJjYmlBcVhHNGdLaUJYWldKbWIyNTBPaUJWVWxkSGNtOTBaWE5yVG1GeUxWSmxaMDlpYkNCaWVTQlZVbGNySzF4dUlDb2dWVkpNT2lCb2RIUndPaTh2ZDNkM0xtMTVabTl1ZEhNdVkyOXRMMlp2Ym5SekwzVnlkeTluY205MFpYTnJMM1Z5ZHkxbmNtOTBaWE5yTFhRdGNtVm5kV3hoY2kxdVlYSnliM2N0YjJKc2FYRjFaUzljYmlBcUlFTnZjSGx5YVdkb2REb2dLRlZTVnlrckt5eERiM0I1Y21sbmFIUWdNakF3TmlCaWVTQW9WVkpYS1NzcklFUmxjMmxuYmlBbVlXMXdPeUJFWlhabGJHOXdiV1Z1ZEZ4dUlDcGNiaUFxSUZkbFltWnZiblE2SUZWU1YwZHliM1JsYzJzdFFtOXNJR0o1SUZWU1Z5c3JYRzRnS2lCVlVrdzZJR2gwZEhBNkx5OTNkM2N1YlhsbWIyNTBjeTVqYjIwdlptOXVkSE12ZFhKM0wyZHliM1JsYzJzdmRYSjNMV2R5YjNSbGMyc3RkQzFpYjJ4a0wxeHVJQ29nUTI5d2VYSnBaMmgwT2lBb1ZWSlhLU3NyTEVOdmNIbHlhV2RvZENBeU1EQTJJR0o1SUNoVlVsY3BLeXNnUkdWemFXZHVJQ1poYlhBN0lFUmxkbVZzYjNCdFpXNTBYRzRnS2x4dUlDb2dWMlZpWm05dWREb2dWVkpYUjNKdmRHVnphMFY0ZEU1aGNpMU1hV2NnWW5rZ1ZWSlhLeXRjYmlBcUlGVlNURG9nYUhSMGNEb3ZMM2QzZHk1dGVXWnZiblJ6TG1OdmJTOW1iMjUwY3k5MWNuY3ZaM0p2ZEdWemF5OTFjbmN0WjNKdmRHVnpheTEwTFd4cFoyaDBMV1Y0ZEhKaExXNWhjbkp2ZHk5Y2JpQXFJRU52Y0hseWFXZG9kRG9nS0ZWU1Z5a3JLeXhEYjNCNWNtbG5hSFFnTWpBd05pQmllU0FvVlZKWEtTc3JJRVJsYzJsbmJpQW1ZVzF3T3lCRVpYWmxiRzl3YldWdWRGeHVJQ3BjYmlBcUlGZGxZbVp2Ym5RNklGVlNWMGR5YjNSbGMydEZlSFJPWVhJdFJYaDBUR2xuSUdKNUlGVlNWeXNyWEc0Z0tpQlZVa3c2SUdoMGRIQTZMeTkzZDNjdWJYbG1iMjUwY3k1amIyMHZabTl1ZEhNdmRYSjNMMmR5YjNSbGMyc3ZkWEozTFdkeWIzUmxjMnN0ZEMxbGVIUnlZUzFzYVdkb2RDMWxlSFJ5WVMxdVlYSnliM2N2WEc0Z0tpQkRiM0I1Y21sbmFIUTZJQ2hWVWxjcEt5c3NRMjl3ZVhKcFoyaDBJREl3TURZZ1lua2dLRlZTVnlrckt5QkVaWE5wWjI0Z0ptRnRjRHNnUkdWMlpXeHZjRzFsYm5SY2JpQXFYRzRnS2lCWFpXSm1iMjUwT2lCVlVsZEhjbTkwWlhOclJYaDBUbUZ5TFZKbFp5QmllU0JWVWxjcksxeHVJQ29nVlZKTU9pQm9kSFJ3T2k4dmQzZDNMbTE1Wm05dWRITXVZMjl0TDJadmJuUnpMM1Z5ZHk5bmNtOTBaWE5yTDNWeWR5MW5jbTkwWlhOckxYUXRjbVZuZFd4aGNpMWxlSFJ5WVMxdVlYSnliM2N2WEc0Z0tpQkRiM0I1Y21sbmFIUTZJQ2hWVWxjcEt5c3NRMjl3ZVhKcFoyaDBJREl3TURZZ1lua2dLRlZTVnlrckt5QkVaWE5wWjI0Z0ptRnRjRHNnUkdWMlpXeHZjRzFsYm5SY2JpQXFYRzRnS2x4dUlDb2dUR2xqWlc1elpUb2dhSFIwY0RvdkwzZDNkeTV0ZVdadmJuUnpMbU52YlM5MmFXVjNiR2xqWlc1elpUOTBlWEJsUFhkbFlpWmlkV2xzWkdsa1BUSTRPRGcyTURKY2JpQXFJRXhwWTJWdWMyVmtJSEJoWjJWMmFXVjNjem9nTWpBc01EQXdYRzRnS2x4dUlDb2d3cWtnTWpBeE5DQk5lVVp2Ym5SeklFbHVZMXh1WEc0dktpQkFhVzF3YjNKMElHMTFjM1FnWW1VZ1lYUWdkRzl3SUc5bUlHWnBiR1VzSUc5MGFHVnlkMmx6WlNCRFUxTWdkMmxzYkNCdWIzUWdkMjl5YTF4dVFHbHRjRzl5ZENCMWNtd29YQ0l2TDJobGJHeHZMbTE1Wm05dWRITXVibVYwTDJOdmRXNTBMekpqTVRNNVlWd2lLVnh1WEc0dkx5QkFabTl1ZEMxbVlXTmxJSHRtYjI1MExXWmhiV2xzZVRvZ0oxVlNWMGR5YjNSbGMyc3RUR2xuSnp0emNtTTZJSFZ5YkNnbkwzZGxZbVp2Ym5Sekx6SkRNVE01UVY4eU4xOHdMbVZ2ZENjcE8zTnlZem9nZFhKc0tDY3ZkMlZpWm05dWRITXZNa014TXpsQlh6STNYekF1Wlc5MFB5TnBaV1pwZUNjcElHWnZjbTFoZENnblpXMWlaV1JrWldRdGIzQmxiblI1Y0dVbktTeDFjbXdvSnk5M1pXSm1iMjUwY3k4eVF6RXpPVUZmTWpkZk1DNTNiMlptSnlrZ1ptOXliV0YwS0NkM2IyWm1KeWtzZFhKc0tDY3ZkMlZpWm05dWRITXZNa014TXpsQlh6STNYekF1ZEhSbUp5a2dabTl5YldGMEtDZDBjblZsZEhsd1pTY3BPMzFjYmk4dlhHNHZMeUJBWm05dWRDMW1ZV05sSUh0bWIyNTBMV1poYldsc2VUb2dKMVZTVjBkeWIzUmxjMnN0VEdsblNYUmhKenR6Y21NNklIVnliQ2duTDNkbFltWnZiblJ6THpKRE1UTTVRVjh4TVY4d0xtVnZkQ2NwTzNOeVl6b2dkWEpzS0NjdmQyVmlabTl1ZEhNdk1rTXhNemxCWHpFeFh6QXVaVzkwUHlOcFpXWnBlQ2NwSUdadmNtMWhkQ2duWlcxaVpXUmtaV1F0YjNCbGJuUjVjR1VuS1N4MWNtd29KeTkzWldKbWIyNTBjeTh5UXpFek9VRmZNVEZmTUM1M2IyWm1KeWtnWm05eWJXRjBLQ2QzYjJabUp5a3NkWEpzS0NjdmQyVmlabTl1ZEhNdk1rTXhNemxCWHpFeFh6QXVkSFJtSnlrZ1ptOXliV0YwS0NkMGNuVmxkSGx3WlNjcE8zMWNibHh1UUdadmJuUXRabUZqWlZ4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSjFWU1YwZHliM1JsYzJzdFVtVm5KMXh1SUNCemNtTTZJSFZ5YkNoY0lpOTNaV0ptYjI1MGN5OHlRekV6T1VGZk1qUmZNQzVsYjNSY0lpbGNiaUFnYzNKak9pQjFjbXdvWENJdmQyVmlabTl1ZEhNdk1rTXhNemxCWHpJMFh6QXVaVzkwUHlOcFpXWnBlRndpS1NCbWIzSnRZWFFvWENKbGJXSmxaR1JsWkMxdmNHVnVkSGx3WlZ3aUtTd2dkWEpzS0Z3aUwzZGxZbVp2Ym5Sekx6SkRNVE01UVY4eU5GOHdMbmR2Wm1aY0lpa2dabTl5YldGMEtGd2lkMjltWmx3aUtTd2dkWEpzS0Z3aUwzZGxZbVp2Ym5Sekx6SkRNVE01UVY4eU5GOHdMblIwWmx3aUtTQm1iM0p0WVhRb1hDSjBjblZsZEhsd1pWd2lLVnh1WEc1Y2JrQm1iMjUwTFdaaFkyVmNiaUFnWm05dWRDMW1ZVzFwYkhrNklDZFZVbGRIY205MFpYTnJMVkpsWjBsMFlTZGNiaUFnYzNKak9pQjFjbXdvWENJdmQyVmlabTl1ZEhNdk1rTXhNemxCWHpKRFh6QXVaVzkwWENJcFhHNGdJSE55WXpvZ2RYSnNLRndpTDNkbFltWnZiblJ6THpKRE1UTTVRVjh5UTE4d0xtVnZkRDhqYVdWbWFYaGNJaWtnWm05eWJXRjBLRndpWlcxaVpXUmtaV1F0YjNCbGJuUjVjR1ZjSWlrc0lIVnliQ2hjSWk5M1pXSm1iMjUwY3k4eVF6RXpPVUZmTWtOZk1DNTNiMlptWENJcElHWnZjbTFoZENoY0luZHZabVpjSWlrc0lIVnliQ2hjSWk5M1pXSm1iMjUwY3k4eVF6RXpPVUZmTWtOZk1DNTBkR1pjSWlrZ1ptOXliV0YwS0Z3aWRISjFaWFI1Y0dWY0lpbGNibHh1WEc1QVptOXVkQzFtWVdObFhHNGdJR1p2Ym5RdFptRnRhV3g1T2lBblZWSlhSM0p2ZEdWemF5MUNiMnduWEc0Z0lITnlZem9nZFhKc0tGd2lMM2RsWW1admJuUnpMekpETVRNNVFWOHpOMTh3TG1WdmRGd2lLVnh1SUNCemNtTTZJSFZ5YkNoY0lpOTNaV0ptYjI1MGN5OHlRekV6T1VGZk16ZGZNQzVsYjNRL0kybGxabWw0WENJcElHWnZjbTFoZENoY0ltVnRZbVZrWkdWa0xXOXdaVzUwZVhCbFhDSXBMQ0IxY213b1hDSXZkMlZpWm05dWRITXZNa014TXpsQlh6TTNYekF1ZDI5bVpsd2lLU0JtYjNKdFlYUW9YQ0ozYjJabVhDSXBMQ0IxY213b1hDSXZkMlZpWm05dWRITXZNa014TXpsQlh6TTNYekF1ZEhSbVhDSXBJR1p2Y20xaGRDaGNJblJ5ZFdWMGVYQmxYQ0lwWEc1Y2JseHVRR1p2Ym5RdFptRmpaVnh1SUNCbWIyNTBMV1poYldsc2VUb2dKMVZTVjBkeWIzUmxjMnN0UW05c1NYUmhKMXh1SUNCemNtTTZJSFZ5YkNoY0lpOTNaV0ptYjI1MGN5OHlRekV6T1VGZk5sOHdMbVZ2ZEZ3aUtWeHVJQ0J6Y21NNklIVnliQ2hjSWk5M1pXSm1iMjUwY3k4eVF6RXpPVUZmTmw4d0xtVnZkRDhqYVdWbWFYaGNJaWtnWm05eWJXRjBLRndpWlcxaVpXUmtaV1F0YjNCbGJuUjVjR1ZjSWlrc0lIVnliQ2hjSWk5M1pXSm1iMjUwY3k4eVF6RXpPVUZmTmw4d0xuZHZabVpjSWlrZ1ptOXliV0YwS0Z3aWQyOW1abHdpS1N3Z2RYSnNLRndpTDNkbFltWnZiblJ6THpKRE1UTTVRVjgyWHpBdWRIUm1YQ0lwSUdadmNtMWhkQ2hjSW5SeWRXVjBlWEJsWENJcFhHNWNibHh1UUdadmJuUXRabUZqWlZ4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSjFWU1YwZHliM1JsYzJ0RGIyNHRUR2xuSjF4dUlDQnpjbU02SUhWeWJDaGNJaTkzWldKbWIyNTBjeTh5UXpFek9VRmZNVVZmTUM1bGIzUmNJaWxjYmlBZ2MzSmpPaUIxY213b1hDSXZkMlZpWm05dWRITXZNa014TXpsQlh6RkZYekF1Wlc5MFB5TnBaV1pwZUZ3aUtTQm1iM0p0WVhRb1hDSmxiV0psWkdSbFpDMXZjR1Z1ZEhsd1pWd2lLU3dnZFhKc0tGd2lMM2RsWW1admJuUnpMekpETVRNNVFWOHhSVjh3TG5kdlptWmNJaWtnWm05eWJXRjBLRndpZDI5bVpsd2lLU3dnZFhKc0tGd2lMM2RsWW1admJuUnpMekpETVRNNVFWOHhSVjh3TG5SMFpsd2lLU0JtYjNKdFlYUW9YQ0owY25WbGRIbHdaVndpS1Z4dVhHNWNia0JtYjI1MExXWmhZMlZjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ2RWVWxkSGNtOTBaWE5yUTI5dUxVSnZiQ2RjYmlBZ2MzSmpPaUIxY213b1hDSXZkMlZpWm05dWRITXZNa014TXpsQlh6TXhYekF1Wlc5MFhDSXBYRzRnSUhOeVl6b2dkWEpzS0Z3aUwzZGxZbVp2Ym5Sekx6SkRNVE01UVY4ek1WOHdMbVZ2ZEQ4amFXVm1hWGhjSWlrZ1ptOXliV0YwS0Z3aVpXMWlaV1JrWldRdGIzQmxiblI1Y0dWY0lpa3NJSFZ5YkNoY0lpOTNaV0ptYjI1MGN5OHlRekV6T1VGZk16RmZNQzUzYjJabVhDSXBJR1p2Y20xaGRDaGNJbmR2Wm1aY0lpa3NJSFZ5YkNoY0lpOTNaV0ptYjI1MGN5OHlRekV6T1VGZk16RmZNQzUwZEdaY0lpa2dabTl5YldGMEtGd2lkSEoxWlhSNWNHVmNJaWxjYmlJc0lpOHZJSEJoZEdoYlkyeGhjM05lUFZ3aWMyeGhkMk4xWW1WY0lsMHNYRzR2THlCd2IyeDVaMjl1VzJOc1lYTnpYajFjSW5Oc1lYZGpkV0psWENKZElIdGNiaTh2SUNBZ0lDQm1hV3hzT25kb2FYUmxPMXh1THk4Z2ZWeHVYRzV6ZG1kY2JpQWdhR1ZwWjJoME9pQXhNREFsWEc0Z0lIZHBaSFJvT2lBeE1EQWxYRzVjYmk1emJHRjNZM1ZpWlZ4dUlDQm1hV3hzT2lCM2FHbDBaVnh1WEc0dVpHbGhiVzl1WkZ4dUlDQm1hV3hzT2lBa1lYSmphR2R5WVhsY2JseHVMbU52WkdWd1pXNWNiaUFnWm1sc2JEb2dKR0Z5WTJobmNtRjVYRzRpTENJdVkyOXVkR0ZwYm1WeVhHNGdJRzFoY21kcGJpMTBiM0E2SURCY2JseHVYRzViWTJ4aGMzTXFQVjlmWTI5dWRHRnBibVZ5WFZ4dUlDQnRZWEpuYVc0NklEQWdZWFYwYjF4dUlDQnRZWGd0ZDJsa2RHZzZJREV5TURCd2VGeHVJQ0J3WVdSa2FXNW5PaUF3SURKeVpXMWNibHh1SUNBcmJXVmthV0VvWENJOFBXUmxjMnQwYjNCY0lpbGNiaUFnSUNCdFlYZ3RkMmxrZEdnNklERXdNalJ3ZUZ4dVhHNWNibVJwZGx0amJHRnpjeW85WENJdExXTnZiRndpWFZ4dUlDQm1iRzloZERvZ2JHVm1kRnh1SWl3aUx5OWNibHgwSUY4Z0lDQWdJQ0FnSUNBZ0lDQmZJQ0FnSUNBZ0lDQWdJQ0JmSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWHlCZlhHNWNkQ2hmS1NBZ0lDQWdJQ0FnSUNCOElId2dJQ0FnSUNBZ0lDQjhJSHdnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmQ0FvWHlsY2JseDBJRjhnWHlCZlh5QWdJRjlmWDN3Z2ZGOGdJQ0JmSUNCZlgzd2dmQ0JmWDE4Z0lDQmZJRjlmSUY5Zlh5QWdJRjlmWHlBZ1gxOThJSHhmSUNCZlh5QmZYRzVjZEh3Z2ZDQW5YeUJjWENBdklGOWZmQ0I4SUh3Z2ZDQjhMeUJmWUNCOEx5QmZJRnhjSUh3Z0oxOGdZQ0JmSUZ4Y0lDOGdYeUJjWEM4Z1gyQWdmQ0I4THlCZllDQjhYRzVjZEh3Z2ZDQjhJSHdnZkNBb1gxOThJSHdnZkY5OElId2dLRjk4SUh3Z0lGOWZMeUI4SUh3Z2ZDQjhJSHdnZkNBZ1gxOHZJQ2hmZkNCOElId2dLRjk4SUh4Y2JseDBmRjk4WDN3Z2ZGOThYRnhmWDE5OFgzeGNYRjlmTEY5OFhGeGZYeXhmZkZ4Y1gxOWZmQ0I4WDN3Z2ZGOThJSHhmZkZ4Y1gxOWZmRnhjWDE4c1gzeGZmRnhjWDE4c1gzeGNibHh1WEhSVGFXMXdiR1VzSUdWc1pXZGhiblFnWVc1a0lHMWhhVzUwWVdsdVlXSnNaU0J0WldScFlTQnhkV1Z5YVdWeklHbHVJRk5oYzNOY2JseHVYSFJvZEhSd09pOHZhVzVqYkhWa1pTMXRaV1JwWVM1amIyMWNibHh1SUNCQmRYUm9iM0k2SUVWa2RXRnlaRzhnUW05MVkyRnpJRHh0WVdsc1FHVmtkV0Z5Wkc5aWIzVmpZWE11WTI5dFBseHVYRzVjYmlBZ1EzSmxZWFJsY3lCaElHeHBjM1FnYjJZZ1oyeHZZbUZzSUdKeVpXRnJjRzlwYm5SelhHNWNiaUFnUUdGMWRHaHZjaUJGWkhWaGNtUnZJRUp2ZFdOaGMxeHVYRzRnSUVCbGVHRnRjR3hsSUhOamMzTWdMU0JEY21WaGRHVnpJR0VnYzJsdVoyeGxJR0p5WldGcmNHOXBiblFnZDJsMGFDQjBhR1VnYkdGaVpXd2dZSEJvYjI1bFlGeHVJQ0FrWW5KbFlXdHdiMmx1ZEhNNklDZ25jR2h2Ym1Vbk9pQXpNakJ3ZUNrN1hHNWNiaVJpY21WaGEzQnZhVzUwY3pvZ0tGd2ljR2h2Ym1WY0lqb2dNekl3Y0hnc0lGd2lkR0ZpYkdWMFhDSTZJRGMyT0hCNExDQmNJbVJsYzJ0MGIzQmNJam9nTVRBeU5IQjRLU0FoWkdWbVlYVnNkRnh1WEc0dkwxeHVJQ0JEY21WaGRHVnpJR0VnYkdsemRDQnZaaUJ6ZEdGMGFXTWdaWGh3Y21WemMybHZibk1nYjNJZ2JXVmthV0VnZEhsd1pYTmNibHh1SUNCQVlYVjBhRzl5SUVWa2RXRnlaRzhnUW05MVkyRnpYRzVjYmlBZ1FHVjRZVzF3YkdVZ2MyTnpjeUF0SUVOeVpXRjBaWE1nWVNCemFXNW5iR1VnYldWa2FXRWdkSGx3WlNBb2MyTnlaV1Z1S1Z4dUlDQWdKRzFsWkdsaExXVjRjSEpsYzNOcGIyNXpPaUFvSjNOamNtVmxiaWM2SUNkelkzSmxaVzRuS1R0Y2JseHVJQ0JBWlhoaGJYQnNaU0J6WTNOeklDMGdRM0psWVhSbGN5QmhJSE4wWVhScFl5QmxlSEJ5WlhOemFXOXVJSGRwZEdnZ2JHOW5hV05oYkNCa2FYTnFkVzVqZEdsdmJpQW9UMUlnYjNCbGNtRjBiM0lwWEc0Z0lDQWtiV1ZrYVdFdFpYaHdjbVZ6YzJsdmJuTTZJQ2hjYmlBZ1hIUmNkQ2R5WlhScGJtRXllQ2M2SUNoY2JpQWdYSFJjZEZ4MEp5Z3RkMlZpYTJsMExXMXBiaTFrWlhacFkyVXRjR2w0Wld3dGNtRjBhVzg2SURJcEp5eGNiaUFnWEhSY2RGeDBKeWh0YVc0dGNtVnpiMngxZEdsdmJqb2dNVGt5WkhCcEtTZGNiaUFnWEhSY2RDbGNiaUFnWEhRcE8xeHVYRzRrYldWa2FXRXRaWGh3Y21WemMybHZibk02SUNoY0luTmpjbVZsYmx3aU9pQmNJbk5qY21WbGJsd2lMQ0JjSW5CeWFXNTBYQ0k2SUZ3aWNISnBiblJjSWl3Z1hDSm9ZVzVrYUdWc1pGd2lPaUJjSW1oaGJtUm9aV3hrWENJc0lGd2ljbVYwYVc1aE1uaGNJam9nS0Z3aUtDMTNaV0pyYVhRdGJXbHVMV1JsZG1salpTMXdhWGhsYkMxeVlYUnBiem9nTWlsY0lpd2dYQ0lvYldsdUxYSmxjMjlzZFhScGIyNDZJREU1TW1Sd2FTbGNJaWtzSUZ3aWNtVjBhVzVoTTNoY0lqb2dLRndpS0MxM1pXSnJhWFF0YldsdUxXUmxkbWxqWlMxd2FYaGxiQzF5WVhScGJ6b2dNeWxjSWl3Z1hDSW9iV2x1TFhKbGMyOXNkWFJwYjI0NklETTFNR1J3YVNsY0lpa3BJQ0ZrWldaaGRXeDBYRzVjYmk4dlhHNGdJRVJsWm1sdVpYTWdZU0J1ZFcxaVpYSWdkRzhnWW1VZ1lXUmtaV1FnYjNJZ2MzVmlkSEpoWTNSbFpDQm1jbTl0SUdWaFkyZ2dkVzVwZENCM2FHVnVJR1JsWTJ4aGNtbHVaeUJpY21WaGEzQnZhVzUwY3lCM2FYUm9JR1Y0WTJ4MWMybDJaU0JwYm5SbGNuWmhiSE5jYmx4dUlDQkFZWFYwYUc5eUlFVmtkV0Z5Wkc4Z1FtOTFZMkZ6WEc1Y2JpQWdRR1Y0WVcxd2JHVWdjMk56Y3lBdElFbHVkR1Z5ZG1Gc0lHWnZjaUJ3YVhobGJITWdhWE1nWkdWbWFXNWxaQ0JoY3lCZ01XQWdZbmtnWkdWbVlYVnNkRnh1SUNBZ1FHbHVZMngxWkdVZ2JXVmthV0VvWENJK01USTRjSGhjSWlrZ2UzMWNibHh1SUNCSFpXNWxjbUYwWlhNNlhHNGdJRUJ0WldScFlTQW9iV2x1TFhkcFpIUm9PaUF4TWpsd2VDa2dlMzFjYmx4dUlDQkFaWGhoYlhCc1pTQnpZM056SUMwZ1NXNTBaWEoyWVd3Z1ptOXlJR1Z0Y3lCcGN5QmtaV1pwYm1Wa0lHRnpJR0F3TGpBeFlDQmllU0JrWldaaGRXeDBYRzRnSUNCQWFXNWpiSFZrWlNCdFpXUnBZU2hjSWo0eU1HVnRYQ0lwSUh0OVhHNWNiaUFnUjJWdVpYSmhkR1Z6T2x4dUlDQkFiV1ZrYVdFZ0tHMXBiaTEzYVdSMGFEb2dNakF1TURGbGJTa2dlMzFjYmx4dUlDQkFaWGhoYlhCc1pTQnpZM056SUMwZ1NXNTBaWEoyWVd3Z1ptOXlJSEpsYlhNZ2FYTWdaR1ZtYVc1bFpDQmhjeUJnTUM0eFlDQmllU0JrWldaaGRXeDBMQ0IwYnlCaVpTQjFjMlZrSUhkcGRHZ2dZR1p2Ym5RdGMybDZaVG9nTmpJdU5TVTdZRnh1SUNBZ1FHbHVZMngxWkdVZ2JXVmthV0VvWENJK01pNHdjbVZ0WENJcElIdDlYRzVjYmlBZ1IyVnVaWEpoZEdWek9seHVJQ0JBYldWa2FXRWdLRzFwYmkxM2FXUjBhRG9nTWk0eGNtVnRLU0I3ZlZ4dVhHNGtkVzVwZEMxcGJuUmxjblpoYkhNNklDaGNJbkI0WENJNklERXNJRndpWlcxY0lqb2dNQzR3TVN3Z1hDSnlaVzFjSWpvZ01DNHhLU0FoWkdWbVlYVnNkRnh1WEc0dkwxeHVJQ0JIWlc1bGNtRjBaWE1nWVNCdFpXUnBZU0J4ZFdWeWVTQmlZWE5sWkNCdmJpQmhJR3hwYzNRZ2IyWWdZMjl1WkdsMGFXOXVjMXh1WEc0Z0lFQmhkWFJvYjNJZ1JXUjFZWEprYnlCQ2IzVmpZWE5jYmx4dUlDQkFjR0Z5WVcwZ2UweHBjM1I5SUNBZ0pHTnZibVJwZEdsdmJuTWdJQzBnVFdWa2FXRWdjWFZsY25rZ1kyOXVaR2wwYVc5dWMxeHVYRzRnSUVCbGVHRnRjR3hsSUhOamMzTWdMU0JYYVhSb0lHRWdjMmx1WjJ4bElITmxkQ0JpY21WaGEzQnZhVzUwWEc0Z0lDQkFhVzVqYkhWa1pTQnRaV1JwWVNoY0lqNXdhRzl1WlZ3aUtTQjdJSDFjYmx4dUlDQkFaWGhoYlhCc1pTQnpZM056SUMwZ1YybDBhQ0IwZDI4Z2MyVjBJR0p5WldGcmNHOXBiblJ6WEc0Z0lDQkFhVzVqYkhWa1pTQnRaV1JwWVNoY0lqNXdhRzl1WlZ3aUxDQmNJanc5ZEdGaWJHVjBYQ0lwSUhzZ2ZWeHVYRzRnSUVCbGVHRnRjR3hsSUhOamMzTWdMU0JYYVhSb0lHTjFjM1J2YlNCMllXeDFaWE5jYmlBZ0lFQnBibU5zZFdSbElHMWxaR2xoS0Z3aVBqMHpOVGh3ZUZ3aUxDQmNJanc0TlRCd2VGd2lLU0I3SUgxY2JseHVJQ0JBWlhoaGJYQnNaU0J6WTNOeklDMGdWMmwwYUNCelpYUWdZbkpsWVd0d2IybHVkSE1nZDJsMGFDQmpkWE4wYjIwZ2RtRnNkV1Z6WEc0Z0lDQkFhVzVqYkhWa1pTQnRaV1JwWVNoY0lqNWtaWE5yZEc5d1hDSXNJRndpUEQweE16VXdjSGhjSWlrZ2V5QjlYRzVjYmlBZ1FHVjRZVzF3YkdVZ2MyTnpjeUF0SUZkcGRHZ2dZU0J6ZEdGMGFXTWdaWGh3Y21WemMybHZibHh1SUNBZ1FHbHVZMngxWkdVZ2JXVmthV0VvWENKeVpYUnBibUV5ZUZ3aUtTQjdJSDFjYmx4dUlDQkFaWGhoYlhCc1pTQnpZM056SUMwZ1RXbDRhVzVuSUdWMlpYSjVkR2hwYm1kY2JpQWdJRUJwYm1Oc2RXUmxJRzFsWkdsaEtGd2lQajB6TlRCd2VGd2lMQ0JjSWp4MFlXSnNaWFJjSWl3Z1hDSnlaWFJwYm1FemVGd2lLU0I3SUgxY2JseHVYRzQ5YldWa2FXRW9KR052Ym1ScGRHbHZibk11TGk0cFhHNGdJRUJtYjNJZ0pHa2dabkp2YlNBeElIUm9jbTkxWjJnZ2JHVnVaM1JvS0NSamIyNWthWFJwYjI1ektWeHVJQ0FnSUNSamIyNWthWFJwYjI1ek9pQnpaWFF0Ym5Sb0tDUmpiMjVrYVhScGIyNXpMQ0FrYVN3Z2NHRnljMlV0Wlhod2NtVnpjMmx2YmlodWRHZ29KR052Ym1ScGRHbHZibk1zSUNScEtTa3BYRzRnSUNSaWNtRnVZMmhsY3pvZ1oyVjBMWEYxWlhKNUxXSnlZVzVqYUdWektDUmpiMjVrYVhScGIyNXpLVnh1SUNBa2NYVmxjbms2SUZ3aVhDSmNiaUFnUUdWaFkyZ2dKR0p5WVc1amFDQnBiaUFrWW5KaGJtTm9aWE5jYmlBZ0lDQkFhV1lnYzNSeUxXeGxibWQwYUNna2NYVmxjbmtwSUNFOUlEQmNiaUFnSUNBZ0lDUnhkV1Z5ZVRvZ0pIRjFaWEo1SUNzZ1hDSXNJRndpWEc0Z0lDQWdKSEYxWlhKNU9pQWtjWFZsY25rZ0t5QWtZbkpoYm1Ob1hHNGdJRUJ0WldScFlTQWpleVJ4ZFdWeWVYMWNiaUFnSUNCQVkyOXVkR1Z1ZEZ4dVhHNHZMMXh1SUNCU1pXRmtjeUJoSUd4cGMzUWdiMllnYldWa2FXRWdjWFZsY25rZ1pYaHdjbVZ6YzJsdmJuTWdZVzVrSUhObGNHRnlZWFJsY3lCc2IyZHBZMkZzSUdScGMycDFibU4wYVc5dWN5QnBiblJ2SUdScFptWmxjbVZ1ZENCaWNtRnVZMmhsYzF4dVhHNGdJRUJoZFhSb2IzSWdSV1IxWVhKa2J5QkNiM1ZqWVhOY2JpQWdRSEJoY21GdElIdE1hWE4wZlNBZ0lDUmxlSEJ5WlhOemFXOXVjeUFnTFNCc2FYTjBJRzltSUdWNGNISmxjM05wYjI1elhHNGdJRUIwYUhKdmQzTWdZQ1JsZUhCeVpYTnphVzl1WUNCcGN5QnViM1FnWVNCMllXeHBaQ0JsZUhCeVpYTnphVzl1WEc1Y2JpQWdRSEpsZEhWeWJpQjdUR2x6ZENCOElFNTFiR3g5WEc1Y2JseHVRR1oxYm1OMGFXOXVJR2RsZEMxeGRXVnllUzFpY21GdVkyaGxjeWdrWlhod2NtVnpjMmx2Ym5NcFhHNGdJQ1J5WlhOMWJIUTZJRndpWENKY2JpQWdKR2hoY3kxbmNtOTFjSE02SUdaaGJITmxYRzRnSUM4dklFZGxkSFJwYm1jZ2FXNXBkR2xoYkNCemJtRndjMmh2ZENCaGJtUWdiRzl2YTJsdVp5Qm1iM0lnWjNKdmRYQnpYRzRnSUVCbFlXTm9JQ1JsZUhCeVpYTnphVzl1SUdsdUlDUmxlSEJ5WlhOemFXOXVjMXh1SUNBZ0lFQnBaaUJ6ZEhJdGJHVnVaM1JvS0NSeVpYTjFiSFFwSUNFOUlEQmNiaUFnSUNBZ0lDUnlaWE4xYkhRNklDUnlaWE4xYkhRZ0t5QmNJaUJoYm1RZ1hDSmNiaUFnSUNCQWFXWWdkSGx3WlMxdlppZ2taWGh3Y21WemMybHZiaWtnUFQwZ1hDSnpkSEpwYm1kY0lseHVJQ0FnSUNBZ0pISmxjM1ZzZERvZ0pISmxjM1ZzZENBcklDUmxlSEJ5WlhOemFXOXVYRzRnSUNBZ1FHVnNjMlVnYVdZZ2RIbHdaUzF2Wmlna1pYaHdjbVZ6YzJsdmJpa2dQVDBnWENKc2FYTjBYQ0pjYmlBZ0lDQWdJQ1J5WlhOMWJIUTZJQ1J5WlhOMWJIUWdLeUJ1ZEdnb0pHVjRjSEpsYzNOcGIyNHNJREVwWEc0Z0lDQWdJQ0FrYUdGekxXZHliM1Z3Y3pvZ2RISjFaVnh1SUNBZ0lFQmxiSE5sWEc0Z0lDQWdJQ0JBZDJGeWJpQmNJaU43SkdWNGNISmxjM05wYjI1OUlHbHpJRzV2ZENCaElIWmhiR2xrSUdWNGNISmxjM05wYjI0dVhDSmNiaUFnTHk4Z1NXWWdkMlVnYUdGMlpTQm5jbTkxY0hNc0lIZGxJR2hoZG1VZ2RHOGdZM0psWVhSbElHRnNiQ0J3YjNOemFXSnNaU0JqYjIxaWFXNWhkR2x2Ym5OY2JpQWdRR2xtSUNSb1lYTXRaM0p2ZFhCelhHNGdJQ0FnUUdWaFkyZ2dKR1Y0Y0hKbGMzTnBiMjRnYVc0Z0pHVjRjSEpsYzNOcGIyNXpYRzRnSUNBZ0lDQkFhV1lnZEhsd1pTMXZaaWdrWlhod2NtVnpjMmx2YmlrZ1BUMGdYQ0pzYVhOMFhDSmNiaUFnSUNBZ0lDQWdKR1pwY25OME9pQnVkR2dvSkdWNGNISmxjM05wYjI0c0lERXBYRzRnSUNBZ0lDQWdJRUJsWVdOb0lDUnRaVzFpWlhJZ2FXNGdKR1Y0Y0hKbGMzTnBiMjVjYmlBZ0lDQWdJQ0FnSUNCQWFXWWdKRzFsYldKbGNpQWhQU0FrWm1seWMzUmNiaUFnSUNBZ0lDQWdJQ0FnSUVCbFlXTm9JQ1J3WVhKMGFXRnNJR2x1SUNSeVpYTjFiSFJjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdKSEpsYzNWc2REb2dhbTlwYmlna2NtVnpkV3gwTENCemRISXRjbVZ3YkdGalpTMW1hWEp6ZENna1ptbHljM1FzSUNSdFpXMWlaWElzSUNSd1lYSjBhV0ZzS1NsY2JpQWdRSEpsZEhWeWJpQWtjbVZ6ZFd4MFhHNWNiaTh2WEc0Z0lGQmhjbk5sY3lCaElITjBjbWx1WnlCMGJ5Qm1iM0p0SUdFZ2JXVmthV0VnY1hWbGNua2daWGh3Y21WemMybHZibHh1WEc0Z0lFQmhkWFJvYjNJZ1JXUjFZWEprYnlCQ2IzVmpZWE5jYmx4dUlDQkFjR0Z5WVcwZ2UxTjBjbWx1WjMwZ0lDQWtaWGh3Y21WemMybHZiaUFnTFNCbGVIQnlaWE56YVc5dUlDaHBiaUJ6ZEhKcGJtY3BYRzRnSUVCMGFISnZkM01nUlhod2NtVnpjMmx2YmlCM2FYUm9JSFI1Y0dVZ1lIUjVjR1V0YjJZb0pHVjRjSEpsYzNOcGIyNHBZQ0JrWlhSbFkzUmxaQ3dnYzNSeWFXNW5JR1Y0Y0dWamRHVmtYRzRnSUVCMGFISnZkM01nWUNSbGVIQnlaWE56YVc5dVlDQnBjeUJ0YVhOemFXNW5JR0Z1SUc5d1pYSmhkRzl5WEc0Z0lFQjBhSEp2ZDNNZ1ZXNXJibTkzYmlCMWJtbDBPaUJnSkhWdWFYUmdYRzVjYmlBZ1FISmxkSFZ5YmlCN1UzUnlhVzVuSUh3Z1RuVnNiSDFjYmx4dVhHNUFablZ1WTNScGIyNGdjR0Z5YzJVdFpYaHdjbVZ6YzJsdmJpZ2taWGh3Y21WemMybHZiaWxjYmlBZ0pHOXdaWEpoZEc5eU9pQmNJbHdpWEc0Z0lDUjJZV3gxWlRvZ1hDSmNJbHh1SUNBa1pXeGxiV1Z1ZERvZ1hDSmNJbHh1SUNBa2NtVnpkV3gwT2lCY0lsd2lYRzRnSUNScGN5MTNhV1IwYURvZ2RISjFaVnh1SUNCQWFXWWdkSGx3WlMxdlppZ2taWGh3Y21WemMybHZiaWtnSVQwZ1hDSnpkSEpwYm1kY0lseHVJQ0FnSUVCM1lYSnVJRndpUlhod2NtVnpjMmx2YmlCM2FYUm9JSFI1Y0dVZ1lDTjdkSGx3WlMxdlppZ2taWGh3Y21WemMybHZiaWw5WUNCa1pYUmxZM1JsWkN3Z2MzUnlhVzVuSUdWNGNHVmpkR1ZrTGx3aVhHNGdJQzh2SUZObGNHRnlZWFJwYm1jZ2RHaGxJRzl3WlhKaGRHOXlJR1p5YjIwZ2RHaGxJSEpsYzNRZ2IyWWdkR2hsSUdWNGNISmxjM05wYjI1Y2JpQWdRR2xtSUhOMGNpMXpiR2xqWlNna1pYaHdjbVZ6YzJsdmJpd2dNaXdnTWlrZ1BUMGdYQ0k5WENKY2JpQWdJQ0FrYjNCbGNtRjBiM0k2SUhOMGNpMXpiR2xqWlNna1pYaHdjbVZ6YzJsdmJpd2dNU3dnTWlsY2JpQWdJQ0FrZG1Gc2RXVTZJSE4wY2kxemJHbGpaU2drWlhod2NtVnpjMmx2Yml3Z015bGNiaUFnUUdWc2MyVmNiaUFnSUNBa2IzQmxjbUYwYjNJNklITjBjaTF6YkdsalpTZ2taWGh3Y21WemMybHZiaXdnTVN3Z01TbGNiaUFnSUNBa2RtRnNkV1U2SUhOMGNpMXpiR2xqWlNna1pYaHdjbVZ6YzJsdmJpd2dNaWxjYmlBZ0x5OGdRMmhsWTJ0cGJtY2dkMmhoZENCMGVYQmxJRzltSUdWNGNISmxjM05wYjI0Z2QyVnlaU0JrWldGc2FXNW5JSGRwZEdoY2JpQWdRR2xtSUcxaGNDMW9ZWE10YTJWNUtDUmljbVZoYTNCdmFXNTBjeXdnSkhaaGJIVmxLVnh1SUNBZ0lDUnlaWE4xYkhRNklHMWhjQzFuWlhRb0pHSnlaV0ZyY0c5cGJuUnpMQ0FrZG1Gc2RXVXBYRzRnSUVCbGJITmxJR2xtSUcxaGNDMW9ZWE10YTJWNUtDUnRaV1JwWVMxbGVIQnlaWE56YVc5dWN5d2dKR1Y0Y0hKbGMzTnBiMjRwWEc0Z0lDQWdKSEpsYzNWc2REb2diV0Z3TFdkbGRDZ2tiV1ZrYVdFdFpYaHdjbVZ6YzJsdmJuTXNJQ1JsZUhCeVpYTnphVzl1S1Z4dUlDQWdJQ1JwY3kxM2FXUjBhRG9nWm1Gc2MyVmNiaUFnUUdWc2MyVmNiaUFnSUNBa2NtVnpkV3gwT2lCMGJ5MXVkVzFpWlhJb0pIWmhiSFZsS1Z4dUlDQkFhV1lnSkdsekxYZHBaSFJvWEc0Z0lDQWdKSFZ1YVhRNklIVnVhWFFvSkhKbGMzVnNkQ2xjYmlBZ0lDQWthVzUwWlhKMllXdzZJREJjYmlBZ0lDQkFhV1lnYldGd0xXaGhjeTFyWlhrb0pIVnVhWFF0YVc1MFpYSjJZV3h6TENBa2RXNXBkQ2xjYmlBZ0lDQWdJQ1JwYm5SbGNuWmhiRG9nYldGd0xXZGxkQ2drZFc1cGRDMXBiblJsY25aaGJITXNJQ1IxYm1sMEtWeHVJQ0FnSUVCbGJITmxYRzRnSUNBZ0lDQkFkMkZ5YmlCY0lsVnVhMjV2ZDI0Z2RXNXBkRG9nSTNza2RXNXBkSDFjSWx4dUlDQWdJRUJwWmlBa2IzQmxjbUYwYjNJZ1BUMGdYQ0krWENKY2JpQWdJQ0FnSUNSbGJHVnRaVzUwT2lCY0lpaHRhVzR0ZDJsa2RHZzZJQ043SkhKbGMzVnNkQ0FySUNScGJuUmxjblpoYkgwcFhDSmNiaUFnSUNCQVpXeHpaU0JwWmlBa2IzQmxjbUYwYjNJZ1BUMGdYQ0k4WENKY2JpQWdJQ0FnSUNSbGJHVnRaVzUwT2lCY0lpaHRZWGd0ZDJsa2RHZzZJQ043SkhKbGMzVnNkQ0F0SUNScGJuUmxjblpoYkgwcFhDSmNiaUFnSUNCQVpXeHpaU0JwWmlBa2IzQmxjbUYwYjNJZ1BUMGdYQ0krUFZ3aVhHNGdJQ0FnSUNBa1pXeGxiV1Z1ZERvZ1hDSW9iV2x1TFhkcFpIUm9PaUFqZXlSeVpYTjFiSFI5S1Z3aVhHNGdJQ0FnUUdWc2MyVWdhV1lnSkc5d1pYSmhkRzl5SUQwOUlGd2lQRDFjSWx4dUlDQWdJQ0FnSkdWc1pXMWxiblE2SUZ3aUtHMWhlQzEzYVdSMGFEb2dJM3NrY21WemRXeDBmU2xjSWx4dUlDQWdJRUJsYkhObFhHNGdJQ0FnSUNCQWQyRnliaUJjSWlON0pHVjRjSEpsYzNOcGIyNTlJR2x6SUcxcGMzTnBibWNnWVc0Z2IzQmxjbUYwYjNJdVhDSmNiaUFnUUdWc2MyVmNiaUFnSUNBa1pXeGxiV1Z1ZERvZ0pISmxjM1ZzZEZ4dUlDQkFjbVYwZFhKdUlDUmxiR1Z0Wlc1MFhHNWNiaTh2WEc0Z0lGSmxjR3hoWTJWeklIUm9aU0JtYVhKemRDQnZZMk4xY21WdVkyVWdiMllnZEdobElITjBjbWx1WnlCM2FYUm9JSFJvWlNCeVpYQnNZV05sYldWdWRDQnpkSEpwYm1kY2JseHVJQ0JBWVhWMGFHOXlJRVZrZFdGeVpHOGdRbTkxWTJGelhHNWNiaUFnUUhCaGNtRnRJSHRUZEhKcGJtZDlJQ0FnSkhObFlYSmphQ0FnTFNCVWFHVWdkbUZzZFdVZ1ltVnBibWNnYzJWaGNtTm9aV1FnWm05eVhHNGdJRUJ3WVhKaGJTQjdVM1J5YVc1bmZTQWdJQ1J5WlhCc1lXTmxJQ0F0SUZSb1pTQnlaWEJzWVdObGJXVnVkQ0J6ZEhKcGJtZGNiaUFnUUhCaGNtRnRJSHRUZEhKcGJtZDlJQ0FnSkhOMVltcGxZM1FnSUMwZ1ZHaGxJSE4wY21sdVp5QmlaV2x1WnlCeVpYQnNZV05sWkNCdmJseHVYRzRnSUVCeVpYUjFjbTRnZTFOMGNtbHVaeUI4SUU1MWJHeDlYRzVjYmx4dVFHWjFibU4wYVc5dUlITjBjaTF5WlhCc1lXTmxMV1pwY25OMEtDUnpaV0Z5WTJnc0lDUnlaWEJzWVdObExDQWtjM1ZpYW1WamRDbGNiaUFnSkhObFlYSmphQzF6ZEdGeWREb2djM1J5TFdsdVpHVjRLQ1J6ZFdKcVpXTjBMQ0FrYzJWaGNtTm9LVnh1SUNCQWFXWWdKSE5sWVhKamFDMXpkR0Z5ZENBOVBTQnVkV3hzWEc0Z0lDQWdRSEpsZEhWeWJpQWtjM1ZpYW1WamRGeHVJQ0FrY21WemRXeDBPaUJ6ZEhJdGMyeHBZMlVvSkhOMVltcGxZM1FzSURBc0lDUnpaV0Z5WTJndGMzUmhjblFnTFNBeEtWeHVJQ0FrY21WemRXeDBPaUFrY21WemRXeDBJQ3NnSkhKbGNHeGhZMlZjYmlBZ0pISmxjM1ZzZERvZ0pISmxjM1ZzZENBcklITjBjaTF6YkdsalpTZ2tjM1ZpYW1WamRDd2dKSE5sWVhKamFDMXpkR0Z5ZENBcklITjBjaTFzWlc1bmRHZ29KSE5sWVhKamFDa3BYRzRnSUVCeVpYUjFjbTRnSkhKbGMzVnNkRnh1WEc0dkwxeHVJQ0JEWVhOMGN5QmhJRzUxYldKbGNpQjBieUJoSUhOMGNtbHVaMXh1WEc0Z0lFQmhkWFJvYjNJZ1NIVm5ieUJIYVhKaGRXUmxiRnh1WEc0Z0lFQndZWEpoYlNCN1UzUnlhVzVuZlNBZ0lDUnpkSEpwYm1jZ0lDMGdUblZ0WW1WeUlIUnZJR0psSUhCaGNuTmxaRnh1WEc0Z0lFQnlaWFIxY200Z2UweHBjM1FnZkNCT2RXeHNmVnh1WEc1QVpuVnVZM1JwYjI0Z2RHOHRiblZ0WW1WeUtDUnpkSEpwYm1jcFhHNGdJQzh2SUUxaGRISnBZMlZ6WEc0Z0lDUnpkSEpwYm1kek9pQmNJakJjSWlCY0lqRmNJaUJjSWpKY0lpQmNJak5jSWlCY0lqUmNJaUJjSWpWY0lpQmNJalpjSWlCY0lqZGNJaUJjSWpoY0lpQmNJamxjSWx4dUlDQWtiblZ0WW1WeWN6b2dNQ0F4SURJZ015QTBJRFVnTmlBM0lEZ2dPVnh1SUNBdkx5QlNaWE4xYkhSY2JpQWdKSEpsYzNWc2REb2dNRnh1SUNBa1pHbDJhV1JsY2pvZ01GeHVJQ0FrYldsdWRYTTZJR1poYkhObFhHNGdJQzh2SUV4dmIzQnBibWNnZEdoeWIzVm5hQ0JoYkd3Z1kyaGhjbUZqZEdWeWMxeHVJQ0JBWm05eUlDUnBJR1p5YjIwZ01TQjBhSEp2ZFdkb0lITjBjaTFzWlc1bmRHZ29KSE4wY21sdVp5bGNiaUFnSUNBa1kyaGhjbUZqZEdWeU9pQnpkSEl0YzJ4cFkyVW9KSE4wY21sdVp5d2dKR2tzSUNScEtWeHVJQ0FnSUNScGJtUmxlRG9nYVc1a1pYZ29KSE4wY21sdVozTXNJQ1JqYUdGeVlXTjBaWElwWEc0Z0lDQWdRR2xtSUNSamFHRnlZV04wWlhJZ1BUMGdYQ0l0WENKY2JpQWdJQ0FnSUNSdGFXNTFjem9nZEhKMVpWeHVJQ0FnSUVCbGJITmxJR2xtSUNSamFHRnlZV04wWlhJZ1BUMGdYQ0l1WENKY2JpQWdJQ0FnSUNSa2FYWnBaR1Z5T2lBeFhHNGdJQ0FnUUdWc2MyVmNiaUFnSUNBZ0lFQnBaaUIwZVhCbExXOW1LQ1JwYm1SbGVDa2dJVDBnWENKdWRXMWlaWEpjSWx4dUlDQWdJQ0FnSUNBa2NtVnpkV3gwT2lCcFppZ2tiV2x1ZFhNc0lDUnlaWE4xYkhRZ0tpQXRNU3dnSkhKbGMzVnNkQ2xjYmlBZ0lDQWdJQ0FnUUhKbGRIVnliaUJmYkdWdVozUm9LQ1J5WlhOMWJIUXNJSE4wY2kxemJHbGpaU2drYzNSeWFXNW5MQ0FrYVNrcFhHNGdJQ0FnSUNBa2JuVnRZbVZ5T2lCdWRHZ29KRzUxYldKbGNuTXNJQ1JwYm1SbGVDbGNiaUFnSUNBZ0lFQnBaaUFrWkdsMmFXUmxjaUE5UFNBd1hHNGdJQ0FnSUNBZ0lDUnlaWE4xYkhRNklDUnlaWE4xYkhRZ0tpQXhNRnh1SUNBZ0lDQWdRR1ZzYzJWY2JpQWdJQ0FnSUNBZ0x5OGdUVzkyWlNCMGFHVWdaR1ZqYVcxaGJDQmtiM1FnZEc4Z2RHaGxJR3hsWm5SY2JpQWdJQ0FnSUNBZ0pHUnBkbWxrWlhJNklDUmthWFpwWkdWeUlDb2dNVEJjYmlBZ0lDQWdJQ0FnSkc1MWJXSmxjam9nSkc1MWJXSmxjaUF2SUNSa2FYWnBaR1Z5WEc0Z0lDQWdJQ0FrY21WemRXeDBPaUFrY21WemRXeDBJQ3NnSkc1MWJXSmxjbHh1SUNCQWNtVjBkWEp1SUdsbUtDUnRhVzUxY3l3Z0pISmxjM1ZzZENBcUlDMHhMQ0FrY21WemRXeDBLVnh1WEc1QVpuVnVZM1JwYjI0Z1gyeGxibWQwYUNna2JuVnRZbVZ5TENBa2RXNXBkQ2xjYmlBZ0pITjBjbWx1WjNNNklGd2ljSGhjSWlCY0ltTnRYQ0lnWENKdGJWd2lJRndpSlZ3aUlGd2lZMmhjSWlCY0luQnBZMkZjSWlCY0ltbHVYQ0lnWENKbGJWd2lJRndpY21WdFhDSWdYQ0p3ZEZ3aUlGd2ljR05jSWlCY0ltVjRYQ0lnWENKMmQxd2lJRndpZG1oY0lpQmNJblp0YVc1Y0lpQmNJblp0WVhoY0lseHVJQ0FrZFc1cGRITTZJREZ3ZUNBeFkyMGdNVzF0SURFbElERmphQ0F4Y0dsallTQXhhVzRnTVdWdElERnlaVzBnTVhCMElERndZeUF4WlhnZ01YWjNJREYyYUNBeGRtMXBiaUF4ZG0xaGVGeHVJQ0FrYVc1a1pYZzZJR2x1WkdWNEtDUnpkSEpwYm1kekxDQWtkVzVwZENsY2JpQWdRR2xtSUhSNWNHVXRiMllvSkdsdVpHVjRLU0FoUFNCY0ltNTFiV0psY2x3aVhHNGdJQ0FnUUhkaGNtNGdYQ0pWYm10dWIzZHVJSFZ1YVhRZ1lDTjdKSFZ1YVhSOVlDNWNJbHh1SUNBZ0lFQnlaWFIxY200Z1ptRnNjMlZjYmlBZ1FISmxkSFZ5YmlBa2JuVnRZbVZ5SUNvZ2JuUm9LQ1IxYm1sMGN5d2dKR2x1WkdWNEtWeHVJaXdpTHk4Z2FIUjBjRG92TDJOemMyMXZhbTh1WTI5dEwyeGhkR1Z6ZEY5dVpYZGZZMnhsWVhKbWFYaGZjMjlmWm1GeUwxeHVMbU5zWldGeVptbDRPbUZtZEdWeVhHNGdJR052Ym5SbGJuUTZYQ0pjSWx4dUlDQmthWE53YkdGNU9uUmhZbXhsWEc0Z0lHTnNaV0Z5T21KdmRHaGNiaUlzSWk4dklGUm9hWE1nY0dGblpTQnVaV1ZrY3lCaElHeHZkQ0J2WmlCM2IzSnJYRzVjYmk1emRISmxkR05vWEc0Z0lHSmhZMnRuY205MWJtUXRjMmw2WlRvZ1kyOTJaWEpjYmlBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dZMlZ1ZEdWeUlHTmxiblJsY2x4dUlDQmlZV05yWjNKdmRXNWtMWEpsY0dWaGREb2dibTh0Y21Wd1pXRjBYRzVjYmk1bWFYaGxaQzFwYldkY2JpQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nWTJWdWRHVnlJR05sYm5SbGNseHVJQ0JpWVdOclozSnZkVzVrTFhKbGNHVmhkRG9nYm04dGNtVndaV0YwWEc0Z0lHSmhZMnRuY205MWJtUXRZWFIwWVdOb2JXVnVkRG9nWm1sNFpXUmNiaUFnWW1GamEyZHliM1Z1WkMxemFYcGxPaUJqYjNabGNseHVYRzRnSUM4dksyMWxaR2xoS0dsd2FHOXVaU2xjYmlBZ0syMWxaR2xoS0Z3aVBqMHpOVEJ3ZUZ3aUxDQmNJangwWVdKc1pYUmNJaXdnWENKeVpYUnBibUV6ZUZ3aUtWeHVJQ0FnSUdKaFkydG5jbTkxYm1RdFlYUjBZV05vYldWdWREb2djMk55YjJ4c1hHNWNiaUFnSzIxbFpHbGhLRndpUG5SaFlteGxkRndpS1Z4dUlDQWdJR0poWTJ0bmNtOTFibVF0WVhSMFlXTm9iV1Z1ZERvZ2MyTnliMnhzWEc1Y2JpQWdMeXBjYmlBZ0lDb2dJRzFwYmkxM2FXUjBhRG94TURJMGNIZzdYRzRnSUNBcUlDQnRhVzR0YUdWcFoyaDBPamMyT0hCNE8xeHVYRzR2THlCRWNtOXdJRk5vWVdSdmR5QlRkSGxzWlhOY2JseHVMeThnVUU5TVFWSlBTVVFnWldabVpXTjBJR0o1SUZwMWNtSmNibHh1THk4Z1VrVlRVRTlPVTBsV1JTQkpUVUZIUlZOY2JseHVhVzFuTENCcFpuSmhiV1VzSUdWdFltVmtYRzRnSUcxaGVDMTNhV1IwYURvZ01UQXdKVnh1WEc0dkwyaGxhV2RvZERvZ1lYVjBienRjYmx4dUxtMWhhMlV0WjJGc2JHVnllU0JrYVhaY2JpQWdabXh2WVhRNklHeGxablJjYmlBZ2JHbHpkQzF6ZEhsc1pUb2dibTl1WlZ4dVhHNHVjM0YxWVhKbExUUWdaR2wyWEc0Z0lIZHBaSFJvT2lBeU5TVmNiaUFnYUdWcFoyaDBPaUF3WEc0Z0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBeU5TVmNibHh1TG5OeGRXRnlaUzB6SUdScGRseHVJQ0IzYVdSMGFEb2dNek11TXpNek15VmNiaUFnYUdWcFoyaDBPaUF3WEc0Z0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBek15NHpNek16SlZ4dVhHNHVjM0YxWVhKbExUSWdaR2wyWEc0Z0lIZHBaSFJvT2lBMU1DVmNiaUFnYUdWcFoyaDBPaUF3WEc0Z0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBMU1DVmNiaUlzSWk1amIyNTBZV2x1WlhKY2JpQWdMeTlpWVdOclozSnZkVzVrT2lBa2QyaHBkR1U3WEc0Z0lIQmhaR1JwYm1jdGRHOXdPaUEyY21WdFhHNWNiaUFnSzIxbFpHbGhLRndpUEhSaFlteGxkRndpS1Z4dUlDQWdJSEJoWkdScGJtY3RkRzl3T2lBMGNtVnRYRzRpTENJdVptOXZkR1Z5WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUmphR0Z5WTI5aGJGeHVJQ0J3WVdSa2FXNW5PaUF6Y21WdElEQmNiaUFnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5WEc0Z0lDOHZJRzl3WVdOcGRIazZJQzQzTzF4dUlDQXZMeUIwY21GdWMybDBhVzl1T2lCaGJHd2dMalJ6TzF4dUlDQW1YMTkwWlhoMFhHNGdJQ0FnWTI5c2IzSTZJQ1JoY21Ob1ozSmhlVnh1SUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNseHVJQ0JoWEc0Z0lDQWdZMjlzYjNJNklDUnpkR3h2ZFdsellteDFaWE5jYmlBZ0lDQW1PbWh2ZG1WeVhHNGdJQ0FnSUNCamIyeHZjam9nSkdOaGNtUnBibUZzY21Wa1hHNWNiaThxSUdadmIzUmxjanBvYjNabGNpQjdYRzRnS2lBZ2IzQmhZMmwwZVRvZ01UdGNiaUFxZlZ4dVhHNHVkSGRwZEhSbGNpMXphR0Z5WlMxaWRYUjBiMjVjYmlBZ2RtVnlkR2xqWVd3dFlXeHBaMjQ2SUMweE5TVmNiaUFnYldGeVoybHVMWEpwWjJoME9pQXRNalZ3ZUNBaGFXMXdiM0owWVc1MFhHNWNiaTVzYjJkdlhHNGdJR0p2Y21SbGNpMWliM1IwYjIwNklHNXZibVVnSVdsdGNHOXlkR0Z1ZEZ4dUlDQnZjR0ZqYVhSNU9pQXVNbHh1SUNCd1lXUmthVzVuT2lBeE5YQjRYRzRnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amExeHVJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dMalJ6WEc1Y2JpNXNiMmR2T21odmRtVnlYRzRnSUc5d1lXTnBkSGs2SURGY2JseHVMbk52WTJsaGJDMXBZMjl1YzF4dUlDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnRjYmlBZ2FHVnBaMmgwT2lBeWNtVnRYRzRnSUhkcFpIUm9PaUF5Y21WdFhHNWNibUV1WW5KaGJtUnRZWEpyTFdKdmRIUnZiVnh1SUNCamIyeHZjam9nSkdGeVkyaG5jbUY1WEc0Z0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphMXh1SUNCbWIyNTBMWE5wZW1VNklESnlaVzFjYmlBZ2JHVjBkR1Z5TFhOd1lXTnBibWM2SUMweWNIaGNiaUFnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5WEc1Y2JpQWdLMjFsWkdsaEtGd2lQajEwWVdKc1pYUmNJaXdnWENJOFBXUmxjMnQwYjNCY0lpbGNiaUFnSUNCbWIyNTBMWE5wZW1VNklERXVOWEpsYlZ4dVhHNGdJQ3R0WldScFlTaGNJangwWVdKc1pYUmNJaWxjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREZ5WlcxY2JseHVJQ0F1WVZ4dUlDQWdJR052Ykc5eU9pQWtZMkZ5WkdsdVlXeHlaV1JjYmlBZ0xuSmNiaUFnSUNCamIyeHZjam9nSkhOMGJHOTFhWE5pYkhWbGMxeHVJQ0F1ZEZ4dUlDQWdJR052Ykc5eU9pQWtaMjl2WlhsaWRYUjBaWEpjYmx4dUlDQW1PbWh2ZG1WeVhHNGdJQ0FnWTI5c2IzSTZJQ1JqYUdGeVkyOWhiRnh1SWl3aUx5OGdUR0Y0VG1GMklHWnliMjBnUVd4bGVDQkRhV05oYmx4dUlDQWdhSFIwY0RvdkwyRnNaWGhqYVdOaGJpNWpiMjB2Y0c5emRDOTBaV1ZvWVc0dGJHRjRMVzVoZG1sbllYUnBiMjR2WEc1Y2JsdGtZWFJoTFdsamIyNWRPbUpsWm05eVpWeHVJQ0F2TDJadmJuUXRabUZ0YVd4NU9pQW5jMmxqWVc1emRIVmthVzl6TFdSbGJXOG5YRzRnSUM4dklHTnZiblJsYm5RNklHRjBkSElvWkdGMFlTMXBZMjl1S1Z4dUlDQmpiMjUwWlc1ME9pQW5YRnd5TmpNd0oxeHVJQ0J6Y0dWaGF6b2dibTl1WlZ4dUlDQm1iMjUwTFhkbGFXZG9kRG9nYm05eWJXRnNYRzRnSUdadmJuUXRkbUZ5YVdGdWREb2dibTl5YldGc1hHNGdJSFJsZUhRdGRISmhibk5tYjNKdE9pQnViMjVsWEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF4WEc0Z0lDMTNaV0pyYVhRdFptOXVkQzF6Ylc5dmRHaHBibWM2SUdGdWRHbGhiR2xoYzJWa1hHNGdJQzF0YjNvdGIzTjRMV1p2Ym5RdGMyMXZiM1JvYVc1bk9pQm5jbUY1YzJOaGJHVmNiaUFnWm05dWRDMXphWHBsT2lBeExqaHlaVzFjYmlBZ2RISmhibk5wZEdsdmJqb2dZMjlzYjNJZ0xqSnpYRzVjYmk4dklIZG9aVzRnYkdGNGJtRjJYMTl0Wlc1MUlHbHpJSE5vYjNkdUxDQmtiMjRuZENCaGJHeHZkeUJ6WTNKdmJHeHBibWNnYjJZZ1kyOXVkR1Z1ZEZ4dVltOWtlUzV1YjE5elkzSnZiR3hjYmlBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmx4dUlDQm9aV2xuYUhRNklERXdNQ1ZjYmx4dUx5OGdSbWx5WldadmVDQm1hWGdnWm05eUlHOTJaWEptYkc5M09pQm9hV1JrWlc0dUlGTmpjbTlzYkNCaVlYSWdhWE1nYUdsa1pHVnVJR0Z1WkNCdGIzWmxjeUJsZG1WeWVYUm9hVzVuSUhSdklIUm9aU0J5YVdkb2RGeHVRQzF0YjNvdFpHOWpkVzFsYm5RZ2RYSnNMWEJ5WldacGVDZ3BYRzRnSUdKdlpIa3VibTlmYzJOeWIyeHNYRzRnSUNBZ0x5OXRZWEpuYVc0dGNtbG5hSFE2SURJemNIZzdYRzRnSUNBZ0xtVjRjR0Z1WkdWa1hHNGdJQ0FnSUNBdkwzQmhaR1JwYm1jdGNtbG5hSFE2SURkd2VEdGNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUTZJSEpuWW1Fb0pIZG9hWFJsTENBd0xqazFLVnh1SUNBZ0lDQWdMeThnWW1WallYVnpaU0JHUmlCdWJ5QmliSFZ5TENCeVpXUjFZMlVnWW1jZ2RISmhibk53WVhKbGJtTjVYRzVjYmx4dVlTNWljbUZ1WkcxaGNtdGNiaUFnWTI5c2IzSTZJQ1JoY21Ob1ozSmhlVnh1SUNCa2FYTndiR0Y1T2lCMFlXSnNaUzFqWld4c1hHNGdJR1p2Ym5RdGMybDZaVG9nTVM0NGNtVnRYRzRnSUd4bGRIUmxjaTF6Y0dGamFXNW5PaUF0TW5CNFhHNWNiaUFnSzIxbFpHbGhLRndpUEQxa1pYTnJkRzl3WENJcFhHNGdJQ0FnWm05dWRDMXphWHBsT2lBeExqVnlaVzFjYmx4dUlDQXJiV1ZrYVdFb1hDSThQWFJoWW14bGRGd2lLVnh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNWEpsYlZ4dVhHNGdJQ3R0WldScFlTaGNJanc5Y0dodmJtVmNJaWxjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJQzQ0TlhKbGJWeHVYRzRnSUM1aFhHNGdJQ0FnWTI5c2IzSTZJQ1JqWVhKa2FXNWhiSEpsWkZ4dUlDQXVjbHh1SUNBZ0lHTnZiRzl5T2lBa2MzUnNiM1ZwYzJKc2RXVnpYRzRnSUM1MFhHNGdJQ0FnWTI5c2IzSTZJQ1JuYjI5bGVXSjFkSFJsY2x4dVhHNGdJQ1k2YUc5MlpYSmNiaUFnSUNCamIyeHZjam9nSkdOb1lYSmpiMkZzWEc1Y2JseHVMblJoWjJ4cGJtVmNiaUFnWTI5c2IzSTZJQ1JuY21Gd2FHbDBaVnh1SUNCbWIyNTBMV1poYldsc2VUb2dKSE5oYm5NdFkyOXVaR1Z1YzJWa0xXeHBaMmgwWEc0Z0lHWnZiblF0YzJsNlpUb2dNUzR5TlhKbGJWeHVJQ0JzWlhSMFpYSXRjM0JoWTJsdVp6b2dOSEI0WEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJWY2JseHVJQ0FyYldWa2FXRW9YQ0k4UFdSbGMydDBiM0JjSWlsY2JpQWdJQ0JtYjI1MExYTnBlbVU2SURGeVpXMWNibHh1SUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVmNibHh1THk4Z2IyNGdhVzUwYVdGc0lHeHZZV1FnWm1Ga1pTQnBiaUIwYUdVZ2JXVnVkVnh1UUd0bGVXWnlZVzFsY3lCbWFYSnpkRVpoWkdWSmJrRnVaRVJ5YjNCY2JpQWdNQ1ZjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaU2d3TENBdE5UUndlQ2xjYmlBZ01UQXdKVnh1SUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxLREFzSURBcFhHNWNibHh1THk4Z1BUMDlJRlJQVUNCTlJVNVZJRXhCV1U5VlZDQTlQVDFjYmk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc1Y2JpNXNZWGh1WVhaY2JpQWdZbUZqYTJkeWIzVnVaRG9nY21kaVlTZ2tkMmhwZEdVc0lEQXVOelVwWEc0Z0lHTjFjbk52Y2pvZ2NHOXBiblJsY2x4dUlDQm9aV2xuYUhRNklEWnlaVzFjYmlBZ0x5OGdjMjFoYkd4bGNpQm9aV2xuYUhRZ1ltVmpZWFZ6WlNCbWIyNTBJR2x6SUhOdFlXeHNaWEpjYmlBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmx4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnY21sbmFIUTZJREJjYmlBZ2RHOXdPaUF3WEc0Z0lIZHBaSFJvT2lBeE1EQWxYRzRnSUM4dmNHRmtaR2x1WnkxMGIzQTZJRGh3ZUR0Y2JpQWdlaTFwYm1SbGVEb2dNVEF3TUZ4dUlDQXJZbTk0TFhOb1lXUnZkeTFpYjNSMGIyMWNiaUFnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdVb01Dd2dNQ2xjYmlBZ2RISmhibk5wZEdsdmJqb2dkSEpoYm5ObWIzSnRJQzR5Y3l3Z2FHVnBaMmgwSUM0eWN5d2dZbUZqYTJkeWIzVnVaQ0F1TW5OY2JpQWdZVzVwYldGMGFXOXVPaUJtYVhKemRFWmhaR1ZKYmtGdVpFUnliM0FnTGpKelhHNWNiaUFnSzIxbFpHbGhLRndpUEhSaFlteGxkRndpS1Z4dUlDQWdJR2hsYVdkb2REb2dOSEpsYlZ4dVhHNGdJQzh2SUc5dUlHeGhlRzVoZGw5ZmJXVnVkU0JvYjNabGNpQmhaR1FnYzJ4cFoyaDBJSGRvYVhSbElHSm5YRzRnSUNZNmFHOTJaWEpjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUJ5WjJKaEtDUjNhR2wwWlN3Z01TbGNibHh1SUNBdkx5QnNhVzFwZEhNZ2QybGtkR2dnYjJZZ2JXVnVkU0IwYnlCemFYUmxJSGRwWkhSb1hHNGdJQ1pmWDJKaGNseHVJQ0FnSUM4dmJXRjRMWGRwWkhSb09pQTNOU1U3WEc0Z0lDQWdMeTl0WVhKbmFXNDZJREFnWVhWMGJ6dGNiaUFnSUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRYRzRnSUNBZ1pHbHpjR3hoZVRvZ2RHRmliR1ZjYmlBZ0lDQndZV1JrYVc1bk9pQXljbVZ0WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1ZjYmx4dUlDQWdJQ3R0WldScFlTaGNJangwWVdKc1pYUmNJaWxjYmlBZ0lDQWdJSEJoWkdScGJtYzZJREFnTVhKbGJWeHVYRzRnSUNBZ0x5OGdibUZ0WlNCdlppQnphWFJsSUdsdUlHMWhhVzRnYldWdWRTQW9ibTkwSUhWelpYSWdjMlZzWldOMFlXSnNaU2xjYmlBZ0lDQStJR0ZjYmlBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtYRzRnSUNBZ0lDQjFjMlZ5TFhObGJHVmpkRG9nYm05dVpWeHVYRzRnSUM4dklIZG9aVzRnYUdsa1pHVnVJR2wwSUdkdlpYTWdkWEJjYmlBZ0ppNXBiblpwYzJsaWJHVmNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpTZ3dMQ0F0TmpSd2VDbGNiaUFnSUNCMGNtRnVjMmwwYVc5dU9pQjBjbUZ1YzJadmNtMGdMakp6WEc0Z0lDQWdiM0JoWTJsMGVUb2dNRnh1WEc0Z0lDOHZJSGRvWlc0Z2MyaHZkMjRnSmlCa1pYUmhZMmhsWkNCd2IzTnBkR2x2YmlCcGN5Qm1hWGhsWkZ4dUlDQW1MbVJsZEdGamFHVmtYRzRnSUNBZ2NHOXphWFJwYjI0NklHWnBlR1ZrWEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nY21kaVlTZ2tkMmhwZEdVc0lEQXVPU2xjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUIwY21GdWMyWnZjbTBnTGpKekxDQm9aV2xuYUhRZ0xqSnpMQ0JpWVdOclozSnZkVzVrSUM0eWN5d2diM0JoWTJsMGVTQXVNbk5jYmx4dUlDQXZMeUE5UFQwZ1RVVk9WU0JzWVhodVlYWmZYMjFsYm5VZ1BUMDlYRzRnSUM4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JpQWdMeThnYVc1amNtVmhjMlZ6SUcxbGJuVWdkMmxrZEdnZ0ppQm9aV2xuYUhSY2JpQWdKaTVsZUhCaGJtUmxaRnh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxYRzRnSUNBZ2FHVnBaMmgwT2lBeE1EQWxYRzRnSUNBZ2NHOXphWFJwYjI0NklHWnBlR1ZrWEc0Z0lDQWdZM1Z5YzI5eU9pQmtaV1poZFd4MFhHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ2NtZGlZU2drZDJocGRHVXNJQzQ1S1Z4dUlDQWdJRzkyWlhKbWJHOTNMWGs2SUhOamNtOXNiRnh1WEc0Z0lDQWdMeThnYzJodmQzTWdiR0Y0Ym1GMlgxOXRaVzUxWEc0Z0lDQWdJMnhoZUc1aGRsOWZiV1Z1ZFZ4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdVb01Dd2dNQ2xjYmlBZ0lDQWdJRzl3WVdOcGRIazZJREZjYmx4dUlDQXZMeUJ3YjNOcGRHbHZibk1nYkdGNGJtRjJYMTl0Wlc1MUlHTnZiblJsYm5SY2JpQWdKbDlmYldWdWRWeHVJQ0FnSUc5d1lXTnBkSGs2SURCY2JpQWdJQ0IzYVdSMGFEb2dOakFsWEc0Z0lDQWdiV0Z5WjJsdU9pQXdJR0YxZEc5Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlNnd0xDQXRNVEF3TUhCNEtWeHVJQ0FnSUhSeVlXNXphWFJwYjI0NklIUnlZVzV6Wm05eWJTQXVNVFZ6TENCdmNHRmphWFI1SUM0eWMxeHVYRzRnSUNBZ0syMWxaR2xoS0Z3aVBHUmxjMnQwYjNCY0lpbGNiaUFnSUNBZ0lIZHBaSFJvT2lBNE1DVmNibHh1SUNBZ0lDdHRaV1JwWVNoY0lqdzljR2h2Ym1WY0lpbGNiaUFnSUNBZ0lIZHBaSFJvT2lBeE1EQWxYRzVjYmlBZ0x5OGdQVDA5SUUxRlRsVWdiR0Y0Ym1GMlgxOXRaVzUxSUVOUFRsUkZUbFFnUFQwOVhHNGdJQzh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1SUNBdkx5QmhaR1J6SUhabGNuUnBZMkZzSUhOd1lXTnBibWNnWW1WMGQyVmxiaUJ0Wlc1MUlHeHBibXR6WEc0Z0lDWmZYMjFsYm5VdGJHbHpkQzFwZEdWdFhHNGdJQ0FnYkdsemRDMXpkSGxzWlMxMGVYQmxPaUJ1YjI1bFhHNGdJQ0FnSzJKdmVDMXphR0ZrYjNjdFltOTBkRzl0WEc1Y2JpQWdKbDlmYldWdWRTMXNhWE4wTFdGdVkyaHZjbHh1SUNBZ0lHTnZiRzl5T2lBa2MzUnNiM1ZwYzJKc2RXVnpYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREV1TlhKbGJWeHVJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQWtjMkZ1Y3kxamIyNWtaVzV6WldRdFltOXNaRnh1SUNBZ0lIQmhaR1JwYm1jNklEQXVNV1Z0SURBdU5YSmxiVnh1SUNBZ0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJWY2JseHVJQ0FnSUN0dFpXUnBZU2hjSWp3OWNHaHZibVZjSWlsY2JpQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ0xqZzFjbVZ0WEc1Y2JpQWdJQ0FtT21odmRtVnlYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUFrWTJGeVpHbHVZV3h5WldSY2JpQWdJQ0FnSUdOdmJHOXlPaUFrZDJocGRHVmNibHh1SUNBbVgxOXNhVzVyTFhSbGVIUmNiaUFnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkydGNiaUFnSUNCM2FXUjBhRG9nTWpBd2NIaGNibHh1SUNBbVgxOXNhVzVyTFhSbFlYTmxjbHh1SUNBZ0lHTnZiRzl5T2lBa1kyaGhjbU52WVd4Y2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0pITmhibk10WTI5dVpHVnVjMlZrTFd4cFoyaDBYRzVjYmlBZ0lDQXJiV1ZrYVdFb1hDSThQWFJoWW14bGRGd2lLVnh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dibTl1WlZ4dVhHNHZMeUE5UFQwZ1RVVk9WU0JKUTA5T1V5QTlQVDFjYmk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVYRzR2THlCaFpHUnpJSEJoWkdScGJtY2dkRzhnYVdOdmJuTmNiaTVwWTI5dUxXSjBibHh1SUNBdkx5QndZV1JrYVc1bk9pQXlKU0F6SlZ4dUlDQXZMeUJ0WVhKbmFXNDZJQzB5SlNBdE15VmNiaUFnTHk4Z1kyVnVkR1Z5SUdsamIyNGdhVzRnZG1WeWRHbGpZV3dnYldsa1pHeGxJRzltSUhSdmNDQnRaVzUxWEc0Z0lHTjFjbk52Y2pvZ2NHOXBiblJsY2x4dUlDQmthWE53YkdGNU9pQjBZV0pzWlMxalpXeHNYRzRnSUhSbGVIUXRZV3hwWjI0NklISnBaMmgwWEc0Z0lIVnpaWEl0YzJWc1pXTjBPaUJ1YjI1bFhHNWNiaUFnTHk4Z2FHbGtaWE1nWlhoMGNtRWdkR1Y0ZENCdlppQnBZMjl1SUNoaFkyTmxjM05wWW1sc2FYUjVLVnh1SUNCemNHRnVYRzRnSUNBZ0x5OWthWE53YkdGNU9pQnViMjVsTzF4dUlDQWdJR052Ykc5eU9pQWtjM1JzYjNWcGMySnNkV1Z6WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNSellXNXpMV052Ym1SbGJuTmxaQzFzYVdkb2RGeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01YSmxiVnh1SUNBZ0lHeGxkSFJsY2kxemNHRmphVzVuT2lBMGNIaGNiaUFnSUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sWEc1Y2JpQWdJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJQ0FnWkdsemNHeGhlVG9nYm05dVpWeHVYRzRnSUM4dklHOXVJR1p2WTNWekxDQmtiMjRuZENCemFHOTNJRzkxZEd4cGJtVmNiaUFnSmpwbWIyTjFjMXh1SUNBZ0lHOTFkR3hwYm1VNklHNXZibVZjYmx4dUlDQXZMeUJwWTI5dUlHTnZiRzkxY2x4dUlDQW1PbUpsWm05eVpTeGNiaUFnSmpwaFkzUnBkbVU2WW1WbWIzSmxYRzRnSUNBZ1kyOXNiM0k2SUNSMFpYaDBMV3hwYm1zdFkyOXNiM0pjYmx4dUlDQXZMeUJqYUdGdVoyVnpJR052Ykc5MWNpQnZiaUJvYjNabGNpQnZjaUJyWlhsaWIyRnlaQ0JtYjJOMWMxeHVJQ0FtT21odmRtVnlPbUpsWm05eVpTeGNiaUFnSmpwbWIyTjFjenBpWldadmNtVmNiaUFnSUNCamIyeHZjam9nSkhSbGVIUXRiR2x1YXkxamIyeHZjaTFvYjNabGNseHVYRzR2THlCamFHRnVaMlZ6SUdsamIyNGdkRzhnWVc0Z1dGeHVMbVY0Y0dGdVpHVmtJQzVwWTI5dUxXSjBianBpWldadmNtVmNiaUFnTHk5amIyNTBaVzUwT2lBbmVDZGNiaUFnWTI5dWRHVnVkRG9nSjF4Y01EQXlOekUxSjF4dUlDQm1iMjUwTFhOcGVtVTZJREp5WlcxY2JpQWdabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUmNiaUFnTHk5c2FXNWxMV2hsYVdkb2REb2dNUzQwY21WdFhHNGdJSEJoWkdScGJtY3RjbWxuYUhRNklDNHhOWEpsYlZ4dVhHNHZMeUE5UFQwZ1EwOU9WRVZPVkNCQ1RGVlNVa2xPUnlBOVBUMWNiaTh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1WEc0dkx5QmhaR1J6SUhSeVlXNXphWFJwYjI0Z2RHOGdkR2hsSUdOdmJuUmxiblJjYmk1amIyNTBaVzUwTFhSeVlXNXphWFJwYjI1Y2JpQWdkSEpoYm5OcGRHbHZiam9nZEhKaGJuTm1iM0p0SUM0eWN5d2dabWxzZEdWeUlDNHljMXh1WEc0dkx5QmliSFZ5Y21sdVp5QmpiMjUwWlc1MFhHNHVZbXgxY25KbFpGeHVJQ0F2TDNSeVlXNXpabTl5YlRvZ2MyTmhiR1VvTUM0NU9TbGNiaUFnTHk5bWFXeDBaWEk2SUdKc2RYSW9NbkI0S1Z4dUlDQXZMM1J5WVc1emFYUnBiMjQ2SUhSeVlXNXpabTl5YlNBdU1uTmNiaUlzSWk4dklGQnNZV05sSUVodmJHUmxjbk5jYmoxaWIzZ3RjMmhoWkc5M0xXSnZkSFJ2YlZ4dUlDQmliM2d0YzJoaFpHOTNPaUF3SURGd2VDQXdJQ1JuY21Gd2FHbDBaVnh1SWl3aUxtbHRaMEpoYm01bGNseHVJQ0JpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1T2lCalpXNTBaWElnWTJWdWRHVnlYRzRnSUdKaFkydG5jbTkxYm1RdGNtVndaV0YwT2lCdWJ5MXlaWEJsWVhSY2JpQWdZbUZqYTJkeWIzVnVaQzFoZEhSaFkyaHRaVzUwT2lCbWFYaGxaRnh1SUNCaVlXTnJaM0p2ZFc1a0xYTnBlbVU2SUdOdmRtVnlYRzRnSUdadmJuUXRabUZ0YVd4NU9pQWtjMkZ1Y3kxamIyNWtaVzV6WldRdGJHbG5hSFJjYmlBZ0x5OW1iMjUwTFdaaGJXbHNlVG9nSkhOaGJuTXRZMjl1WkdWdWMyVmtMV0p2YkdRN1hHNGdJSGRwWkhSb09pQXhNREFsWEc0Z0lHaGxhV2RvZERvZ01UQXdKVnh1SUNCd1lXUmthVzVuT2lBeE1uSmxiU0F3WEc0Z0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpWeHVJQ0I2TFdsdVpHVjRPaUF3WEc1Y2JpQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV0YwZEdGamFHMWxiblE2SUhOamNtOXNiRnh1SUNBZ0lIQmhaR1JwYm1jNklETnlaVzBnTUZ4dVhHNGdJQ1k2T21KbFptOXlaVnh1SUNBZ0lHTnZiblJsYm5RNklGd2lJRndpWEc0Z0lDQWdMeTlpWVdOclozSnZkVzVrT2lCeVoySmhLQ0FrWTJoaGNtTnZZV3dzSURBdU5TQXBPMXh1SUNBZ0lHaGxhV2RvZERvZ01UQXdKVnh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnRjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnSUNCaWIzUjBiMjA2SURCY2JpQWdJQ0JzWldaME9pQXdYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dMWGRsWW10cGRDMXNhVzVsWVhJdFozSmhaR2xsYm5Rb2RHOXdMQ0J5WjJKaEtESTFOU3dnTWpVMUxDQXlOVFVzSURBcElEQWxMQ0J5WjJKaEtEQXNJREFzSURBc0lEQXBJREVsTENCeVoySmhLREFzSURBc0lEQXNJREF1TURVcElESTJKU3dnY21kaVlTZ3dMQ0F3TENBd0xDQXdMalVwSURjeEpTd2djbWRpWVNnd0xDQXdMQ0F3TENBd0xqY3BJREV3TUNVcFhHNWNiaUFnSmw5ZlkyOXVkR0ZwYm1WeVhHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ2RISmhibk53WVhKbGJuUmNiaUFnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1WY2JpQWdJQ0I2TFdsdVpHVjRPaUExWEc0Z0lDQWdMeTkwYjNBNklEVTBKVHRjYmx4dUlDQW1YMTlvWldGa2FXNW5YRzRnSUNBZ2RHVjRkQzF6YUdGa2IzYzZJRE53ZUNBemNIZ2dNQ0J5WjJKaEtDUmphR0Z5WTI5aGJDd2dMalVwWEc0Z0lDQWdZMjlzYjNJNklDUjNhR2wwWlZ4dUlDQWdJR1p2Ym5RdGMybDZaVG9nT0hKbGJWeHVJQ0FnSUcxaGNtZHBiam9nTUZ4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjbHh1SUNBZ0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJWY2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlNnd0xDQXdLVnh1SUNBZ0lIUnlZVzV6YVhScGIyNDZJSFJ5WVc1elptOXliU0F1TkhNc0lHaGxhV2RvZENBdU0zTXNJR0poWTJ0bmNtOTFibVFnTGpSelhHNGdJQ0FnWVc1cGJXRjBhVzl1T2lCbWFYSnpkRVpoWkdWSmJrRnVaRVJ5YjNBZ0xqVnpYRzVjYmlBZ0lDQXJiV1ZrYVdFb1hDSStQWFJoWW14bGRGd2lMQ0JjSWp3OVpHVnphM1J2Y0Z3aUtWeHVJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQTFjbVZ0WEc0Z0lDQWdJQ0J0WVhKbmFXNDZJREJjYmx4dUlDQWdJQ3R0WldScFlTaGNJangwWVdKc1pYUmNJaWxjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTTNKbGJWeHVJQ0FnSUNBZ2JXRnlaMmx1T2lBd1hHNWNiaUFnSmw5ZmRHVjRkRnh1SUNBZ0lHTnZiRzl5T2lBa2QyaHBkR1ZjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJRFp5WlcxY2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0pHTjFjbk5wZG1WY2JpQWdJQ0J0WVhKbmFXNDZJREJjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSmNiaUlzSWk1dFlXbHVRMjl1ZEdWdWRGeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFrZDJocGRHVmNiaUFnY0dGa1pHbHVaem9nTUNBd0lETnlaVzBnTUZ4dVhHNGdJQ1pmWDJOdmJuUmhhVzVsY2x4dUlDQWdJSGRwWkhSb09pQTJOU1ZjYmlBZ0lDQnRZWEpuYVc0NklEQWdZWFYwYjF4dVhHNGdJQ0FnSzIxbFpHbGhLRndpUEhSaFlteGxkRndpS1Z4dUlDQWdJQ0FnZDJsa2RHZzZJREV3TUNWY2JseHVJQ0FtWDE5b1pXRmthVzVuWEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNSellXNXpMV052Ym1SbGJuTmxaQzFzYVdkb2RGeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ00zSmxiVnh1SUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4WEc0Z0lDQWdiV0Z5WjJsdU9pQXdYRzRnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJRFZ5WlcxY2JpQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVZjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSmNiaUFnSUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sWEc1Y2JpQWdJQ0FtT2pwaFpuUmxjbHh1SUNBZ0lDQWdZbTk0TFhOb1lXUnZkem9nTVhCNElERndlQ0F3SUNSamFHRnlZMjloYkZ4dUlDQWdJQ0FnWTI5dWRHVnVkRG9nWENKY0lseHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnRjYmlBZ0lDQWdJR2hsYVdkb2REb2dNWEI0WEc0Z0lDQWdJQ0IzYVdSMGFEb2dNVFZ5WlcxY2JpQWdJQ0FnSUcxaGNtZHBiam9nTGpjMWNtVnRJR0YxZEc5Y2JseHVJQ0FnSUNBZ0syMWxaR2xoS0Z3aVBEMTBZV0pzWlhSY0lpbGNiaUFnSUNBZ0lDQWdkMmxrZEdnNklERXdNQ1ZjYmx4dUlDQW1YMTl6ZFdKSVpXRmthVzVuWEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNSellXNXpMV052Ym1SbGJuTmxaQzFzYVdkb2RGeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01uSmxiVnh1SUNBZ0lDOHZabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUTdYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREZjYmlBZ0lDQnRZWEpuYVc0NklEQmNiaUFnSUNCd1lXUmthVzVuT2lBemNtVnRJREFnTVM0MWNtVnRJREJjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSmNibHh1SUNBbVgxOWtZWFJsWEc0Z0lDQWdZMjlzYjNJNklDUm5jbUZ3YUdsMFpWeHVJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQWtjMkZ1Y3kxamIyNWtaVzV6WldRdGJHbG5hSFJjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREp5WlcxY2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEpjYmx4dUlDQW1YMTl0WkZ4dUlDQWdJR052Ykc5eU9pQWtZMmhoY21OdllXeGNiaUFnSUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nTTNKbGJWeHVYRzRnSUNBZ2FERXNJR2d5TENCb015d2dhRFFzSUdnMUxDQm9ObHh1SUNBZ0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNSellXNXpMV052Ym1SbGJuTmxaQzFpYjJ4a1hHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklESnlaVzFjYmlBZ0lDQWdJQzh2Wm05dWRDMTNaV2xuYUhRNklHSnZiR1E3WEc0Z0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01WeHVJQ0FnSUNBZ2JXRnlaMmx1T2lBd1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lBemNtVnRJREFnTVM0MWNtVnRJREJjYmlBZ0lDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjbHh1WEc0Z0lDQWdhV1p5WVcxbFhHNGdJQ0FnSUNCdFlYSm5hVzQ2SUROeVpXMGdNRnh1SWl3aUxtMWxaMkZUZEdGMFpXMWxiblJjYmlBZ1ltRmphMmR5YjNWdVpEb2dKSGRvYVhSbFhHNGdJR1p2Ym5RdFptRnRhV3g1T2lBa2MyRnVjeTFqYjI1a1pXNXpaV1F0YkdsbmFIUmNiaUFnZDJsa2RHZzZJREV3TUNWY2JpQWdhR1ZwWjJoME9pQXhNREFsWEc0Z0lIQmhaR1JwYm1jNklETnlaVzFjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabFhHNGdJSG90YVc1a1pYZzZJREJjYmx4dUlDQW1YMTkwWlhoMFFtOTRYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dkSEpoYm5Od1lYSmxiblJjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVmNiaUFnSUNCNkxXbHVaR1Y0T2lBMVhHNWNiaUFnSmw5ZmFHVmhaR2x1WjF4dUlDQWdJR052Ykc5eU9pQWtZWEpqYUdkeVlYbGNiaUFnSUNCbWIyNTBMWE5wZW1VNklEWnlaVzFjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSmNiaUFnSUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sWEc0Z0lDQWdLM1I1Y0dVdGJXRnlaMmx1S0RJc0lESXBYRzVjYmlBZ0lDQXJiV1ZrYVdFb1hDSStQWFJoWW14bGRGd2lMQ0JjSWp3OVpHVnphM1J2Y0Z3aUtWeHVJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQTBjbVZ0WEc0Z0lDQWdJQ0FyZEhsd1pTMXRZWEpuYVc0b0xqVXNMalVwWEc1Y2JpQWdJQ0FyYldWa2FXRW9YQ0krUFhCb2IyNWxYQ0lzSUZ3aVBEMTBZV0pzWlhSY0lpbGNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dNbkpsYlZ4dUlDQWdJQ0FnSzNSNWNHVXRiV0Z5WjJsdUtDNDFMQzQxS1Z4dVhHNGdJQ1pmWDJOdmJuUmxiblJjYmlBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsWEc0Z0lDQWdabTl1ZEMxemFYcGxPaUEyY21WdFhHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDUmpkWEp6YVhabFhHNGdJQ0FnYldGeVoybHVPaUF3WEc0Z0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklEVnlaVzFjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSmNiaUlzSWk1dFpXZGhRMVJCWEc0Z0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJR05sYm5SbGNpQmpaVzUwWlhKY2JpQWdZbUZqYTJkeWIzVnVaQzF5WlhCbFlYUTZJRzV2TFhKbGNHVmhkRnh1SUNCaVlXTnJaM0p2ZFc1a0xXRjBkR0ZqYUcxbGJuUTZJR1pwZUdWa1hHNGdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dZMjkyWlhKY2JpQWdabTl1ZEMxbVlXMXBiSGs2SUNSellXNXpMV052Ym1SbGJuTmxaQzFzYVdkb2RGeHVJQ0F2TDJadmJuUXRabUZ0YVd4NU9pQWtjMkZ1Y3kxamIyNWtaVzV6WldRdFltOXNaRHRjYmlBZ2QybGtkR2c2SURFd01DVmNiaUFnYUdWcFoyaDBPaUF4TURBbFhHNGdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVnh1SUNCNkxXbHVaR1Y0T2lBd1hHNWNiaUFnSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JpQWdJQ0JpWVdOclozSnZkVzVrTFdGMGRHRmphRzFsYm5RNklITmpjbTlzYkZ4dVhHNGdJQ1k2T21KbFptOXlaVnh1SUNBZ0lHTnZiblJsYm5RNklGd2lJRndpWEc0Z0lDQWdMeTlpWVdOclozSnZkVzVrT2lCeVoySmhLQ0FrWTJoaGNtTnZZV3dzSURBdU5TQXBPMXh1SUNBZ0lHaGxhV2RvZERvZ01UQXdKVnh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnRjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnSUNCaWIzUjBiMjA2SURCY2JpQWdJQ0JzWldaME9pQXdYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dMWGRsWW10cGRDMXNhVzVsWVhJdFozSmhaR2xsYm5Rb2RHOXdMQ0J5WjJKaEtESTFOU3dnTWpVMUxDQXlOVFVzSURBcElEQWxMQ0J5WjJKaEtEQXNJREFzSURBc0lEQXBJREVsTENCeVoySmhLREFzSURBc0lEQXNJREF1TURVcElESTJKU3dnY21kaVlTZ3dMQ0F3TENBd0xDQXdMalVwSURjeEpTd2djbWRpWVNnd0xDQXdMQ0F3TENBd0xqY3BJREV3TUNVcFhHNWNiaUFnSmw5ZlkyOXVkR0ZwYm1WeVhHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ2RISmhibk53WVhKbGJuUmNiaUFnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1WY2JpQWdJQ0I2TFdsdVpHVjRPaUExWEc0Z0lDQWdLMkpzYjJOckxYQmhaR1JwYm1jb09Dd2dPQ2xjYmx4dUlDQWdJQ3R0WldScFlTaGNJanc5ZEdGaWJHVjBYQ0lwWEc0Z0lDQWdJQ0FyWW14dlkyc3RjR0ZrWkdsdVp5ZzBMQ0EwS1Z4dVhHNGdJQ1pmWDJobFlXUnBibWRjYmlBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsWEc0Z0lDQWdabTl1ZEMxemFYcGxPaUE0Y21WdFhHNGdJQ0FnYldGeVoybHVPaUF3WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlYRzRnSUNBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUhWd2NHVnlZMkZ6WlZ4dVhHNGdJQ0FnSzIxbFpHbGhLRndpUEQxMFlXSnNaWFJjSWlsY2JpQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ05YSmxiVnh1SUNBZ0lDQWdiV0Z5WjJsdU9pQXdYRzVjYmlBZ0lDQXJiV1ZrYVdFb1hDSThkR0ZpYkdWMFhDSXBYRzRnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREp5WlcxY2JpQWdJQ0FnSUcxaGNtZHBiam9nTUZ4dVhHNGdJQ1pmWDNSbGVIUmNiaUFnSUNCamIyeHZjam9nSkhkb2FYUmxYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQTJjbVZ0WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNSamRYSnphWFpsWEc0Z0lDQWdiV0Z5WjJsdU9pQXdYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeVhHNWNiaUFnSUNBcmJXVmthV0VvWENJK1BYUmhZbXhsZEZ3aUxDQmNJanc5WkdWemEzUnZjRndpS1Z4dUlDQWdJQ0FnWm05dWRDMXphWHBsT2lBMGNtVnRYRzVjYmx4dUlDQWdJQ3R0WldScFlTaGNJangwWVdKc1pYUmNJaWxjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTW5KbGJWeHVJQ0FnSUNBZ2JXRnlaMmx1T2lBd1hHNWNiaUFnSmw5ZlluVjBkRzl1WEc0Z0lDQWdLMkoxZEhSdmJpaHBibWhsY21sMEtWeHVJaXdpUFdKMWRIUnZiaWdrWm05dWRDMXphWHBsS1Z4dUlDQm1iMjUwTFhOcGVtVTZJQ1JtYjI1MExYTnBlbVZjYmlBZ2RISmhibk5wZEdsdmJqb2dZV3hzSUM0eGN5QmxZWE5sTFdsdVhHNGdJR0poWTJ0bmNtOTFibVE2SUhKblltRW9KSE4wYkc5MWFYTmliSFZsY3l3Z01DNDNOU2xjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTGpJMWNtVnRYRzRnSUdOdmJHOXlPaUFrZDJocGRHVmNiaUFnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOclhHNGdJR1p2Ym5RdFptRnRhV3g1T2lBa1kzVnljMmwyWlZ4dUlDQndZV1JrYVc1bk9pQXdJQzQxY21WdFhHNGdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjbHh1SUNCY2JpQWdKanBvYjNabGNseHVJQ0FnSUdKaFkydG5jbTkxYm1RNklISm5ZbUVvSkhkb2FYUmxMQ0F3TGprcFhHNGdJQ0FnWTI5c2IzSTZJQ1J6ZEd4dmRXbHpZbXgxWlhOY2JpSXNJaTVqYUdGeWRFSnZlRnh1SUNCaVlXTnJaM0p2ZFc1a09pQWtZMkZ5WkdsdVlXeHlaV1JjYmlBZ0x5OWliM2d0YzJoaFpHOTNPaUF4Y0hnZ01YQjRJREFnSkdOb1lYSmpiMkZzTzF4dUlDQmpiMnh2Y2pvZ2QyaHBkR1ZjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTVhCNFhHNGdJSEJoWkdScGJtYzZJRE55WlcwZ01GeHVJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEpjYmx4dUlDQW1YMTlvWldGa2FXNW5YRzRnSUNBZ0szTmxZM1JwYjI0dGFHVmhaR1Z5S0NSM2FHbDBaU3dnSkhkb2FYUmxLVnh1WEc0Z0lDWmZYM04wWVhSY2JpQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJ0Y2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0pITmhibk10WTI5dVpHVnVjMlZrTFd4cFoyaDBYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXljbVZ0WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNQ0F6Y21WdFhHNWNiaUFnSUNCemNHRnVYRzRnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJRFZ5WlcxY2JseHVJQ0FnSUNBZ0syMWxaR2xoS0Z3aVBIUmhZbXhsZEZ3aUtWeHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREp5WlcxY2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ00zSmxiU0F3SURBZ01GeHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnRjYmx4dUlDQndYRzRnSUNBZ2JXRnlaMmx1T2lBd0lHRjFkRzhnTVM0MWNtVnRYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2diR1ZtZEZ4dUlDQWdJSGRwWkhSb09pQTFNQ1ZjYmx4dUxtTm9ZWEowWEc0Z0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpWeHVJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJ0Y2JpQWdiV0Z5WjJsdU9pQXhjbVZ0WEc1Y2JpQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQnRZWEpuYVc0NklETnlaVzBnTVhKbGJTQXpjbVZ0SURGeVpXMWNibHh1SUNCallXNTJZWE5jYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNiaUFnSUNCMGIzQTZJREJjYmlBZ0lDQnNaV1owT2lBd1hHNWNiaTVqYUdGeWRGOWZjR1Z5WTJWdWRGeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ0pITmhibk10WTI5dVpHVnVjMlZrTFd4cFoyaDBYRzRnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amExeHVJQ0JtYjI1MExYTnBlbVU2SURKeVpXMWNibHh1SUNBbU9qcGhablJsY2x4dUlDQWdJR052Ym5SbGJuUTZJRndpSlZ3aVhHNGlMQ0l2THoxdFpXZGhMV2hsWVdSbGNpZ2tkR1Y0ZEVOdmJHOXlPaUFrWTJoaGNtTnZZV3dzSUNSMWJtUmxjbXhwYm1WRGIyeHZjam9nSkdOb1lYSmpiMkZzS1Z4dVhHNDljMlZqZEdsdmJpMW9aV0ZrWlhJb0pIUmxlSFJEYjJ4dmNqb2dKR05vWVhKamIyRnNMQ0FrZFc1a1pYSnNhVzVsUTI5c2IzSTZJQ1JqYUdGeVkyOWhiQ2xjYmlBZ1kyOXNiM0k2SUNSMFpYaDBRMjlzYjNKY2JpQWdabTl1ZEMxbVlXMXBiSGs2SUNSellXNXpMV052Ym1SbGJuTmxaQzFzYVdkb2RGeHVJQ0JtYjI1MExYTnBlbVU2SUROeVpXMWNiaUFnYkdsdVpTMW9aV2xuYUhRNklERmNiaUFnYldGeVoybHVPaUF3WEc0Z0lIQmhaR1JwYm1jdGRHOXdPaUExY25KbGJWeHVJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVZjYmlBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeVhHNGdJSFJsZUhRdGRISmhibk5tYjNKdE9pQjFjSEJsY21OaGMyVmNibHh1SUNBcmJXVmthV0VvWENJOGRHRmliR1YwWENJcFhHNGdJQ0FnWm05dWRDMXphWHBsT2lBeWNtVnRYRzRnSUNBZ2NHRmtaR2x1WnkxaWIzUjBiMjA2SURGeVpXMWNibHh1SUNBdkx5QW1PanBoWm5SbGNseHVJQ0F2THlBZ0lHSnZlQzF6YUdGa2IzYzZJREZ3ZUNBeGNIZ2dNQ0FrZFc1a1pYSnNhVzVsUTI5c2IzSmNiaUFnTHk4Z0lDQmpiMjUwWlc1ME9pQmNJbHdpWEc0Z0lDOHZJQ0FnWkdsemNHeGhlVG9nWW14dlkydGNiaUFnTHk4Z0lDQm9aV2xuYUhRNklERndlRnh1SUNBdkx5QWdJSGRwWkhSb09pQXhOWEp5WlcxY2JpQWdMeThnSUNCdFlYSm5hVzQ2SUM0M05YSmxiU0JoZFhSdlhHNWNiaTh2UFdGeWRHbGpiR1V0YUdWaFpHVnlLQ1IwWlhoMFEyOXNiM0k2SUNSamFHRnlZMjloYkN3Z0pIVnVaR1Z5YkdsdVpVTnZiRzl5T2lBa1kyaGhjbU52WVd3cFhHNWNiaTh2SUVCcGJtTnNkV1JsSUhObFkzUnBiMjR0YUdWaFpHVnlLQ1IzYUdsMFpTd2dKSGRvYVhSbEtUdGNiaUlzSWk1aGNuUnBZMnhsUTFSQlhHNGdJR0poWTJ0bmNtOTFibVE2SUNSbmIyOWxlV0oxZEhSbGNseHVJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dNM0psYlZ4dVhHNGdJQ1pmWDJOdmJuUmhhVzVsY2x4dUlDQWdJSGRwWkhSb09pQTFNQ1ZjYmlBZ0lDQnRZWEpuYVc0NklEQWdZWFYwYjF4dVhHNGdJQ0FnSzIxbFpHbGhLRndpUGoxMFlXSnNaWFJjSWl3Z1hDSThQV1JsYzJ0MGIzQmNJaWxjYmlBZ0lDQWdJSGRwWkhSb09pQTVNQ1ZjYmx4dUlDQWdJQ3R0WldScFlTaGNJangwWVdKc1pYUmNJaWxjYmlBZ0lDQWdJSGRwWkhSb09pQXhNREFsWEc1Y2JpQWdKbDlmYUdWaFpHbHVaMXh1SUNBZ0lHTnZiRzl5T2lBa1kyaGhjbU52WVd4Y2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0pITmhibk10WTI5dVpHVnVjMlZrTFd4cFoyaDBYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXpjbVZ0WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SURGY2JpQWdJQ0J0WVhKbmFXNDZJREJjYmlBZ0lDQndZV1JrYVc1bkxYUnZjRG9nTlhKbGJWeHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlZ4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjbHh1SUNBZ0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJWY2JseHVJQ0FnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklESnlaVzFjYmx4dUlDQWdJQ1k2T21GbWRHVnlYRzRnSUNBZ0lDQmliM2d0YzJoaFpHOTNPaUF4Y0hnZ01YQjRJREFnSkdOb1lYSmpiMkZzWEc0Z0lDQWdJQ0JqYjI1MFpXNTBPaUJjSWx3aVhHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphMXh1SUNBZ0lDQWdhR1ZwWjJoME9pQXhjSGhjYmlBZ0lDQWdJSGRwWkhSb09pQXhOWEpsYlZ4dUlDQWdJQ0FnYldGeVoybHVPaUF1TnpWeVpXMGdZWFYwYjF4dVhHNGdJQ0FnSUNBcmJXVmthV0VvWENJOFBYUmhZbXhsZEZ3aUtWeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ01UQXdKVnh1WEc0Z0lDWmZYMmhsWVdScGJtZE1hVzVyWEc0Z0lDQWdZMjlzYjNJNklDUnpkR3h2ZFdsellteDFaWE5jYmx4dUlDQWdJQ1k2YUc5MlpYSmNiaUFnSUNBZ0lHTnZiRzl5T2lBa1kyRnlaR2x1WVd4eVpXUmNibHh1SUNBbVgxOXRaRnh1SUNBZ0lHTnZiRzl5T2lBa1kyaGhjbU52WVd4Y2JpQWdJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dNM0psYlZ4dVhHNGdJQ1pmWDNSbGVIUmNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhKY2JseHVJQ0FtWDE5aWRYUjBiMjVjYmlBZ0lDQXJZblYwZEc5dUtETnlaVzBwWEc1Y2JpQWdJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJQ0FnSzJKMWRIUnZiaWd5Y21WdEtWeHVJaXdpTG1GeWRHbGpiR1ZNYVhOMFhHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1J6YVd4MlpYSmNiaUFnWW05NExYTm9ZV1J2ZHpvZ01DQXRNWEI0SURBZ0pHRnlZMmhuY21GNVhHNGdJSEJoWkdScGJtYzZJRE55WlcwZ01GeHVYRzRnSUNaZlgyTnZiblJoYVc1bGNseHVJQ0FnSUhkcFpIUm9PaUEyTlNWY2JpQWdJQ0J0WVhKbmFXNDZJREFnWVhWMGIxeHVYRzRnSUNBZ0syMWxaR2xoS0Z3aVBIUmhZbXhsZEZ3aUtWeHVJQ0FnSUNBZ2QybGtkR2c2SURrd0pWeHVYRzRnSUNaZlgyaGxZV1JwYm1kY2JpQWdJQ0JpYjNndGMyaGhaRzkzT2lBd0lERndlQ0F3SUNSaGNtTm9aM0poZVZ4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lBa2MyRnVjeTFqYjI1a1pXNXpaV1F0YkdsbmFIUmNiaUFnSUNCbWIyNTBMWE5wZW1VNklESnlaVzFjYmlBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTVZ4dVhHNGdJQ0FnSzIxbFpHbGhLRndpUEhSaFlteGxkRndpS1Z4dUlDQWdJQ0FnWm05dWRDMXphWHBsT2lBeExqVnlaVzFjYmx4dUlDQW1YMTlzYVc1clhHNGdJQ0FnWTI5c2IzSTZJQ1J6ZEd4dmRXbHpZbXgxWlhOY2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amExeHVJQ0FnSUcxaGNtZHBiam9nTUZ4dUlDQWdJSEJoWkdScGJtYzZJREZ5WlcwZ0xqVnlaVzFjYmx4dUlDQWdJQ1k2YUc5MlpYSmNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUmpZWEprYVc1aGJISmxaRnh1SUNBZ0lDQWdZMjlzYjNJNklDUjNhR2wwWlZ4dUlpd2lMeThnYUhSMGNEb3ZMMk52Wkhsb2IzVnpaUzVqYnk5blpXMHZjMmxrWlMxMFpXRnRMVzFsYldKbGNpMWlhVzh2WEc1Y2JtSnZaSGxjYmlBZ2IzWmxjbVpzYjNjdGVEb2dhR2xrWkdWdVhHNWNibUp2WkhrdWIzWmxjbVpzYjNjdGFHbGtaR1Z1WEc0Z0lDOHZJSGRvWlc0Z1lYVjBhRzl5SUdKcGJ5QnBjeUIyYVhOcFlteGxMQ0IwYUdVZ2IzVjBMVzltTFdadlkzVnpJR052Ym5SbGJuUWdkMjl1SjNRZ2MyTnliMnhzWEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc1Y2JseHViV0ZwYmx4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVmNiaUFnTHk5NkxXbHVaR1Y0T2lBeU1EQXhPMXh1SUNCMGNtRnVjMmwwYVc5dUxYQnliM0JsY25SNU9pQjBjbUZ1YzJadmNtMWNiaUFnZEhKaGJuTnBkR2x2Ymkxa2RYSmhkR2x2YmpvZ01DNHpjMXh1SUNBbUxuTnNhV1JsTFc5MWRGeHVJQ0FnSUM4dklIUm9aU0J0WVdsdUlHVnNaVzFsYm5RZ2MyeHBaR1Z6SUhSdklIUm9aU0JzWldaMElIZG9aVzRnZEdobElHRjFkR2h2Y2lCaWFXOGdhWE1nZG1semFXSnNaVnh1SUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d0TWpjd2NIZ3BYRzRnSUNBZ0xuSmxkbVZoYkY5ZmIzWmxjbXhoZVZ4dUlDQWdJQ0FnTHk4Z2RHaGxJRzkyWlhKc1lYa2diR0Y1WlhJZ1oyVjBjeUIyYVhOcFlteGxJSGRvWlc0Z2RHaGxJR0YxZEdodmNpQmlhVzhnYzJ4cFpHVnpJR2x1WEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amExeHVJQ0FnSUNBZ1lXNXBiV0YwYVc5dU9pQnlaWFpsWVd4ZlgyWmhaR1V0YVc0Z01DNHpjMXh1WEc1QWJXVmthV0VnYjI1c2VTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURjMk9IQjRLVnh1SUNCdFlXbHVMbk5zYVdSbExXOTFkRnh1SUNBZ0lDOHZJR05vWVc1blpTQnBiaUJ6YVhwbElHOW1JSFJvWlNCaGRYUm9iM0lnWW1sdklITmxZM1JwYjI1Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb0xUWXdNSEI0S1Z4dVhHNUFiV1ZrYVdFZ2IyNXNlU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklERXlNREJ3ZUNsY2JpQWdiV0ZwYmk1emJHbGtaUzF2ZFhSY2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb0xUZ3dNSEI0S1Z4dVhHNHVjbVYyWldGc1hHNGdJR0poWTJ0bmNtOTFibVE2SUNSM2FHbDBaVnh1SUNCd1lXUmthVzVuT2lBd0lEQWdNWEpsYlNBd1hHNGdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjbHh1SUNBbVgxOWpiMjUwWVdsdVpYSmNiaUFnSUNBdkx5QjBhR2x6SUcxdlpHbG1hV1Z6SUhSb1pTQXVjbVYyWldGc1gxOWpiMjUwWVdsdVpYSWdaR1ZtWVhWc2RDQnRZWGd0ZDJsa2RHaGNiaUFnSUNBdkwyMWhlQzEzYVdSMGFEb2dOelk0Y0hnN1hHNGdJQ0FnSmpvNllXWjBaWEpjYmlBZ0lDQWdJQzh2SUdOc1pXRnlabWw0WEc0Z0lDQWdJQ0JqYjI1MFpXNTBPaUFuSjF4dUlDQWdJQ0FnWkdsemNHeGhlVG9nZEdGaWJHVmNiaUFnSUNBZ0lHTnNaV0Z5T2lCaWIzUm9YRzRnSUNaZlgyaGxZV1JwYm1kY2JpQWdJQ0JqYjJ4dmNqb2dJekZoTW1ZeVlWeHVJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQWtjMkZ1Y3kxamIyNWtaVzV6WldRdFltOXNaRnh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a1hHNGdJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVnh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURGeVpXMWNiaUFnSUNBdkx5Qm1iMjUwTFhOcGVtVTZJREl3Y0hnN1hHNGdJQ0FnTHk4Z1ptOXVkQzF6YVhwbE9pQXhMakkxY21WdE8xeHVJQ0FtWDE5d2JHRmpaV2h2YkdSbGNpMHhYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dJMll5TldZMVkxeHVJQ0FnSUdOdmJHOXlPaUFqWm1SbFlXVmhYRzRnSUNaZlgzQnNZV05sYUc5c1pHVnlMVEpjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUFqUmtaR1hHNGdJR3hwWEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01uSmxiVnh1SUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURBdU1qVnlaVzFjYmlBZ0lDQmliM2d0YzJoaFpHOTNPaUF3SURBZ01UQndlQ0J5WjJKaEtDUm5iMjlsZVdKMWRIUmxjaXdnTUNsY2JpQWdJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dNQzR6YzF4dUlDQW1YMTltYVdkMWNtVmNiaUFnSUNCdFlYSm5hVzQ2SURCY2JpQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVZjYmlBZ0lDQXJabXhsZUVWdFltVmtLRFUxTUhCNExDQTNOU1VwWEc0Z0lHbHRaMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yWEc0Z0lDQWdkMmxrZEdnNklERXdNQ1ZjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBdU1qVnlaVzBnTGpJMWNtVnRJREFnTUZ4dUlDQW1YMTlwYldjdGIzWmxjbXhoZVZ4dUlDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVnh1SUNBZ0lIUnZjRG9nTUZ4dUlDQWdJR3hsWm5RNklEQmNiaUFnSUNCM2FXUjBhRG9nTVRBd0pWeHVJQ0FnSUdobGFXZG9kRG9nTVRBd0pWeHVJQ0FnSUdKaFkydG5jbTkxYm1RNklISm5ZbUVvSkhOMGJHOTFhWE5pYkhWbGN5d2dNQzQ1S1Z4dUlDQWdJRzl3WVdOcGRIazZJREJjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBdU1qVnlaVzBnTGpJMWNtVnRJREFnTUZ4dUlDQWdJSFJ5WVc1emFYUnBiMjQ2SUc5d1lXTnBkSGtnTUM0emMxeHVJQ0FnSUhOd1lXNWNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpWeHVJQ0FnSUNBZ2JHVm1kRG9nTlRBbFhHNGdJQ0FnSUNCMGIzQTZJRFV3SlZ4dUlDQWdJQ0FnWW05MGRHOXRPaUJoZFhSdlhHNGdJQ0FnSUNCeWFXZG9kRG9nWVhWMGIxeHVJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLQzAxTUNVcElIUnlZVzV6YkdGMFpWa29MVFV3SlNsY2JpQWdJQ0FnSUdOdmJHOXlPaUFqUmtaR1hHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklESnlaVzFjYmlBZ0lDQWdJR1p2Ym5RdFptRnRhV3g1T2lBa2MyRnVjeTFqYjI1a1pXNXpaV1F0YkdsbmFIUmNiaUFnSmw5ZlltOTRMV2x1Wm05Y2JpQWdJQ0JpWVdOclozSnZkVzVrT2lBa2MzUnNiM1ZwYzJKc2RXVnpYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeVhHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDUnpZVzV6TFdOdmJtUmxibk5sWkMxc2FXZG9kRnh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a1hHNGdJQ0FnY0dGa1pHbHVaem9nTGpJMWNtVnRJREJjYmlBZ0lDQmpiMnh2Y2pvZ0pIZG9hWFJsWEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF5Y21WdFhHNGdJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVnh1SUNBZ0lITndZVzVjYmlBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOclhHNGdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dibTl5YldGc1hHNGdJQ0FnSUNBdkwyTnZiRzl5T2lBak9UazVPVGs1TzF4dUlDQWdJQ0FnTHk4Z1ptOXVkQzF6YVhwbE9pQXhOSEI0TzF4dUlDQWdJQ0FnTHk4Z1ptOXVkQzF6YVhwbE9pQXdMamczTlhKbGJUdGNiaUFnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJQzQxY21WdFhHNGdJQ0FnYzIxaGJHeGNiaUFnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUJ1YjNKdFlXeGNibHh1TG01dkxYUnZkV05vSUM1eVpYWmxZV3dnYkdrNmFHOTJaWEpjYmlBZ1ltOTRMWE5vWVdSdmR6b2dNQ0F3SURFd2NIZ2djbWRpWVNna1oyOXZaWGxpZFhSMFpYSXNJREF1TXlsY2JseHVMbTV2TFhSdmRXTm9JQzV5WlhabFlXd2diR2s2YUc5MlpYSWdMbkpsZG1WaGJGOWZhVzFuTFc5MlpYSnNZWGxjYmlBZ2IzQmhZMmwwZVRvZ01WeHVYRzVBYldWa2FXRWdiMjVzZVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRGMyT0hCNEtWeHVJQ0F1Y21WMlpXRnNJR3hwWEc0Z0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yWEc0Z0lDQWdkMmxrZEdnNklEUTFKVnh1SUNBdWNtVjJaV0ZzSUd4cE9tNTBhQzFqYUdsc1pDZ3piaWxjYmlBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SURCY2JseHVMbkpsZG1WaGJDMXdZVzVsYkY5ZmNHbGpMV1pzWlhobGJXSmxaRnh1SUNBclpteGxlRVZ0WW1Wa0tEVTFNSEI0TENBM05TVXBYRzVjYmk1eVpYWmxZV3d0Y0dGdVpXeGNiaUFnY0c5emFYUnBiMjQ2SUdacGVHVmtYRzRnSUhSdmNEb2dNRnh1SUNCeWFXZG9kRG9nTUZ4dUlDQjNhV1IwYURvZ016SXdjSGhjYmlBZ2FHVnBaMmgwT2lBeE1EQWxYRzRnSUc5MlpYSm1iRzkzTFhrNklHRjFkRzljYmlBZ0x5OGdjMjF2YjNSb0lITmpjbTlzYkdsdVp5QnZiaUJ0YjJKcGJHVWdjR2h2Ym1WeklHRnVaQ0IwWVdKc1pYUnpYRzRnSUMxM1pXSnJhWFF0YjNabGNtWnNiM2N0YzJOeWIyeHNhVzVuT2lCMGIzVmphRnh1SUNCaVlXTnJaM0p2ZFc1a09pQWtaMjl2WlhsaWRYUjBaWEpjYmlBZ2VpMXBibVJsZURvZ01UQXdNVnh1SUNBdkx5QjBhR2x6SUdodmR5QjNaU0J0YjNabElIUm9aU0JoZFhSb2IzSWdZbWx2SUhObFkzUnBiMjRnYjJabUlIUm9aU0JqWVc1MllYTmNiaUFnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtETXlNSEI0S1Z4dUlDQjBjbUZ1YzJsMGFXOXVMWEJ5YjNCbGNuUjVPaUIwY21GdWMyWnZjbTFjYmlBZ2RISmhibk5wZEdsdmJpMWtkWEpoZEdsdmJqb2dNQzR6YzF4dUlDQW1Mbk5zYVdSbExXbHVYRzRnSUNBZ0x5OGdkR2hsSUdGMWRHaHZjaUJpYVc4Z2MyVmpkR2x2YmlCemJHbGtaWE1nYVc0Z2QyaGxiaUIwYUdVZ2RYTmxjaUJqYkdsamEzTWdiMjRnZEdobElIUmxZVzBnYldWdFltVnlJSEJwWTNSMWNtVmNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWZ29NQ2xjYmlBZ0psOWZjR2xqWEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxYRzRnSUNaZlgzQnBZem82WVdaMFpYSmNiaUFnSUNBdkx5Qm5jbUZrYVdWdWRDQmhkQ0IwYUdVZ1ltOTBkRzl0SUc5bUlIUm9aU0JwYldGblpTQXRJSE5oYldVZ1kyOXNiM0lnYjJZZ2RHaGxJR0poWTJ0bmNtOTFibVFnYjJZZ2RHaGxJSE5sWTNScGIyNWNiaUFnSUNCamIyNTBaVzUwT2lBbkoxeHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlZ4dUlDQWdJR0p2ZEhSdmJUb2dNRnh1SUNBZ0lHeGxablE2SURCY2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlZ4dUlDQWdJR2hsYVdkb2REb2dPREJ3ZUZ4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUd4cGJtVmhjaTFuY21Ga2FXVnVkQ2gwYnlCMGIzQXNJQ1JuYjI5bGVXSjFkSFJsY2l3Z2NtZGlZU2drWjI5dlpYbGlkWFIwWlhJc0lEQXBLVnh1WEc0Z0lHbHRaMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnRjYmx4dUlDQXVjbVYyWldGc0xYQmhibVZzWDE5aWFXOHRZMjl1ZEdWdWRGeHVJQ0FnSUhCaFpHUnBibWM2SURGeVpXMWNiaUFnSUNCamIyeHZjam9nSkhkb2FYUmxYRzVjYmlBZ0lDQW1MWFJwZEd4bFhHNGdJQ0FnSUNCamIyeHZjam9nSkhkb2FYUmxYRzRnSUNBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSkhOaGJuTXRZMjl1WkdWdWMyVmtMV3hwWjJoMFhHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklETnlaVzFjYmlBZ0lDQWdJR3hwYm1VdGFHVnBaMmgwT2lBeFhHNGdJQ0FnSUNCdFlYSm5hVzQ2SURCY2JpQWdJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQTFjbVZ0WEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVZjYmlBZ0lDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjbHh1SUNBZ0lDQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpWeHVYRzRnSUNBZ0lDQXJiV1ZrYVdFb1hDSThaR1Z6YTNSdmNGd2lLVnh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF3WEc1Y2JpQWdJQ0FnSUN0dFpXUnBZU2hjSWp4MFlXSnNaWFJjSWlsY2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXljbVZ0WEc1Y2JpQWdJQ0FnSUNZNk9tRm1kR1Z5WEc0Z0lDQWdJQ0FnSUdKdmVDMXphR0ZrYjNjNklERndlQ0F4Y0hnZ01DQWtZMmhoY21OdllXeGNiaUFnSUNBZ0lDQWdZMjl1ZEdWdWREb2dYQ0pjSWx4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphMXh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJREZ3ZUZ4dUlDQWdJQ0FnSUNCM2FXUjBhRG9nTVRWeVpXMWNiaUFnSUNBZ0lDQWdiV0Z5WjJsdU9pQXVOelZ5WlcwZ1lYVjBiMXh1WEc0Z0lDQWdJQ0FnSUN0dFpXUnBZU2hjSWp3OWRHRmliR1YwWENJcFhHNGdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklERXdNQ1ZjYmx4dUlDQWdJQ1l0YzNWaWRHbDBiR1ZjYmlBZ0lDQWdJR1p2Ym5RdFptRnRhV3g1T2lBa2MyRnVjeTFqYjI1a1pXNXpaV1F0YkdsbmFIUmNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dNbkpsYlZ4dUlDQWdJQ0FnY0dGa1pHbHVaem9nTUZ4dUlDQWdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5WEc0Z0lDQWdJQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2dkWEJ3WlhKallYTmxYRzVjYmlBZ0lDQW1MVzFrWEc0Z0lDQWdJQ0JqYjJ4dmNqb2dKR05vWVhKamIyRnNYRzRnSUNBZ0lDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ00zSmxiVnh1WEc0Z0lDQWdJQ0FyYldWa2FXRW9YQ0k4UFhSaFlteGxkRndpS1Z4dUlDQWdJQ0FnSUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nTVhKbGJWeHVYRzRnSUNBZ0lDQm9NMXh1SUNBZ0lDQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0pITmhibk10WTI5dVpHVnVjMlZrTFd4cFoyaDBYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTW5KbGJWeHVJQ0FnSUNBZ0lDQXZMMlp2Ym5RdGQyVnBaMmgwT2lCaWIyeGtPMXh1SUNBZ0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01WeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQXpjbVZ0SURBZ01TNDFjbVZ0SURCY2JpQWdJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeVhHNWNiaUFnSUNBZ0lDQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQWdJQ0FnSUNCd1lXUmthVzVuT2lBeGNtVnRJREFnTGpWeVpXMGdNRnh1WEc0dWJtOHRZM056WjNKaFpHbGxiblJ6SUM1eVpYWmxZV3d0Y0dGdVpXd2dMbkpsZG1WaGJDMXdZVzVsYkY5ZmNHbGpPanBoWm5SbGNseHVJQ0JrYVhOd2JHRjVPaUJ1YjI1bFhHNWNia0J0WldScFlTQnZibXg1SUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dOelk0Y0hncFhHNGdJQzV5WlhabFlXd3RjR0Z1Wld4Y2JpQWdJQ0IzYVdSMGFEb2dOakF3Y0hoY2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb05qQXdjSGdwWEc0Z0lDNXlaWFpsWVd3dGNHRnVaV3dnTG5KbGRtVmhiQzF3WVc1bGJGOWZZbWx2TFdOdmJuUmxiblJjYmlBZ0lDQndZV1JrYVc1bk9pQXljbVZ0WEc0Z0lDNXlaWFpsWVd3dGNHRnVaV3dnTG5KbGRtVmhiQzF3WVc1bGJGOWZZbWx2TFdOdmJuUmxiblFnY0Z4dUlDQWdJQzh2YkdsdVpTMW9aV2xuYUhRNklERXVOanRjYmlBZ0lDQnRZWEpuYVc0NklESnlaVzBnTUZ4dVhHNUFiV1ZrYVdFZ2IyNXNlU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklERXdNREJ3ZUNsY2JpQWdMbkpsZG1WaGJDMXdZVzVsYkZ4dUlDQWdJR0p2ZUMxemFHRmtiM2M2SUMweE1IQjRJREFnTVRBd2NIZ2dKR05vWVhKamIyRnNYRzRnSUNBZ2QybGtkR2c2SURrd01IQjRYRzRnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLREV3TURCd2VDbGNiaUFnTG5KbGRtVmhiQzF3WVc1bGJDQXVjbVYyWldGc0xYQmhibVZzWDE5d2FXTTZPbUZtZEdWeVhHNGdJQ0FnYUdWcFoyaDBPaUF4TlRCd2VGeHVJQ0F1Y21WMlpXRnNMWEJoYm1Wc0lDNXlaWFpsWVd3dGNHRnVaV3hmWDJKcGJ5MWpiMjUwWlc1MFhHNGdJQ0FnY0dGa1pHbHVaem9nTkhKbGJWeHVJQ0FnSUM4dklIZGxJRzF2ZG1VZ2RHaGxJR052Ym5SbGJuUWdkWEFnYzI4Z2RHaGxJSFJwZEd4bElHbHpJRzkyWlhJZ2RHaGxJR052Ykc5eUlHZHlZV1JwWlc1MFhHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWktDMDRNSEI0S1Z4dUlDQXVjbVYyWldGc0xYQmhibVZzSUM1eVpYWmxZV3d0Y0dGdVpXeGZYMkpwYnkxamIyNTBaVzUwSUdneFhHNGdJQ0FnTHk4Z1ptOXVkQzF6YVhwbE9pQTBNSEI0TzF4dUlDQWdJQzh2SUdadmJuUXRjMmw2WlRvZ01pNDFjbVZ0TzF4dUlDQXVjbVYyWldGc0xYQmhibVZzSUM1eVpYWmxZV3d0Y0dGdVpXeGZYMkpwYnkxamIyNTBaVzUwSUhCY2JpQWdJQ0F2THlCbWIyNTBMWE5wZW1VNklERTJjSGc3WEc0Z0lDQWdMeThnWm05dWRDMXphWHBsT2lBeGNtVnRPMXh1SUNBdWJtOHRZM056WjNKaFpHbGxiblJ6SUM1eVpYWmxZV3d0Y0dGdVpXd2dMbkpsZG1WaGJDMXdZVzVsYkY5ZlltbHZMV052Ym5SbGJuUmNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWa29NQ2xjYmx4dUxuSmxkbVZoYkMxd1lXNWxiRjlmWTJ4dmMyVmNiaUFnZDJsa2RHZzZJRGMxY0hoY2JpQWdhR1ZwWjJoME9pQTNOWEI0WEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc1Y2JpQWdjRzl6YVhScGIyNDZJR1pwZUdWa1hHNGdJSFJ2Y0RvZ01qVndlRnh1SUNCeWFXZG9kRG9nTWpWd2VGeHVJQ0JpWVdOclozSnZkVzVrT2lCMWNtd29YQ0l2YVcxaFoyVnpMM04yWnk5eVpYWmxZV3d0YVdOdmJpMWpiRzl6WlM1emRtZGNJaWtnYm04dGNtVndaV0YwSUdObGJuUmxjaUJqWlc1MFpYSmNiaUFnZEdWNGRDMXBibVJsYm5RNklERXdNQ1ZjYmlBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2ZDNKaGNGeHVJQ0I2TFdsdVpHVjRPaUF6TURBeFhHNGdJR1JwYzNCc1lYazZJRzV2Ym1WY2JpQWdKaTVwY3kxMmFYTnBZbXhsWEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJ0Y2JpQWdJQ0JoYm1sdFlYUnBiMjQ2SUhKbGRtVmhiRjlmYlc5MlpTMXBiaUF3TGpoelhHNWNiaTV5WlhabFlXeGZYMjkyWlhKc1lYbGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsWEc0Z0lIUnZjRG9nTUZ4dUlDQnNaV1owT2lBd1hHNGdJSGRwWkhSb09pQXhNREFsWEc0Z0lHaGxhV2RvZERvZ01UQXdKVnh1SUNCaVlXTnJaM0p2ZFc1a09pQnlaMkpoS0NSemRHeHZkV2x6WW14MVpYTXNJREF1T0NsY2JpQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeVhHNGdJR1JwYzNCc1lYazZJRzV2Ym1WY2JpQWdlaTFwYm1SbGVEb2dNakF3TUZ4dVhHNHZMeUI0YTJWNVpuSmhiV1Z6WEc1Y2JrQnJaWGxtY21GdFpYTWdjbVYyWldGc1gxOW1ZV1JsTFdsdVhHNGdJREFsWEc0Z0lDQWdiM0JoWTJsMGVUb2dNRnh1SUNBeE1EQWxYRzRnSUNBZ2IzQmhZMmwwZVRvZ01WeHVYRzVjYmtCclpYbG1jbUZ0WlhNZ2NtVjJaV0ZzWDE5dGIzWmxMV2x1WEc0Z0lEQWxYRzRnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLREV3TUhCNEtTQnliM1JoZEdVb01HUmxaeWxjYmlBZ01UQXdKVnh1SUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d3S1NCeWIzUmhkR1VvTlRRd1pHVm5LVnh1SWl3aUx5OGdSbXhsZUVWdFltVmtJRU5QVmtWU0lFbHRZV2RsSUZKaGRHbHZjMXh1WEc0dkx5Qm9kSFJ3T2k4dmJtbGpiMnhoYzJkaGJHeGhaMmhsY2k1amIyMHZabXhsZUdsaWJHVXRZM056TFdOdmRtVnlMV2x0WVdkbGN5OWNiaTh2SUdoMGRIQTZMeTlqYjJSbGNHVnVMbWx2TDI1bFkyOXNZWE12Y0dWdUwwRnJjMjVwWEc0dkx5Qm9kSFJ3T2k4dmQzZDNMbk5wZEdWd2IybHVkQzVqYjIwdmJXRnBiblJoYVc0dGFXMWhaMlV0WVhOd1pXTjBMWEpoZEdsdmN5MXlaWE53YjI1emFYWmxMWGRsWWkxa1pYTnBaMjR2WEc1Y2JqMW1iR1Y0UlcxaVpXUW9KR2hsYVdkb2RDd2dKSEpoZEdsdktWeHVJQ0F2TDFKaGRHbHZjeUFsTlRBZ2IzSWdKVGMxWEc0Z0lHUnBjM0JzWVhrNklHSnNiMk5yWEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc1Y2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxYRzRnSUdKaFkydG5jbTkxYm1RdGNHOXphWFJwYjI0NklEVXdKVnh1SUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2JtOHRjbVZ3WldGMFhHNGdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dZMjkyWlhKY2JpQWdiV0Y0TFdobGFXZG9kRG9nSkdobGFXZG9kRnh1SUNCdFlYZ3RkMmxrZEdnNklERXdNQ1ZjYmx4dUlDQW1PanBoWm5SbGNseHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhDSmNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWphMXh1SUNBZ0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBa2NtRjBhVzljYmlBZ0lDQjNhV1IwYURvZ01UQXdKVnh1WEc0dkx5QlNaV2QxYkdGeVhHNHZMeUJBYVc1amJIVmtaU0JtYkdWNFJXMWlaV1FvTkRBd2NIZ3NJRFV3SlNrN1hHNWNiaTh2SUV4aGNtZGxYRzR2TDBCcGJtTnNkV1JsSUdac1pYaEZiV0psWkNnMU5UQndlQ3dnTnpVbEtUdGNiaUlzSWk4dlhHNHZMeUJKYldGblpTQnpkSGxzWlNCbWNtOXRJRU52WkhKdmNITmNiaTh2SUdoMGRIQTZMeTkwZVcxd1lXNTFjeTV1WlhRdlkyOWtjbTl3Y3k4eU1ERTBMekEyTHpFNUwybGtaV0Z6TFdadmNpMXpkV0owYkdVdGFHOTJaWEl0WldabVpXTjBjeTljYmk4dlhHNWNiaTVuY21sa1hHNGdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNWNiaUFnYldGeVoybHVPaUF3WEc0Z0lDOHZjR0ZrWkdsdVp6b2dNM0psYlNBd0lEQWdNRHRjYmlBZ2QybGtkR2c2SURFd01DVmNiaUFnYldGNExYZHBaSFJvT2lBeE9USXdjSGhjYmlBZ2JHbHpkQzF6ZEhsc1pUb2dibTl1WlZ4dUlDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSmNibHh1THlvZ1EyOXRiVzl1SUhOMGVXeGxYRzR1WjNKcFpDQm1hV2QxY21WY2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxYRzRnSUhvdGFXNWtaWGc2SURGY2JpQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yWEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc1Y2JpQWdiV0Z5WjJsdU9pQXRNQzR5TTNKbGJTQXRNQzR4TlhKbGJWeHVJQ0IzYVdSMGFEb2dOVEFsWEc0Z0lHaGxhV2RvZERvZ05EQXdjSGhjYmlBZ1ltRmphMmR5YjNWdVpEb2dJek13T0RWaE0xeHVJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEpjYmlBZ1kzVnljMjl5T2lCd2IybHVkR1Z5WEc1Y2JpQWdLMjFsWkdsaEtGd2lQRDEwWVdKc1pYUmNJaWxjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVnh1WEc0Z0lDdHRaV1JwWVNoY0lqeDBZV0pzWlhSY0lpbGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pWeHVJQ0FnSUdobGFXZG9kRG9nTWpBd2NIaGNibHh1TG1keWFXUWdabWxuZFhKbElHbHRaMXh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1WY2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJ0Y2JpQWdiV2x1TFdobGFXZG9kRG9nTVRBd0pWeHVJQ0J2Y0dGamFYUjVPaUF3TGpoY2JseHVMbWR5YVdRZ1ptbG5kWEpsSUdacFoyTmhjSFJwYjI1Y2JpQWdjR0ZrWkdsdVp6b2dNbkpsYlZ4dUlDQmpiMnh2Y2pvZ0pIZG9hWFJsWEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJWY2JpQWdabTl1ZEMxemFYcGxPaUF4TGpJMWNtVnRYRzRnSUMxM1pXSnJhWFF0WW1GamEyWmhZMlV0ZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1WEc0Z0lHSmhZMnRtWVdObExYWnBjMmxpYVd4cGRIazZJR2hwWkdSbGJseHVYRzR1WjNKcFpDQm1hV2QxY21VZ1ptbG5ZMkZ3ZEdsdmJqbzZZbVZtYjNKbExGeHVMbWR5YVdRZ1ptbG5kWEpsSUdacFoyTmhjSFJwYjI0Nk9tRm1kR1Z5WEc0Z0lIQnZhVzUwWlhJdFpYWmxiblJ6T2lCdWIyNWxYRzVjYmk1bmNtbGtJR1pwWjNWeVpTQm1hV2RqWVhCMGFXOXVMRnh1TG1keWFXUWdabWxuZFhKbElHRmNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsWEc0Z0lIUnZjRG9nTUZ4dUlDQnNaV1owT2lBd1hHNGdJSGRwWkhSb09pQXhNREFsWEc0Z0lHaGxhV2RvZERvZ01UQXdKVnh1WEc0dktpQkJibU5vYjNJZ2QybHNiQ0JqYjNabGNpQjBhR1VnZDJodmJHVWdhWFJ5WlcwZ1lua2daR1ZtWVhWc2RGeHVMeW9nUm05eUlITnZiV1VnWldabVpXTjBjeUJwZENCM2FXeHNJSE5vYjNjZ1lYTWdZU0JpZFhSMGIyNWNiaTVuY21sa0lHWnBaM1Z5WlNCaFhHNGdJSG90YVc1a1pYZzZJREV3TURCY2JpQWdkR1Y0ZEMxcGJtUmxiblE2SURJd01DVmNiaUFnZDJocGRHVXRjM0JoWTJVNklHNXZkM0poY0Z4dUlDQm1iMjUwTFhOcGVtVTZJREJjYmlBZ2IzQmhZMmwwZVRvZ01GeHVYRzR1WjNKcFpDQm1hV2QxY21VZ2FESmNiaUFnZDI5eVpDMXpjR0ZqYVc1bk9pQXRNQzR4TlhKbGJWeHVJQ0JtYjI1MExYTnBlbVU2SURKeVpXMWNiaUFnWm05dWRDMTNaV2xuYUhRNklETXdNRnh1WEc0Z0lDdHRaV1JwWVNoY0lqeDBZV0pzWlhSY0lpbGNiaUFnSUNCbWIyNTBMWE5wZW1VNklERXVOWEpsYlZ4dVhHNHVaM0pwWkNCbWFXZDFjbVVnYURJZ2MzQmhibHh1SUNCbWIyNTBMWGRsYVdkb2REb2dPREF3WEc1Y2JpNW5jbWxrSUdacFozVnlaU0JvTWl4Y2JpNW5jbWxrSUdacFozVnlaU0J3WEc0Z0lHMWhjbWRwYmpvZ01GeHVYRzR1WjNKcFpDQm1hV2QxY21VZ2NGeHVJQ0JzWlhSMFpYSXRjM0JoWTJsdVp6b2dNWEI0WEc1Y2JpOHFMUzB0TFMwdExTMHRMUzB0TFMwdFhHNHZLaW9xS2lvZ1QzTmpZWElnS2lvcUtseHVMeW90TFMwdExTMHRMUzB0TFMwdExTMWNibHh1Wm1sbmRYSmxMbVZtWm1WamRDMXZjMk5oY2x4dUlDQmlZV05yWjNKdmRXNWtPaUJ5WjJKaEtDUmpZWEprYVc1aGJISmxaQ3dnTUM0NEtWeHVYRzVtYVdkMWNtVXVaV1ptWldOMExXOXpZMkZ5SUdsdFoxeHVJQ0J2Y0dGamFYUjVPaUF3TGpsY2JpQWdMWGRsWW10cGRDMTBjbUZ1YzJsMGFXOXVPaUJ2Y0dGamFYUjVJREF1TXpWelhHNGdJSFJ5WVc1emFYUnBiMjQ2SUc5d1lXTnBkSGtnTUM0ek5YTmNibHh1Wm1sbmRYSmxMbVZtWm1WamRDMXZjMk5oY2lCbWFXZGpZWEIwYVc5dVhHNGdJSEJoWkdScGJtYzZJRE55WlcxY2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2djbWRpWVNna2MzUnNiM1ZwYzJKc2RXVnpMQ0F3TGpjcFhHNGdJQzEzWldKcmFYUXRkSEpoYm5OcGRHbHZiam9nWW1GamEyZHliM1Z1WkMxamIyeHZjaUF3TGpNMWMxeHVJQ0IwY21GdWMybDBhVzl1T2lCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5SURBdU16VnpYRzVjYm1acFozVnlaUzVsWm1abFkzUXRiM05qWVhJZ1ptbG5ZMkZ3ZEdsdmJqbzZZbVZtYjNKbFhHNGdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVnh1SUNCMGIzQTZJRE13Y0hoY2JpQWdjbWxuYUhRNklETXdjSGhjYmlBZ1ltOTBkRzl0T2lBek1IQjRYRzRnSUd4bFpuUTZJRE13Y0hoY2JpQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdJMlptWmx4dUlDQmpiMjUwWlc1ME9pQW5KMXh1WEc1bWFXZDFjbVV1WldabVpXTjBMVzl6WTJGeUlHZ3lYRzRnSUcxaGNtZHBiam9nTVRBbElEQWdNVEJ3ZUNBd1hHNGdJQzEzWldKcmFYUXRkSEpoYm5OcGRHbHZiam9nTFhkbFltdHBkQzEwY21GdWMyWnZjbTBnTUM0ek5YTmNiaUFnZEhKaGJuTnBkR2x2YmpvZ2RISmhibk5tYjNKdElEQXVNelZ6WEc0Z0lDMTNaV0pyYVhRdGRISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVXpaQ2d3TENBeE1EQWxMQ0F3S1Z4dUlDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVE5rS0RBc0lERXdNQ1VzSURBcFhHNWNibVpwWjNWeVpTNWxabVpsWTNRdGIzTmpZWElnWm1sblkyRndkR2x2YmpvNlltVm1iM0psTEZ4dVptbG5kWEpsTG1WbVptVmpkQzF2YzJOaGNpQndYRzRnSUc5d1lXTnBkSGs2SURCY2JpQWdMWGRsWW10cGRDMTBjbUZ1YzJsMGFXOXVPaUJ2Y0dGamFYUjVJREF1TXpWekxDQXRkMlZpYTJsMExYUnlZVzV6Wm05eWJTQXdMak0xYzF4dUlDQjBjbUZ1YzJsMGFXOXVPaUJ2Y0dGamFYUjVJREF1TXpWekxDQjBjbUZ1YzJadmNtMGdNQzR6TlhOY2JpQWdMWGRsWW10cGRDMTBjbUZ1YzJadmNtMDZJSE5qWVd4bEtEQXBYRzRnSUhSeVlXNXpabTl5YlRvZ2MyTmhiR1VvTUNsY2JseHVabWxuZFhKbExtVm1abVZqZEMxdmMyTmhjanBvYjNabGNpQm9NbHh1SUNBdGQyVmlhMmwwTFhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbE0yUW9NQ3dnTUN3Z01DbGNiaUFnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdVelpDZ3dMQ0F3TENBd0tWeHVYRzVtYVdkMWNtVXVaV1ptWldOMExXOXpZMkZ5T21odmRtVnlJR1pwWjJOaGNIUnBiMjQ2T21KbFptOXlaU3hjYm1acFozVnlaUzVsWm1abFkzUXRiM05qWVhJNmFHOTJaWElnY0Z4dUlDQnZjR0ZqYVhSNU9pQXhYRzRnSUMxM1pXSnJhWFF0ZEhKaGJuTm1iM0p0T2lCelkyRnNaU2d4S1Z4dUlDQjBjbUZ1YzJadmNtMDZJSE5qWVd4bEtERXBYRzVjYm1acFozVnlaUzVsWm1abFkzUXRiM05qWVhJNmFHOTJaWElnWm1sblkyRndkR2x2Ymx4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQnlaMkpoS0RVNExDQTFNaXdnTkRJc0lEQXBYRzVjYm1acFozVnlaUzVsWm1abFkzUXRiM05qWVhJNmFHOTJaWElnYVcxblhHNGdJRzl3WVdOcGRIazZJREF1TWx4dUlpd2lMeTlvZEhSd09pOHZaR0YyYVdSM1lXeHphQzV1WVcxbEwyUmxiVzh2WTNOekxXWnNhWEF1Y0dod1hHNWNiaVZtYkdsd0xXWnliMjUwWW1GamExeHVJQ0JpWVdOclptRmpaUzEyYVhOcFltbHNhWFI1T2lCb2FXUmtaVzVjYmlBZ2RISmhibk5wZEdsdmJqb2dNQzQyYzF4dUlDQjBjbUZ1YzJadmNtMHRjM1I1YkdVNklIQnlaWE5sY25abExUTmtYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlZ4dUlDQjBiM0E2SURCY2JpQWdiR1ZtZERvZ01GeHVYRzRsWm14cGNDMW9aV2xuYUhRdGQybGtkR2hjYmlBZ2QybGtkR2c2SURJMU1IQjRYRzRnSUdobGFXZG9kRG9nTWpVd2NIaGNibHh1TG1ac2FYQkhZV3hzWlhKNVhHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1J6ZEd4dmRXbHpZbXgxWlhOY2JpQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlYRzRnSUNaZlgyaGxZV1JwYm1kY2JpQWdJQ0FyYzJWamRHbHZiaTFvWldGa1pYSW9KSGRvYVhSbExDQWtkMmhwZEdVcFhHNGdJQ1pmWDJKdmVGeHVJQ0FnSUhCbGNuTndaV04wYVhabE9pQXhNREF3WEc0Z0lDQWdkSEpoYm5ObWIzSnRMWE4wZVd4bE9pQndjbVZ6WlhKMlpTMHpaRnh1SUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphMXh1SUNBZ0lHMWhjbWRwYmpvZ01DQXhjSGdnTVhCNElERndlRnh1SUNBZ0lFQmxlSFJsYm1RZ0pXWnNhWEF0YUdWcFoyaDBMWGRwWkhSb1hHNGdJQ0FnTHlvZ0lGVlFSRUZVUlVRaElHWnNhWEFnZEdobElIQmhibVVnZDJobGJpQm9iM1psY21Wa1hHNGdJQ0FnSmpwb2IzWmxjaUF1Wm14cGNFZGhiR3hsY25sZlgySmhZMnRjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nY205MFlYUmxXU2d3WkdWbktWeHVJQ0FnSUNZNmFHOTJaWElnTG1ac2FYQkhZV3hzWlhKNVgxOW1jbTl1ZEZ4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1ZaS0RFNE1HUmxaeWxjYmlBZ0psOWZabkp2Ym5SY2JpQWdJQ0JBWlhoMFpXNWtJQ1ZtYkdsd0xXaGxhV2RvZEMxM2FXUjBhRnh1SUNBZ0lDOHFJR2hwWkdVZ1ltRmpheUJ2WmlCd1lXNWxJR1IxY21sdVp5QnpkMkZ3WEc0Z0lDQWdRR1Y0ZEdWdVpDQWxabXhwY0MxbWNtOXVkR0poWTJ0Y2JpQWdKbDlmWW1GamExeHVJQ0FnSUVCbGVIUmxibVFnSldac2FYQXRhR1ZwWjJoMExYZHBaSFJvWEc0Z0lDQWdMeW9nYUdsa1pTQmlZV05ySUc5bUlIQmhibVVnWkhWeWFXNW5JSE4zWVhCY2JpQWdJQ0JBWlhoMFpXNWtJQ1ZtYkdsd0xXWnliMjUwWW1GamExeHVJQ0FnSUM4cUlHSmhZMnNzSUdsdWFYUnBZV3hzZVNCb2FXUmtaVzRnY0dGdVpWeHVJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSbmIyOWxlV0oxZEhSbGNseHVJQ0FnSUM4dlkyOXNiM0k2SUhkb2FYUmxPMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNbVZ0WEc0Z0lDQWdjR0ZrWkdsdVp5MTBiM0E2SUM0MVpXMWNiaUFnSUNCMGNtRnVjMlp2Y20wNklISnZkR0YwWlZrb0xURTRNR1JsWnlsY2JpQWdJQ0FtWDE5b1pXRmthVzVuWEc0Z0lDQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0pITmhibk10WTI5dVpHVnVjMlZrTFdKdmJHUmNiaUFnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4WEc0Z0lDQWdKbDlmZEdWNGRGeHVJQ0FnSUNBZ1ptOXVkQzFtWVcxcGJIazZJQ1J6WVc1ekxXTnZibVJsYm5ObFpDMXNhV2RvZEZ4dUlDQXZLaUJtYkdsd0lITndaV1ZrSUdkdlpYTWdhR1Z5WlZ4dUlDQW1YMTltYkdsd2NHVnlYRzRnSUNBZ2RISmhibk5wZEdsdmJqb2dNQzQyYzF4dUlDQWdJSFJ5WVc1elptOXliUzF6ZEhsc1pUb2djSEpsYzJWeWRtVXRNMlJjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVmNiaUpkTENKemIzVnlZMlZTYjI5MElqb2lMM052ZFhKalpTOGlmUT09ICovIiwiLy8gVHlwZWZhY2UocykgYW5kIEZvbnRzXG4vL1xuJHNhbnM6IFwiVVJXR3JvdGVzay1SZWdcIiwgc2Fucy1zZXJpZlxuJHNhbnMtaXRhbGljOiBcIlVSV0dyb3Rlc2stUmVnSXRhXCIsIHNhbnMtc2VyaWZcblxuJHNhbnMtYm9sZDogXCJVUldHcm90ZXNrLUJvbFwiLCBzYW5zLXNlcmlmXG4kc2Fucy1ib2xkLWl0YWxpYzogXCJVUldHcm90ZXNrLUJvbEl0YVwiLCBzYW5zLXNlcmlmXG5cbiRzYW5zLWNvbmRlbnNlZC1saWdodDogXCJVUldHcm90ZXNrQ29uLUxpZ1wiLCBzYW5zLXNlcmlmXG4kc2Fucy1jb25kZW5zZWQtYm9sZDogXCJVUldHcm90ZXNrQ29uLUJvbFwiLCBzYW5zLXNlcmlmXG5cbiRjdXJzaXZlOiBcImxlYXJuaW5nLWN1cnZlXCJcblxuJG1vbm9zcGFjZTogXCJDb3VyaWVyIE5ld1wiLCBtb25vc3BhY2VcblxuXG4kbm9ybWFsOiBub3JtYWxcblxuXG4vLyBWYXJzXG4kYmFzZS1mb250LXNpemU6IDIycHhcbiRiYXNlLWxpbmUtaGVpZ2h0OiAxLjVcblxuLy8gRnVuY3NcbkBmdW5jdGlvbiBsaW5lLWhlaWdodCgpXG4gIEByZXR1cm4gJGJhc2UtZm9udC1zaXplICogJGJhc2UtbGluZS1oZWlnaHRcblxuLy8gVmFyIG11c3QgYmUgc3BlY2lmaWVkIGFmdGVyIHJldHVybmluZyB0aGUgbGluZS1oZWlnaHQgZnVuY3Rpb25cbiRjYWwtbGluZS1oZWlnaHQ6IGxpbmUtaGVpZ2h0KClcblxuLy8gTWl4aW5zXG49dHlwZS1tYXJnaW4oJHRvcDogMSwgJGJvdHRvbTogMSlcbiAgLy9wYWRkaW5nLXRvcDogJGNhbC1saW5lLWhlaWdodCAqICR0b3BcbiAgLy9wYWRkaW5nLWJvdHRvbTogJGNhbC1saW5lLWhlaWdodCAqICRib3R0b21cbiAgbWFyZ2luLXRvcDogJGNhbC1saW5lLWhlaWdodCAqICR0b3BcbiAgbWFyZ2luLWJvdHRvbTogJGNhbC1saW5lLWhlaWdodCAqICRib3R0b21cblxuLy8gTWl4aW5zXG49YmxvY2stcGFkZGluZygkdG9wOiAxLCAkYm90dG9tOiAxKVxuICAvL3BhZGRpbmctdG9wOiAkY2FsLWxpbmUtaGVpZ2h0ICogJHRvcFxuICAvL3BhZGRpbmctYm90dG9tOiAkY2FsLWxpbmUtaGVpZ2h0ICogJGJvdHRvbVxuICBwYWRkaW5nLXRvcDogJGNhbC1saW5lLWhlaWdodCAqICR0b3BcbiAgcGFkZGluZy1ib3R0b206ICRjYWwtbGluZS1oZWlnaHQgKiAkYm90dG9tXG5cbi8vIHRoaXMgaXMgYWxsIHdlIG5lZWQgdG8gTk9STUFMSVpFIHR5cG9ncmFwaHlcblxuaHRtbFxuICBmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZVxuXG5ib2R5XG4gIGNvbG9yOiAkY2hhcmNvYWxcbiAgbGluZS1oZWlnaHQ6ICRiYXNlLWxpbmUtaGVpZ2h0XG4gIGZvbnQtZmFtaWx5OiAkc2Fuc1xuICAvL2JhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0cmFuc3BhcmVudCwgdHJhbnNwYXJlbnQgbGluZS1oZWlnaHQoKSAtIDFweCwgcmVkIDFweCAsIHRyYW5zcGFyZW50KTtcbiAgLy9iYWNrZ3JvdW5kLXNpemUgOiBhdXRvIGxpbmUtaGVpZ2h0KCk7XG4gIC8vcGFkZGluZzogbGluZS1oZWlnaHQoMikgbGluZS1oZWlnaHQoMSkgMDtcbiAgbWFyZ2luLXRvcDogMFxuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZFxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2XG4gIGZvbnQtc2l6ZTogMXJlbVxuICBmb250LXdlaWdodDogJG5vcm1hbFxuXG5vbFxuICBwYWRkaW5nLWxlZnQ6IDNyZW1cblxubGlcbiAgK3R5cGUtbWFyZ2luKDAsIDApXG5cbnAsIG9sLCB1bFxuICBwYWRkaW5nLWJvdHRvbTogMS41cmVtXG5cbmZpZ3VyZS53aWRlXG4gIC8vbWFyZ2luOiBsaW5lLWhlaWdodCgpIGF1dG8gMDtcbiAgaGVpZ2h0OiBsaW5lLWhlaWdodCgpICogMjBcbiAgb3ZlcmZsb3c6IGhpZGRlblxuICB3aWR0aDogMTAwJVxuICBpbWdcbiAgICB3aWR0aDogMTAwJVxuICAgIHRvcDogNTAlXG4gICAgbGVmdDogNTAlXG4gICAgcG9zaXRpb246IHJlbGF0aXZlXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHRyYW5zbGF0ZVgoLTUwJSlcblxuLy8gVGV4dCBTZWxlY3Rpb24gc3R5bGVcblxcOjpzZWxlY3Rpb25cbiAgYmFja2dyb3VuZDogJHNlbGVjdGlvbi1jb2xvclxuXG4vLyBMb2JvdG9taXplZCBPd2xzXG4vLyBodHRwOi8vYWxpc3RhcGFydC5jb20vYXJ0aWNsZS9heGlvbWF0aWMtY3NzLWFuZC1sb2JvdG9taXplZC1vd2xzXG5cbi8qICogKyAqIHtcbiAqICAgIG1hcmdpbi10b3A6IDEuNXJlbTtcbiAqfVxuXG4uZnVsbFxuICB3aWR0aDogMTAwJVxuXG4vLyBMaXN0c1xuLy8gbnVtYmVyZWQgbGlzdFxuLmxpc3RPbiBvbCBsaSwgb2wuc2ltcGxlTGlzdCBsaVxuICBsaXN0LXN0eWxlLXR5cGU6IGRlY2ltYWxcbiAgcGFkZGluZy1sZWZ0OiAuMjVyZW1cbiAgbWFyZ2luLWxlZnQ6IC0uMjVyZW1cbiAgLy8gVGhpcyBtYWtlcyBJRSBkaXNwbGF5IGh1bmcgYnVsbGV0c1xuXG4vLyBudW1iZXJlZCBsaXN0XG5vbC5zaW1wbGVMaXN0IGxpIG9sIGxpXG4gIGxpc3Qtc3R5bGUtdHlwZTogbG93ZXItYWxwaGFcbiAgcGFkZGluZy1sZWZ0OiAuMjVyZW1cbiAgbWFyZ2luLWxlZnQ6IC0uMjVyZW1cbiAgLy8gVGhpcyBtYWtlcyBJRSBkaXNwbGF5IGh1bmcgYnVsbGV0c1xuXG4vLyBudW1iZXJlZCBsaXN0XG5vbC5zaW1wbGVMaXN0IGxpIG9sIGxpIG9sIGxpXG4gIGxpc3Qtc3R5bGUtdHlwZTogbG93ZXItcm9tYW5cbiAgcGFkZGluZy1sZWZ0OiAuMjVyZW1cbiAgbWFyZ2luLWxlZnQ6IC0uMjVyZW1cbiAgLy8gVGhpcyBtYWtlcyBJRSBkaXNwbGF5IGh1bmcgYnVsbGV0c1xuXG4vLyBzdGFuZGFyZCBsaXN0XG4ubGlzdE9uIHVsIGxpLCB1bC5zaW1wbGVMaXN0IGxpXG4gIGxpc3Qtc3R5bGUtdHlwZTogZGlzY1xuICBwYWRkaW5nLWxlZnQ6IC4yNXJlbVxuICBtYXJnaW4tbGVmdDogLS4yNXJlbVxuICAvLyBUaGlzIG1ha2VzIElFIGRpc3BsYXkgaHVuZyBidWxsZXRzXG5cbi8vIG51bWJlcmVkIGxpc3RcbnVsLnNpbXBsZUxpc3QgbGkgdWwgbGlcbiAgbGlzdC1zdHlsZS10eXBlOiBjaXJjbGVcbiAgcGFkZGluZy1sZWZ0OiAuMjVyZW1cbiAgbWFyZ2luLWxlZnQ6IC0uMjVyZW1cbiAgLy8gVGhpcyBtYWtlcyBJRSBkaXNwbGF5IGh1bmcgYnVsbGV0c1xuXG5vbC5saXN0U3BhY2UgbGlcbiAgcGFkZGluZy10b3A6IDEuNXJlbVxuXG4vLyBGT1JNU1xuaW5wdXQsIHRleHRhcmVhXG4gIHdpZHRoOiAxMDAlXG5cbi8vIEZvbnQgU3R5bGVzXG5cbi5ib2xkLCBzdHJvbmdcbiAgZm9udC13ZWlnaHQ6IDcwMFxuXG4ubm9ybWFsXG4gIGZvbnQtd2VpZ2h0OiAzMDBcblxuLml0YWxpY1xuICBmb250LXN0eWxlOiBpdGFsaWMgIWltcG9ydGFudFxuXG4udXBjYXNlLCAudXBDYXNlLCAuY2Fwc1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlXG5cbi5pbmhlcml0XG4gIGZvbnQtc2l6ZTogaW5oZXJpdFxuXG4vLyBUZXh0IEFsaWduXG5cbi50ZXh0Q2VudGVyLCAudGV4dENcbiAgdGV4dC1hbGlnbjogY2VudGVyXG5cbi50ZXh0TGVmdCwgLnRleHRMXG4gIHRleHQtYWxpZ246IGxlZnRcblxuLnRleHRSaWdodCwgLnRleHRSXG4gIHRleHQtYWxpZ246IHJpZ2h0XG5cbi5pbmRlbnRcbiAgdGV4dC1pbmRlbnQ6IDNyZW1cbiIsIipcbiAgbWFyZ2luOiAwXG4gIHBhZGRpbmc6IDBcblxuaHRtbFxuIGJveC1zaXppbmc6IGJvcmRlci1ib3hcblxuKiwgKjpiZWZvcmUsICo6YWZ0ZXJcbiBib3gtc2l6aW5nOiBpbmhlcml0XG5cbmJvZHlcbiAgbWFyZ2luOiAwXG5cbmFcbiB0ZXh0LWRlY29yYXRpb246IG5vbmVcblxuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWFpbiwgbWVudSwgbmF2LCBzZWN0aW9uXG5cdGRpc3BsYXk6IGJsb2NrXG5cbmJsb2NrcXVvdGUsIHFcbiAgICBxdW90ZXM6IG5vbmVcblxuYmxvY2txdW90ZTpiZWZvcmUsIGJsb2NrcXVvdGU6YWZ0ZXIsXG5xOmJlZm9yZSwgcTphZnRlclxuICAgIGNvbnRlbnQ6ICcnXG4gICAgY29udGVudDogbm9uZVxuICAgIFxudGFibGVcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlXG4gICAgYm9yZGVyLXNwYWNpbmc6IDBcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIE15Rm9udHMgV2ViZm9udCBCdWlsZCBJRCAyODg4NjAyLCAyMDE0LTA5LTIzVDE3OjQxOjI5LTA0MDBcbiAqXG4gKiBUaGUgZm9udHMgbGlzdGVkIGluIHRoaXMgbm90aWNlIGFyZSBzdWJqZWN0IHRvIHRoZSBFbmQgVXNlciBMaWNlbnNlXG4gKiBBZ3JlZW1lbnQocykgZW50ZXJlZCBpbnRvIGJ5IHRoZSB3ZWJzaXRlIG93bmVyLiBBbGwgb3RoZXIgcGFydGllcyBhcmVcbiAqIGV4cGxpY2l0bHkgcmVzdHJpY3RlZCBmcm9tIHVzaW5nIHRoZSBMaWNlbnNlZCAvd2ViZm9udHMocykuXG4gKlxuICogWW91IG1heSBvYnRhaW4gYSB2YWxpZCBsaWNlbnNlIGF0IHRoZSBVUkxzIGJlbG93LlxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2stTGlnT2JsIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1saWdodC1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0V4dFdpZC1Cb2wgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWJvbGQtZXh0cmEtd2lkZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tFeHROYXItTGlnT2JsIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1saWdodC1leHRyYS1uYXJyb3ctb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tXaWQtTGlnT2JsIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1saWdodC13aWRlLW9ibGlxdWUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrRXh0V2lkLUV4dExpZ09ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtZXh0cmEtbGlnaHQtZXh0cmEtd2lkZS1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVzay1NZWRPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LW1lZGl1bS1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVzay1Cb2xJdGEgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWJvbGQtaXRhbGljL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVzay1FeHRMaWdPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWV4dHJhLWxpZ2h0LW9ibGlxdWUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrRXh0V2lkLUJvbE9ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtYm9sZC1leHRyYS13aWRlLW9ibGlxdWUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrLUJvbE9ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtYm9sZC1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza05hci1SZWcgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LXJlZ3VsYXItbmFycm93L1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVzay1FeHRMaWcgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWV4dHJhLWxpZ2h0L1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza1dpZC1MaWcgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWxpZ2h0LXdpZGUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrRXh0V2lkLUxpZ09ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbGlnaHQtZXh0cmEtd2lkZS1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza05hci1MaWcgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWxpZ2h0LW5hcnJvdy9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tXaWQtQm9sIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1ib2xkLXdpZGUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrV2lkLUV4dExpZyBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtZXh0cmEtbGlnaHQtd2lkZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2stTGlnSXRhIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1saWdodC1pdGFsaWMvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrTmFyLUJvbCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtYm9sZC1uYXJyb3cvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrTmFyLUV4dExpZ09ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtZXh0cmEtbGlnaHQtbmFycm93LW9ibGlxdWUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrRXh0V2lkLUxpZyBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbGlnaHQtZXh0cmEtd2lkZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2stTWVkIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1tZWRpdW0vXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrRXh0V2lkLU1lZE9ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbWVkaXVtLWV4dHJhLXdpZGUtb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tXaWQtTWVkIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1tZWRpdW0td2lkZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tFeHROYXItTWVkIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1tZWRpdW0tZXh0cmEtbmFycm93L1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0V4dFdpZC1SZWdPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LXJlZ3VsYXItZXh0cmEtd2lkZS1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0V4dFdpZC1FeHRMaWcgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWV4dHJhLWxpZ2h0LWV4dHJhLXdpZGUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrQ29uRS1MaWcgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay1jb25kLWV4dHJhbGlnaHQvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrTmFyLUxpZ09ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbGlnaHQtbmFycm93LW9ibGlxdWUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrLU1lZEl0YSBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbWVkaXVtLWl0YWxpYy9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tDb24tTGlnIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1saWdodC1jb25kZW5zZWQvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrRXh0TmFyLUJvbE9ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtYm9sZC1leHRyYS1uYXJyb3ctb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tOYXItTWVkT2JsIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1tZWRpdW0tbmFycm93LW9ibGlxdWUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrLVJlZ09ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtcmVndWxhci1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza1dpZC1SZWcgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LXJlZ3VsYXItd2lkZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tOYXItRXh0TGlnIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1leHRyYS1saWdodC1uYXJyb3cvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrLVJlZyBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtcmVndWxhci9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNyBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tOYXItQm9sT2JsIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1ib2xkLW5hcnJvdy1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza1dpZC1FeHRMaWdPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWV4dHJhLWxpZ2h0LXdpZGUtb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2stTGlnIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1saWdodC9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tFeHROYXItRXh0TGlnT2JsIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1leHRyYS1saWdodC1leHRyYS1uYXJyb3ctb2JsaXF1ZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tFeHROYXItUmVnT2JsIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1yZWd1bGFyLWV4dHJhLW5hcnJvdy1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza1dpZC1NZWRPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LW1lZGl1bS13aWRlLW9ibGlxdWUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrU0MtUmVnIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stc2MtdC1yZWd1bGFyL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVzay1SZWdJdGEgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LXJlZ3VsYXItaXRhbGljL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0V4dFdpZC1SZWcgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LXJlZ3VsYXItZXh0cmEtd2lkZS9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tOYXItTWVkIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1tZWRpdW0tbmFycm93L1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0V4dFdpZC1NZWQgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LW1lZGl1bS1leHRyYS13aWRlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza1NDLUxpZyBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXNjLXQtbGlnaHQvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrQ29uLUJvbCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtYm9sZC1jb25kZW5zZWQvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrRXh0TmFyLUJvbCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtYm9sZC1leHRyYS1uYXJyb3cvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrRXh0TmFyLU1lZE9ibCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtbWVkaXVtLWV4dHJhLW5hcnJvdy1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza1dpZC1Cb2xPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LWJvbGQtd2lkZS1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza1dpZC1SZWdPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LXJlZ3VsYXItd2lkZS1vYmxpcXVlL1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza05hci1SZWdPYmwgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LXJlZ3VsYXItbmFycm93LW9ibGlxdWUvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrLUJvbCBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtYm9sZC9cbiAqIENvcHlyaWdodDogKFVSVykrKyxDb3B5cmlnaHQgMjAwNiBieSAoVVJXKSsrIERlc2lnbiAmYW1wOyBEZXZlbG9wbWVudFxuICpcbiAqIFdlYmZvbnQ6IFVSV0dyb3Rlc2tFeHROYXItTGlnIGJ5IFVSVysrXG4gKiBVUkw6IGh0dHA6Ly93d3cubXlmb250cy5jb20vZm9udHMvdXJ3L2dyb3Rlc2svdXJ3LWdyb3Rlc2stdC1saWdodC1leHRyYS1uYXJyb3cvXG4gKiBDb3B5cmlnaHQ6IChVUlcpKyssQ29weXJpZ2h0IDIwMDYgYnkgKFVSVykrKyBEZXNpZ24gJmFtcDsgRGV2ZWxvcG1lbnRcbiAqXG4gKiBXZWJmb250OiBVUldHcm90ZXNrRXh0TmFyLUV4dExpZyBieSBVUlcrK1xuICogVVJMOiBodHRwOi8vd3d3Lm15Zm9udHMuY29tL2ZvbnRzL3Vydy9ncm90ZXNrL3Vydy1ncm90ZXNrLXQtZXh0cmEtbGlnaHQtZXh0cmEtbmFycm93L1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICogV2ViZm9udDogVVJXR3JvdGVza0V4dE5hci1SZWcgYnkgVVJXKytcbiAqIFVSTDogaHR0cDovL3d3dy5teWZvbnRzLmNvbS9mb250cy91cncvZ3JvdGVzay91cnctZ3JvdGVzay10LXJlZ3VsYXItZXh0cmEtbmFycm93L1xuICogQ29weXJpZ2h0OiAoVVJXKSsrLENvcHlyaWdodCAyMDA2IGJ5IChVUlcpKysgRGVzaWduICZhbXA7IERldmVsb3BtZW50XG4gKlxuICpcbiAqIExpY2Vuc2U6IGh0dHA6Ly93d3cubXlmb250cy5jb20vdmlld2xpY2Vuc2U/dHlwZT13ZWImYnVpbGRpZD0yODg4NjAyXG4gKiBMaWNlbnNlZCBwYWdldmlld3M6IDIwLDAwMFxuICpcbiAqIMKpIDIwMTQgTXlGb250cyBJbmNcblxuLyogQGltcG9ydCBtdXN0IGJlIGF0IHRvcCBvZiBmaWxlLCBvdGhlcndpc2UgQ1NTIHdpbGwgbm90IHdvcmtcbkBpbXBvcnQgdXJsKFwiLy9oZWxsby5teWZvbnRzLm5ldC9jb3VudC8yYzEzOWFcIilcblxuLy8gQGZvbnQtZmFjZSB7Zm9udC1mYW1pbHk6ICdVUldHcm90ZXNrLUxpZyc7c3JjOiB1cmwoJy93ZWJmb250cy8yQzEzOUFfMjdfMC5lb3QnKTtzcmM6IHVybCgnL3dlYmZvbnRzLzJDMTM5QV8yN18wLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksdXJsKCcvd2ViZm9udHMvMkMxMzlBXzI3XzAud29mZicpIGZvcm1hdCgnd29mZicpLHVybCgnL3dlYmZvbnRzLzJDMTM5QV8yN18wLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTt9XG4vL1xuLy8gQGZvbnQtZmFjZSB7Zm9udC1mYW1pbHk6ICdVUldHcm90ZXNrLUxpZ0l0YSc7c3JjOiB1cmwoJy93ZWJmb250cy8yQzEzOUFfMTFfMC5lb3QnKTtzcmM6IHVybCgnL3dlYmZvbnRzLzJDMTM5QV8xMV8wLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksdXJsKCcvd2ViZm9udHMvMkMxMzlBXzExXzAud29mZicpIGZvcm1hdCgnd29mZicpLHVybCgnL3dlYmZvbnRzLzJDMTM5QV8xMV8wLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTt9XG5cbkBmb250LWZhY2VcbiAgZm9udC1mYW1pbHk6ICdVUldHcm90ZXNrLVJlZydcbiAgc3JjOiB1cmwoXCIvd2ViZm9udHMvMkMxMzlBXzI0XzAuZW90XCIpXG4gIHNyYzogdXJsKFwiL3dlYmZvbnRzLzJDMTM5QV8yNF8wLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi93ZWJmb250cy8yQzEzOUFfMjRfMC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi93ZWJmb250cy8yQzEzOUFfMjRfMC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIilcblxuXG5AZm9udC1mYWNlXG4gIGZvbnQtZmFtaWx5OiAnVVJXR3JvdGVzay1SZWdJdGEnXG4gIHNyYzogdXJsKFwiL3dlYmZvbnRzLzJDMTM5QV8yQ18wLmVvdFwiKVxuICBzcmM6IHVybChcIi93ZWJmb250cy8yQzEzOUFfMkNfMC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIvd2ViZm9udHMvMkMxMzlBXzJDXzAud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIvd2ViZm9udHMvMkMxMzlBXzJDXzAudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpXG5cblxuQGZvbnQtZmFjZVxuICBmb250LWZhbWlseTogJ1VSV0dyb3Rlc2stQm9sJ1xuICBzcmM6IHVybChcIi93ZWJmb250cy8yQzEzOUFfMzdfMC5lb3RcIilcbiAgc3JjOiB1cmwoXCIvd2ViZm9udHMvMkMxMzlBXzM3XzAuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL3dlYmZvbnRzLzJDMTM5QV8zN18wLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL3dlYmZvbnRzLzJDMTM5QV8zN18wLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKVxuXG5cbkBmb250LWZhY2VcbiAgZm9udC1mYW1pbHk6ICdVUldHcm90ZXNrLUJvbEl0YSdcbiAgc3JjOiB1cmwoXCIvd2ViZm9udHMvMkMxMzlBXzZfMC5lb3RcIilcbiAgc3JjOiB1cmwoXCIvd2ViZm9udHMvMkMxMzlBXzZfMC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIvd2ViZm9udHMvMkMxMzlBXzZfMC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi93ZWJmb250cy8yQzEzOUFfNl8wLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKVxuXG5cbkBmb250LWZhY2VcbiAgZm9udC1mYW1pbHk6ICdVUldHcm90ZXNrQ29uLUxpZydcbiAgc3JjOiB1cmwoXCIvd2ViZm9udHMvMkMxMzlBXzFFXzAuZW90XCIpXG4gIHNyYzogdXJsKFwiL3dlYmZvbnRzLzJDMTM5QV8xRV8wLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi93ZWJmb250cy8yQzEzOUFfMUVfMC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi93ZWJmb250cy8yQzEzOUFfMUVfMC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIilcblxuXG5AZm9udC1mYWNlXG4gIGZvbnQtZmFtaWx5OiAnVVJXR3JvdGVza0Nvbi1Cb2wnXG4gIHNyYzogdXJsKFwiL3dlYmZvbnRzLzJDMTM5QV8zMV8wLmVvdFwiKVxuICBzcmM6IHVybChcIi93ZWJmb250cy8yQzEzOUFfMzFfMC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIvd2ViZm9udHMvMkMxMzlBXzMxXzAud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIvd2ViZm9udHMvMkMxMzlBXzMxXzAudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpXG4iLCIvLyBwYXRoW2NsYXNzXj1cInNsYXdjdWJlXCJdLFxuLy8gcG9seWdvbltjbGFzc149XCJzbGF3Y3ViZVwiXSB7XG4vLyAgICAgZmlsbDp3aGl0ZTtcbi8vIH1cblxuc3ZnXG4gIGhlaWdodDogMTAwJVxuICB3aWR0aDogMTAwJVxuXG4uc2xhd2N1YmVcbiAgZmlsbDogd2hpdGVcblxuLmRpYW1vbmRcbiAgZmlsbDogJGFyY2hncmF5XG5cbi5jb2RlcGVuXG4gIGZpbGw6ICRhcmNoZ3JheVxuIiwiLmNvbnRhaW5lclxuICBtYXJnaW4tdG9wOiAwXG5cblxuW2NsYXNzKj1fX2NvbnRhaW5lcl1cbiAgbWFyZ2luOiAwIGF1dG9cbiAgbWF4LXdpZHRoOiAxMjAwcHhcbiAgcGFkZGluZzogMCAycmVtXG5cbiAgK21lZGlhKFwiPD1kZXNrdG9wXCIpXG4gICAgbWF4LXdpZHRoOiAxMDI0cHhcblxuXG5kaXZbY2xhc3MqPVwiLS1jb2xcIl1cbiAgZmxvYXQ6IGxlZnRcbiIsIi8vXG5cdCBfICAgICAgICAgICAgXyAgICAgICAgICAgXyAgICAgICAgICAgICAgICAgICAgICAgICAgIF8gX1xuXHQoXykgICAgICAgICAgfCB8ICAgICAgICAgfCB8ICAgICAgICAgICAgICAgICAgICAgICAgIHwgKF8pXG5cdCBfIF8gX18gICBfX198IHxfICAgXyAgX198IHwgX19fICAgXyBfXyBfX18gICBfX18gIF9ffCB8XyAgX18gX1xuXHR8IHwgJ18gXFwgLyBfX3wgfCB8IHwgfC8gX2AgfC8gXyBcXCB8ICdfIGAgXyBcXCAvIF8gXFwvIF9gIHwgfC8gX2AgfFxuXHR8IHwgfCB8IHwgKF9ffCB8IHxffCB8IChffCB8ICBfXy8gfCB8IHwgfCB8IHwgIF9fLyAoX3wgfCB8IChffCB8XG5cdHxffF98IHxffFxcX19ffF98XFxfXyxffFxcX18sX3xcXF9fX3wgfF98IHxffCB8X3xcXF9fX3xcXF9fLF98X3xcXF9fLF98XG5cblx0U2ltcGxlLCBlbGVnYW50IGFuZCBtYWludGFpbmFibGUgbWVkaWEgcXVlcmllcyBpbiBTYXNzXG5cblx0aHR0cDovL2luY2x1ZGUtbWVkaWEuY29tXG5cbiAgQXV0aG9yOiBFZHVhcmRvIEJvdWNhcyA8bWFpbEBlZHVhcmRvYm91Y2FzLmNvbT5cblxuXG4gIENyZWF0ZXMgYSBsaXN0IG9mIGdsb2JhbCBicmVha3BvaW50c1xuXG4gIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcblxuICBAZXhhbXBsZSBzY3NzIC0gQ3JlYXRlcyBhIHNpbmdsZSBicmVha3BvaW50IHdpdGggdGhlIGxhYmVsIGBwaG9uZWBcbiAgJGJyZWFrcG9pbnRzOiAoJ3Bob25lJzogMzIwcHgpO1xuXG4kYnJlYWtwb2ludHM6IChcInBob25lXCI6IDMyMHB4LCBcInRhYmxldFwiOiA3NjhweCwgXCJkZXNrdG9wXCI6IDEwMjRweCkgIWRlZmF1bHRcblxuLy9cbiAgQ3JlYXRlcyBhIGxpc3Qgb2Ygc3RhdGljIGV4cHJlc3Npb25zIG9yIG1lZGlhIHR5cGVzXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuXG4gIEBleGFtcGxlIHNjc3MgLSBDcmVhdGVzIGEgc2luZ2xlIG1lZGlhIHR5cGUgKHNjcmVlbilcbiAgICRtZWRpYS1leHByZXNzaW9uczogKCdzY3JlZW4nOiAnc2NyZWVuJyk7XG5cbiAgQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzdGF0aWMgZXhwcmVzc2lvbiB3aXRoIGxvZ2ljYWwgZGlzanVuY3Rpb24gKE9SIG9wZXJhdG9yKVxuICAgJG1lZGlhLWV4cHJlc3Npb25zOiAoXG4gIFx0XHQncmV0aW5hMngnOiAoXG4gIFx0XHRcdCcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKScsXG4gIFx0XHRcdCcobWluLXJlc29sdXRpb246IDE5MmRwaSknXG4gIFx0XHQpXG4gIFx0KTtcblxuJG1lZGlhLWV4cHJlc3Npb25zOiAoXCJzY3JlZW5cIjogXCJzY3JlZW5cIiwgXCJwcmludFwiOiBcInByaW50XCIsIFwiaGFuZGhlbGRcIjogXCJoYW5kaGVsZFwiLCBcInJldGluYTJ4XCI6IChcIigtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpXCIsIFwiKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpXCIpLCBcInJldGluYTN4XCI6IChcIigtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpXCIsIFwiKG1pbi1yZXNvbHV0aW9uOiAzNTBkcGkpXCIpKSAhZGVmYXVsdFxuXG4vL1xuICBEZWZpbmVzIGEgbnVtYmVyIHRvIGJlIGFkZGVkIG9yIHN1YnRyYWN0ZWQgZnJvbSBlYWNoIHVuaXQgd2hlbiBkZWNsYXJpbmcgYnJlYWtwb2ludHMgd2l0aCBleGNsdXNpdmUgaW50ZXJ2YWxzXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuXG4gIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgcGl4ZWxzIGlzIGRlZmluZWQgYXMgYDFgIGJ5IGRlZmF1bHRcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPjEyOHB4XCIpIHt9XG5cbiAgR2VuZXJhdGVzOlxuICBAbWVkaWEgKG1pbi13aWR0aDogMTI5cHgpIHt9XG5cbiAgQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciBlbXMgaXMgZGVmaW5lZCBhcyBgMC4wMWAgYnkgZGVmYXVsdFxuICAgQGluY2x1ZGUgbWVkaWEoXCI+MjBlbVwiKSB7fVxuXG4gIEdlbmVyYXRlczpcbiAgQG1lZGlhIChtaW4td2lkdGg6IDIwLjAxZW0pIHt9XG5cbiAgQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciByZW1zIGlzIGRlZmluZWQgYXMgYDAuMWAgYnkgZGVmYXVsdCwgdG8gYmUgdXNlZCB3aXRoIGBmb250LXNpemU6IDYyLjUlO2BcbiAgIEBpbmNsdWRlIG1lZGlhKFwiPjIuMHJlbVwiKSB7fVxuXG4gIEdlbmVyYXRlczpcbiAgQG1lZGlhIChtaW4td2lkdGg6IDIuMXJlbSkge31cblxuJHVuaXQtaW50ZXJ2YWxzOiAoXCJweFwiOiAxLCBcImVtXCI6IDAuMDEsIFwicmVtXCI6IDAuMSkgIWRlZmF1bHRcblxuLy9cbiAgR2VuZXJhdGVzIGEgbWVkaWEgcXVlcnkgYmFzZWQgb24gYSBsaXN0IG9mIGNvbmRpdGlvbnNcblxuICBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG5cbiAgQHBhcmFtIHtMaXN0fSAgICRjb25kaXRpb25zICAtIE1lZGlhIHF1ZXJ5IGNvbmRpdGlvbnNcblxuICBAZXhhbXBsZSBzY3NzIC0gV2l0aCBhIHNpbmdsZSBzZXQgYnJlYWtwb2ludFxuICAgQGluY2x1ZGUgbWVkaWEoXCI+cGhvbmVcIikgeyB9XG5cbiAgQGV4YW1wbGUgc2NzcyAtIFdpdGggdHdvIHNldCBicmVha3BvaW50c1xuICAgQGluY2x1ZGUgbWVkaWEoXCI+cGhvbmVcIiwgXCI8PXRhYmxldFwiKSB7IH1cblxuICBAZXhhbXBsZSBzY3NzIC0gV2l0aCBjdXN0b20gdmFsdWVzXG4gICBAaW5jbHVkZSBtZWRpYShcIj49MzU4cHhcIiwgXCI8ODUwcHhcIikgeyB9XG5cbiAgQGV4YW1wbGUgc2NzcyAtIFdpdGggc2V0IGJyZWFrcG9pbnRzIHdpdGggY3VzdG9tIHZhbHVlc1xuICAgQGluY2x1ZGUgbWVkaWEoXCI+ZGVza3RvcFwiLCBcIjw9MTM1MHB4XCIpIHsgfVxuXG4gIEBleGFtcGxlIHNjc3MgLSBXaXRoIGEgc3RhdGljIGV4cHJlc3Npb25cbiAgIEBpbmNsdWRlIG1lZGlhKFwicmV0aW5hMnhcIikgeyB9XG5cbiAgQGV4YW1wbGUgc2NzcyAtIE1peGluZyBldmVyeXRoaW5nXG4gICBAaW5jbHVkZSBtZWRpYShcIj49MzUwcHhcIiwgXCI8dGFibGV0XCIsIFwicmV0aW5hM3hcIikgeyB9XG5cblxuPW1lZGlhKCRjb25kaXRpb25zLi4uKVxuICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIGxlbmd0aCgkY29uZGl0aW9ucylcbiAgICAkY29uZGl0aW9uczogc2V0LW50aCgkY29uZGl0aW9ucywgJGksIHBhcnNlLWV4cHJlc3Npb24obnRoKCRjb25kaXRpb25zLCAkaSkpKVxuICAkYnJhbmNoZXM6IGdldC1xdWVyeS1icmFuY2hlcygkY29uZGl0aW9ucylcbiAgJHF1ZXJ5OiBcIlwiXG4gIEBlYWNoICRicmFuY2ggaW4gJGJyYW5jaGVzXG4gICAgQGlmIHN0ci1sZW5ndGgoJHF1ZXJ5KSAhPSAwXG4gICAgICAkcXVlcnk6ICRxdWVyeSArIFwiLCBcIlxuICAgICRxdWVyeTogJHF1ZXJ5ICsgJGJyYW5jaFxuICBAbWVkaWEgI3skcXVlcnl9XG4gICAgQGNvbnRlbnRcblxuLy9cbiAgUmVhZHMgYSBsaXN0IG9mIG1lZGlhIHF1ZXJ5IGV4cHJlc3Npb25zIGFuZCBzZXBhcmF0ZXMgbG9naWNhbCBkaXNqdW5jdGlvbnMgaW50byBkaWZmZXJlbnQgYnJhbmNoZXNcblxuICBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG4gIEBwYXJhbSB7TGlzdH0gICAkZXhwcmVzc2lvbnMgIC0gbGlzdCBvZiBleHByZXNzaW9uc1xuICBAdGhyb3dzIGAkZXhwcmVzc2lvbmAgaXMgbm90IGEgdmFsaWQgZXhwcmVzc2lvblxuXG4gIEByZXR1cm4ge0xpc3QgfCBOdWxsfVxuXG5cbkBmdW5jdGlvbiBnZXQtcXVlcnktYnJhbmNoZXMoJGV4cHJlc3Npb25zKVxuICAkcmVzdWx0OiBcIlwiXG4gICRoYXMtZ3JvdXBzOiBmYWxzZVxuICAvLyBHZXR0aW5nIGluaXRpYWwgc25hcHNob3QgYW5kIGxvb2tpbmcgZm9yIGdyb3Vwc1xuICBAZWFjaCAkZXhwcmVzc2lvbiBpbiAkZXhwcmVzc2lvbnNcbiAgICBAaWYgc3RyLWxlbmd0aCgkcmVzdWx0KSAhPSAwXG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICsgXCIgYW5kIFwiXG4gICAgQGlmIHR5cGUtb2YoJGV4cHJlc3Npb24pID09IFwic3RyaW5nXCJcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKyAkZXhwcmVzc2lvblxuICAgIEBlbHNlIGlmIHR5cGUtb2YoJGV4cHJlc3Npb24pID09IFwibGlzdFwiXG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICsgbnRoKCRleHByZXNzaW9uLCAxKVxuICAgICAgJGhhcy1ncm91cHM6IHRydWVcbiAgICBAZWxzZVxuICAgICAgQHdhcm4gXCIjeyRleHByZXNzaW9ufSBpcyBub3QgYSB2YWxpZCBleHByZXNzaW9uLlwiXG4gIC8vIElmIHdlIGhhdmUgZ3JvdXBzLCB3ZSBoYXZlIHRvIGNyZWF0ZSBhbGwgcG9zc2libGUgY29tYmluYXRpb25zXG4gIEBpZiAkaGFzLWdyb3Vwc1xuICAgIEBlYWNoICRleHByZXNzaW9uIGluICRleHByZXNzaW9uc1xuICAgICAgQGlmIHR5cGUtb2YoJGV4cHJlc3Npb24pID09IFwibGlzdFwiXG4gICAgICAgICRmaXJzdDogbnRoKCRleHByZXNzaW9uLCAxKVxuICAgICAgICBAZWFjaCAkbWVtYmVyIGluICRleHByZXNzaW9uXG4gICAgICAgICAgQGlmICRtZW1iZXIgIT0gJGZpcnN0XG4gICAgICAgICAgICBAZWFjaCAkcGFydGlhbCBpbiAkcmVzdWx0XG4gICAgICAgICAgICAgICRyZXN1bHQ6IGpvaW4oJHJlc3VsdCwgc3RyLXJlcGxhY2UtZmlyc3QoJGZpcnN0LCAkbWVtYmVyLCAkcGFydGlhbCkpXG4gIEByZXR1cm4gJHJlc3VsdFxuXG4vL1xuICBQYXJzZXMgYSBzdHJpbmcgdG8gZm9ybSBhIG1lZGlhIHF1ZXJ5IGV4cHJlc3Npb25cblxuICBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG5cbiAgQHBhcmFtIHtTdHJpbmd9ICAgJGV4cHJlc3Npb24gIC0gZXhwcmVzc2lvbiAoaW4gc3RyaW5nKVxuICBAdGhyb3dzIEV4cHJlc3Npb24gd2l0aCB0eXBlIGB0eXBlLW9mKCRleHByZXNzaW9uKWAgZGV0ZWN0ZWQsIHN0cmluZyBleHBlY3RlZFxuICBAdGhyb3dzIGAkZXhwcmVzc2lvbmAgaXMgbWlzc2luZyBhbiBvcGVyYXRvclxuICBAdGhyb3dzIFVua25vd24gdW5pdDogYCR1bml0YFxuXG4gIEByZXR1cm4ge1N0cmluZyB8IE51bGx9XG5cblxuQGZ1bmN0aW9uIHBhcnNlLWV4cHJlc3Npb24oJGV4cHJlc3Npb24pXG4gICRvcGVyYXRvcjogXCJcIlxuICAkdmFsdWU6IFwiXCJcbiAgJGVsZW1lbnQ6IFwiXCJcbiAgJHJlc3VsdDogXCJcIlxuICAkaXMtd2lkdGg6IHRydWVcbiAgQGlmIHR5cGUtb2YoJGV4cHJlc3Npb24pICE9IFwic3RyaW5nXCJcbiAgICBAd2FybiBcIkV4cHJlc3Npb24gd2l0aCB0eXBlIGAje3R5cGUtb2YoJGV4cHJlc3Npb24pfWAgZGV0ZWN0ZWQsIHN0cmluZyBleHBlY3RlZC5cIlxuICAvLyBTZXBhcmF0aW5nIHRoZSBvcGVyYXRvciBmcm9tIHRoZSByZXN0IG9mIHRoZSBleHByZXNzaW9uXG4gIEBpZiBzdHItc2xpY2UoJGV4cHJlc3Npb24sIDIsIDIpID09IFwiPVwiXG4gICAgJG9wZXJhdG9yOiBzdHItc2xpY2UoJGV4cHJlc3Npb24sIDEsIDIpXG4gICAgJHZhbHVlOiBzdHItc2xpY2UoJGV4cHJlc3Npb24sIDMpXG4gIEBlbHNlXG4gICAgJG9wZXJhdG9yOiBzdHItc2xpY2UoJGV4cHJlc3Npb24sIDEsIDEpXG4gICAgJHZhbHVlOiBzdHItc2xpY2UoJGV4cHJlc3Npb24sIDIpXG4gIC8vIENoZWNraW5nIHdoYXQgdHlwZSBvZiBleHByZXNzaW9uIHdlcmUgZGVhbGluZyB3aXRoXG4gIEBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICR2YWx1ZSlcbiAgICAkcmVzdWx0OiBtYXAtZ2V0KCRicmVha3BvaW50cywgJHZhbHVlKVxuICBAZWxzZSBpZiBtYXAtaGFzLWtleSgkbWVkaWEtZXhwcmVzc2lvbnMsICRleHByZXNzaW9uKVxuICAgICRyZXN1bHQ6IG1hcC1nZXQoJG1lZGlhLWV4cHJlc3Npb25zLCAkZXhwcmVzc2lvbilcbiAgICAkaXMtd2lkdGg6IGZhbHNlXG4gIEBlbHNlXG4gICAgJHJlc3VsdDogdG8tbnVtYmVyKCR2YWx1ZSlcbiAgQGlmICRpcy13aWR0aFxuICAgICR1bml0OiB1bml0KCRyZXN1bHQpXG4gICAgJGludGVydmFsOiAwXG4gICAgQGlmIG1hcC1oYXMta2V5KCR1bml0LWludGVydmFscywgJHVuaXQpXG4gICAgICAkaW50ZXJ2YWw6IG1hcC1nZXQoJHVuaXQtaW50ZXJ2YWxzLCAkdW5pdClcbiAgICBAZWxzZVxuICAgICAgQHdhcm4gXCJVbmtub3duIHVuaXQ6ICN7JHVuaXR9XCJcbiAgICBAaWYgJG9wZXJhdG9yID09IFwiPlwiXG4gICAgICAkZWxlbWVudDogXCIobWluLXdpZHRoOiAjeyRyZXN1bHQgKyAkaW50ZXJ2YWx9KVwiXG4gICAgQGVsc2UgaWYgJG9wZXJhdG9yID09IFwiPFwiXG4gICAgICAkZWxlbWVudDogXCIobWF4LXdpZHRoOiAjeyRyZXN1bHQgLSAkaW50ZXJ2YWx9KVwiXG4gICAgQGVsc2UgaWYgJG9wZXJhdG9yID09IFwiPj1cIlxuICAgICAgJGVsZW1lbnQ6IFwiKG1pbi13aWR0aDogI3skcmVzdWx0fSlcIlxuICAgIEBlbHNlIGlmICRvcGVyYXRvciA9PSBcIjw9XCJcbiAgICAgICRlbGVtZW50OiBcIihtYXgtd2lkdGg6ICN7JHJlc3VsdH0pXCJcbiAgICBAZWxzZVxuICAgICAgQHdhcm4gXCIjeyRleHByZXNzaW9ufSBpcyBtaXNzaW5nIGFuIG9wZXJhdG9yLlwiXG4gIEBlbHNlXG4gICAgJGVsZW1lbnQ6ICRyZXN1bHRcbiAgQHJldHVybiAkZWxlbWVudFxuXG4vL1xuICBSZXBsYWNlcyB0aGUgZmlyc3Qgb2NjdXJlbmNlIG9mIHRoZSBzdHJpbmcgd2l0aCB0aGUgcmVwbGFjZW1lbnQgc3RyaW5nXG5cbiAgQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuXG4gIEBwYXJhbSB7U3RyaW5nfSAgICRzZWFyY2ggIC0gVGhlIHZhbHVlIGJlaW5nIHNlYXJjaGVkIGZvclxuICBAcGFyYW0ge1N0cmluZ30gICAkcmVwbGFjZSAgLSBUaGUgcmVwbGFjZW1lbnQgc3RyaW5nXG4gIEBwYXJhbSB7U3RyaW5nfSAgICRzdWJqZWN0ICAtIFRoZSBzdHJpbmcgYmVpbmcgcmVwbGFjZWQgb25cblxuICBAcmV0dXJuIHtTdHJpbmcgfCBOdWxsfVxuXG5cbkBmdW5jdGlvbiBzdHItcmVwbGFjZS1maXJzdCgkc2VhcmNoLCAkcmVwbGFjZSwgJHN1YmplY3QpXG4gICRzZWFyY2gtc3RhcnQ6IHN0ci1pbmRleCgkc3ViamVjdCwgJHNlYXJjaClcbiAgQGlmICRzZWFyY2gtc3RhcnQgPT0gbnVsbFxuICAgIEByZXR1cm4gJHN1YmplY3RcbiAgJHJlc3VsdDogc3RyLXNsaWNlKCRzdWJqZWN0LCAwLCAkc2VhcmNoLXN0YXJ0IC0gMSlcbiAgJHJlc3VsdDogJHJlc3VsdCArICRyZXBsYWNlXG4gICRyZXN1bHQ6ICRyZXN1bHQgKyBzdHItc2xpY2UoJHN1YmplY3QsICRzZWFyY2gtc3RhcnQgKyBzdHItbGVuZ3RoKCRzZWFyY2gpKVxuICBAcmV0dXJuICRyZXN1bHRcblxuLy9cbiAgQ2FzdHMgYSBudW1iZXIgdG8gYSBzdHJpbmdcblxuICBAYXV0aG9yIEh1Z28gR2lyYXVkZWxcblxuICBAcGFyYW0ge1N0cmluZ30gICAkc3RyaW5nICAtIE51bWJlciB0byBiZSBwYXJzZWRcblxuICBAcmV0dXJuIHtMaXN0IHwgTnVsbH1cblxuQGZ1bmN0aW9uIHRvLW51bWJlcigkc3RyaW5nKVxuICAvLyBNYXRyaWNlc1xuICAkc3RyaW5nczogXCIwXCIgXCIxXCIgXCIyXCIgXCIzXCIgXCI0XCIgXCI1XCIgXCI2XCIgXCI3XCIgXCI4XCIgXCI5XCJcbiAgJG51bWJlcnM6IDAgMSAyIDMgNCA1IDYgNyA4IDlcbiAgLy8gUmVzdWx0XG4gICRyZXN1bHQ6IDBcbiAgJGRpdmlkZXI6IDBcbiAgJG1pbnVzOiBmYWxzZVxuICAvLyBMb29waW5nIHRocm91Z2ggYWxsIGNoYXJhY3RlcnNcbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCBzdHItbGVuZ3RoKCRzdHJpbmcpXG4gICAgJGNoYXJhY3Rlcjogc3RyLXNsaWNlKCRzdHJpbmcsICRpLCAkaSlcbiAgICAkaW5kZXg6IGluZGV4KCRzdHJpbmdzLCAkY2hhcmFjdGVyKVxuICAgIEBpZiAkY2hhcmFjdGVyID09IFwiLVwiXG4gICAgICAkbWludXM6IHRydWVcbiAgICBAZWxzZSBpZiAkY2hhcmFjdGVyID09IFwiLlwiXG4gICAgICAkZGl2aWRlcjogMVxuICAgIEBlbHNlXG4gICAgICBAaWYgdHlwZS1vZigkaW5kZXgpICE9IFwibnVtYmVyXCJcbiAgICAgICAgJHJlc3VsdDogaWYoJG1pbnVzLCAkcmVzdWx0ICogLTEsICRyZXN1bHQpXG4gICAgICAgIEByZXR1cm4gX2xlbmd0aCgkcmVzdWx0LCBzdHItc2xpY2UoJHN0cmluZywgJGkpKVxuICAgICAgJG51bWJlcjogbnRoKCRudW1iZXJzLCAkaW5kZXgpXG4gICAgICBAaWYgJGRpdmlkZXIgPT0gMFxuICAgICAgICAkcmVzdWx0OiAkcmVzdWx0ICogMTBcbiAgICAgIEBlbHNlXG4gICAgICAgIC8vIE1vdmUgdGhlIGRlY2ltYWwgZG90IHRvIHRoZSBsZWZ0XG4gICAgICAgICRkaXZpZGVyOiAkZGl2aWRlciAqIDEwXG4gICAgICAgICRudW1iZXI6ICRudW1iZXIgLyAkZGl2aWRlclxuICAgICAgJHJlc3VsdDogJHJlc3VsdCArICRudW1iZXJcbiAgQHJldHVybiBpZigkbWludXMsICRyZXN1bHQgKiAtMSwgJHJlc3VsdClcblxuQGZ1bmN0aW9uIF9sZW5ndGgoJG51bWJlciwgJHVuaXQpXG4gICRzdHJpbmdzOiBcInB4XCIgXCJjbVwiIFwibW1cIiBcIiVcIiBcImNoXCIgXCJwaWNhXCIgXCJpblwiIFwiZW1cIiBcInJlbVwiIFwicHRcIiBcInBjXCIgXCJleFwiIFwidndcIiBcInZoXCIgXCJ2bWluXCIgXCJ2bWF4XCJcbiAgJHVuaXRzOiAxcHggMWNtIDFtbSAxJSAxY2ggMXBpY2EgMWluIDFlbSAxcmVtIDFwdCAxcGMgMWV4IDF2dyAxdmggMXZtaW4gMXZtYXhcbiAgJGluZGV4OiBpbmRleCgkc3RyaW5ncywgJHVuaXQpXG4gIEBpZiB0eXBlLW9mKCRpbmRleCkgIT0gXCJudW1iZXJcIlxuICAgIEB3YXJuIFwiVW5rbm93biB1bml0IGAjeyR1bml0fWAuXCJcbiAgICBAcmV0dXJuIGZhbHNlXG4gIEByZXR1cm4gJG51bWJlciAqIG50aCgkdW5pdHMsICRpbmRleClcbiIsIi8vIGh0dHA6Ly9jc3Ntb2pvLmNvbS9sYXRlc3RfbmV3X2NsZWFyZml4X3NvX2Zhci9cbi5jbGVhcmZpeDphZnRlclxuICBjb250ZW50OlwiXCJcbiAgZGlzcGxheTp0YWJsZVxuICBjbGVhcjpib3RoXG4iLCIvLyBUaGlzIHBhZ2UgbmVlZHMgYSBsb3Qgb2Ygd29ya1xuXG4uc3RyZXRjaFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdFxuXG4uZml4ZWQtaW1nXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdFxuICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXJcblxuICAvLyttZWRpYShpcGhvbmUpXG4gICttZWRpYShcIj49MzUwcHhcIiwgXCI8dGFibGV0XCIsIFwicmV0aW5hM3hcIilcbiAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IHNjcm9sbFxuXG4gICttZWRpYShcIj50YWJsZXRcIilcbiAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IHNjcm9sbFxuXG4gIC8qXG4gICAqICBtaW4td2lkdGg6MTAyNHB4O1xuICAgKiAgbWluLWhlaWdodDo3NjhweDtcblxuLy8gRHJvcCBTaGFkb3cgU3R5bGVzXG5cbi8vIFBPTEFST0lEIGVmZmVjdCBieSBadXJiXG5cbi8vIFJFU1BPTlNJVkUgSU1BR0VTXG5cbmltZywgaWZyYW1lLCBlbWJlZFxuICBtYXgtd2lkdGg6IDEwMCVcblxuLy9oZWlnaHQ6IGF1dG87XG5cbi5tYWtlLWdhbGxlcnkgZGl2XG4gIGZsb2F0OiBsZWZ0XG4gIGxpc3Qtc3R5bGU6IG5vbmVcblxuLnNxdWFyZS00IGRpdlxuICB3aWR0aDogMjUlXG4gIGhlaWdodDogMFxuICBwYWRkaW5nLWJvdHRvbTogMjUlXG5cbi5zcXVhcmUtMyBkaXZcbiAgd2lkdGg6IDMzLjMzMzMlXG4gIGhlaWdodDogMFxuICBwYWRkaW5nLWJvdHRvbTogMzMuMzMzMyVcblxuLnNxdWFyZS0yIGRpdlxuICB3aWR0aDogNTAlXG4gIGhlaWdodDogMFxuICBwYWRkaW5nLWJvdHRvbTogNTAlXG4iLCIuY29udGFpbmVyXG4gIC8vYmFja2dyb3VuZDogJHdoaXRlO1xuICBwYWRkaW5nLXRvcDogNnJlbVxuXG4gICttZWRpYShcIjx0YWJsZXRcIilcbiAgICBwYWRkaW5nLXRvcDogNHJlbVxuIiwiLmZvb3RlclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkY2hhcmNvYWxcbiAgcGFkZGluZzogM3JlbSAwXG4gIHRleHQtYWxpZ246IGNlbnRlclxuICAvLyBvcGFjaXR5OiAuNztcbiAgLy8gdHJhbnNpdGlvbjogYWxsIC40cztcbiAgJl9fdGV4dFxuICAgIGNvbG9yOiAkYXJjaGdyYXlcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcbiAgYVxuICAgIGNvbG9yOiAkc3Rsb3Vpc2JsdWVzXG4gICAgJjpob3ZlclxuICAgICAgY29sb3I6ICRjYXJkaW5hbHJlZFxuXG4vKiBmb290ZXI6aG92ZXIge1xuICogIG9wYWNpdHk6IDE7XG4gKn1cblxuLnR3aXR0ZXItc2hhcmUtYnV0dG9uXG4gIHZlcnRpY2FsLWFsaWduOiAtMTUlXG4gIG1hcmdpbi1yaWdodDogLTI1cHggIWltcG9ydGFudFxuXG4ubG9nb1xuICBib3JkZXItYm90dG9tOiBub25lICFpbXBvcnRhbnRcbiAgb3BhY2l0eTogLjJcbiAgcGFkZGluZzogMTVweFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgdHJhbnNpdGlvbjogYWxsIC40c1xuXG4ubG9nbzpob3ZlclxuICBvcGFjaXR5OiAxXG5cbi5zb2NpYWwtaWNvbnNcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gIGhlaWdodDogMnJlbVxuICB3aWR0aDogMnJlbVxuXG5hLmJyYW5kbWFyay1ib3R0b21cbiAgY29sb3I6ICRhcmNoZ3JheVxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgZm9udC1zaXplOiAycmVtXG4gIGxldHRlci1zcGFjaW5nOiAtMnB4XG4gIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICttZWRpYShcIj49dGFibGV0XCIsIFwiPD1kZXNrdG9wXCIpXG4gICAgZm9udC1zaXplOiAxLjVyZW1cblxuICArbWVkaWEoXCI8dGFibGV0XCIpXG4gICAgZm9udC1zaXplOiAxcmVtXG5cbiAgLmFcbiAgICBjb2xvcjogJGNhcmRpbmFscmVkXG4gIC5yXG4gICAgY29sb3I6ICRzdGxvdWlzYmx1ZXNcbiAgLnRcbiAgICBjb2xvcjogJGdvb2V5YnV0dGVyXG5cbiAgJjpob3ZlclxuICAgIGNvbG9yOiAkY2hhcmNvYWxcbiIsIi8vIEJyYW5kIENvbG9yc1xuJGdvb2V5YnV0dGVyOiAjZmVjMDU3XG4kY2FyZGluYWxyZWQ6ICNlZjNlNDJcbiRzdGxvdWlzYmx1ZXM6ICMwMDdhYzJcbiRhcmNoZ3JheTogI2E1YTdhYVxuXG4vLyBHZW5lcmFsIENvbG9yc1xuJHdoaXRlOiAjZmZmXG4kYmxhY2s6ICMwMDBcbiRjaGFyY29hbDogIzMzM1xuJGdyYXBoaXRlOiAjY2NjXG4kc2lsdmVyOiAjZjVmNWY1XG4kZGlydDogI2U4ZThlMlxuLy8kcmVkOiAjZjAwXG4vLyR5ZWxsb3c6ICNmZjBcbi8vJGdvbGQ6ICNmMWM0MGZcblxuLy8gTUFQIGNvbG9yIHRvIGNvbXBvbmVudFxuXG4kdGV4dC1saW5rLWNvbG9yOiAkc3Rsb3Vpc2JsdWVzXG4kdGV4dC1saW5rLWNvbG9yLWhvdmVyOiAkY2FyZGluYWxyZWRcblxuJG5hdi1saW5rLWNvbG9yOiAkc3Rsb3Vpc2JsdWVzXG5cbiRidXR0b24tY29sb3I6ICRzdGxvdWlzYmx1ZXNcbiRlcnJvci10ZXh0LWNvbG9yOiAkY2FyZGluYWxyZWRcbiRzZWxlY3Rpb24tY29sb3I6ICRnb29leWJ1dHRlclxuJGNvZGVDb2xvciA6ICRncmFwaGl0ZVxuIiwiLy8gTGF4TmF2IGZyb20gQWxleCBDaWNhblxuICAgaHR0cDovL2FsZXhjaWNhbi5jb20vcG9zdC90ZWVoYW4tbGF4LW5hdmlnYXRpb24vXG5cbltkYXRhLWljb25dOmJlZm9yZVxuICAvL2ZvbnQtZmFtaWx5OiAnc2ljYW5zdHVkaW9zLWRlbW8nXG4gIC8vIGNvbnRlbnQ6IGF0dHIoZGF0YS1pY29uKVxuICBjb250ZW50OiAnXFwyNjMwJ1xuICBzcGVhazogbm9uZVxuICBmb250LXdlaWdodDogbm9ybWFsXG4gIGZvbnQtdmFyaWFudDogbm9ybWFsXG4gIHRleHQtdHJhbnNmb3JtOiBub25lXG4gIGxpbmUtaGVpZ2h0OiAxXG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGVcbiAgZm9udC1zaXplOiAxLjhyZW1cbiAgdHJhbnNpdGlvbjogY29sb3IgLjJzXG5cbi8vIHdoZW4gbGF4bmF2X19tZW51IGlzIHNob3duLCBkb24ndCBhbGxvdyBzY3JvbGxpbmcgb2YgY29udGVudFxuYm9keS5ub19zY3JvbGxcbiAgb3ZlcmZsb3c6IGhpZGRlblxuICBoZWlnaHQ6IDEwMCVcblxuLy8gRmlyZWZveCBmaXggZm9yIG92ZXJmbG93OiBoaWRkZW4uIFNjcm9sbCBiYXIgaXMgaGlkZGVuIGFuZCBtb3ZlcyBldmVyeXRoaW5nIHRvIHRoZSByaWdodFxuQC1tb3otZG9jdW1lbnQgdXJsLXByZWZpeCgpXG4gIGJvZHkubm9fc2Nyb2xsXG4gICAgLy9tYXJnaW4tcmlnaHQ6IDIzcHg7XG4gICAgLmV4cGFuZGVkXG4gICAgICAvL3BhZGRpbmctcmlnaHQ6IDdweDtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoJHdoaXRlLCAwLjk1KVxuICAgICAgLy8gYmVjYXVzZSBGRiBubyBibHVyLCByZWR1Y2UgYmcgdHJhbnNwYXJlbmN5XG5cblxuYS5icmFuZG1hcmtcbiAgY29sb3I6ICRhcmNoZ3JheVxuICBkaXNwbGF5OiB0YWJsZS1jZWxsXG4gIGZvbnQtc2l6ZTogMS44cmVtXG4gIGxldHRlci1zcGFjaW5nOiAtMnB4XG5cbiAgK21lZGlhKFwiPD1kZXNrdG9wXCIpXG4gICAgZm9udC1zaXplOiAxLjVyZW1cblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIGZvbnQtc2l6ZTogMXJlbVxuXG4gICttZWRpYShcIjw9cGhvbmVcIilcbiAgICBmb250LXNpemU6IC44NXJlbVxuXG4gIC5hXG4gICAgY29sb3I6ICRjYXJkaW5hbHJlZFxuICAuclxuICAgIGNvbG9yOiAkc3Rsb3Vpc2JsdWVzXG4gIC50XG4gICAgY29sb3I6ICRnb29leWJ1dHRlclxuXG4gICY6aG92ZXJcbiAgICBjb2xvcjogJGNoYXJjb2FsXG5cblxuLnRhZ2xpbmVcbiAgY29sb3I6ICRncmFwaGl0ZVxuICBmb250LWZhbWlseTogJHNhbnMtY29uZGVuc2VkLWxpZ2h0XG4gIGZvbnQtc2l6ZTogMS4yNXJlbVxuICBsZXR0ZXItc3BhY2luZzogNHB4XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2VcblxuICArbWVkaWEoXCI8PWRlc2t0b3BcIilcbiAgICBmb250LXNpemU6IDFyZW1cblxuICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgIGRpc3BsYXk6IG5vbmVcblxuLy8gb24gaW50aWFsIGxvYWQgZmFkZSBpbiB0aGUgbWVudVxuQGtleWZyYW1lcyBmaXJzdEZhZGVJbkFuZERyb3BcbiAgMCVcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtNTRweClcbiAgMTAwJVxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApXG5cblxuLy8gPT09IFRPUCBNRU5VIExBWU9VVCA9PT1cbi8vID09PT09PT09PT09PT09PT09PT09PT09XG5cbi5sYXhuYXZcbiAgYmFja2dyb3VuZDogcmdiYSgkd2hpdGUsIDAuNzUpXG4gIGN1cnNvcjogcG9pbnRlclxuICBoZWlnaHQ6IDZyZW1cbiAgLy8gc21hbGxlciBoZWlnaHQgYmVjYXVzZSBmb250IGlzIHNtYWxsZXJcbiAgb3ZlcmZsb3c6IGhpZGRlblxuICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgcmlnaHQ6IDBcbiAgdG9wOiAwXG4gIHdpZHRoOiAxMDAlXG4gIC8vcGFkZGluZy10b3A6IDhweDtcbiAgei1pbmRleDogMTAwMFxuICArYm94LXNoYWRvdy1ib3R0b21cbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMClcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4ycywgaGVpZ2h0IC4ycywgYmFja2dyb3VuZCAuMnNcbiAgYW5pbWF0aW9uOiBmaXJzdEZhZGVJbkFuZERyb3AgLjJzXG5cbiAgK21lZGlhKFwiPHRhYmxldFwiKVxuICAgIGhlaWdodDogNHJlbVxuXG4gIC8vIG9uIGxheG5hdl9fbWVudSBob3ZlciBhZGQgc2xpZ2h0IHdoaXRlIGJnXG4gICY6aG92ZXJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKCR3aGl0ZSwgMSlcblxuICAvLyBsaW1pdHMgd2lkdGggb2YgbWVudSB0byBzaXRlIHdpZHRoXG4gICZfX2JhclxuICAgIC8vbWF4LXdpZHRoOiA3NSU7XG4gICAgLy9tYXJnaW46IDAgYXV0bztcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94XG4gICAgZGlzcGxheTogdGFibGVcbiAgICBwYWRkaW5nOiAycmVtXG4gICAgd2lkdGg6IDEwMCVcblxuICAgICttZWRpYShcIjx0YWJsZXRcIilcbiAgICAgIHBhZGRpbmc6IDAgMXJlbVxuXG4gICAgLy8gbmFtZSBvZiBzaXRlIGluIG1haW4gbWVudSAobm90IHVzZXIgc2VsZWN0YWJsZSlcbiAgICA+IGFcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4gICAgICB1c2VyLXNlbGVjdDogbm9uZVxuXG4gIC8vIHdoZW4gaGlkZGVuIGl0IGdvZXMgdXBcbiAgJi5pbnZpc2libGVcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtNjRweClcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjJzXG4gICAgb3BhY2l0eTogMFxuXG4gIC8vIHdoZW4gc2hvd24gJiBkZXRhY2hlZCBwb3NpdGlvbiBpcyBmaXhlZFxuICAmLmRldGFjaGVkXG4gICAgcG9zaXRpb246IGZpeGVkXG4gICAgYmFja2dyb3VuZDogcmdiYSgkd2hpdGUsIDAuOSlcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjJzLCBoZWlnaHQgLjJzLCBiYWNrZ3JvdW5kIC4ycywgb3BhY2l0eSAuMnNcblxuICAvLyA9PT0gTUVOVSBsYXhuYXZfX21lbnUgPT09XG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgLy8gaW5jcmVhc2VzIG1lbnUgd2lkdGggJiBoZWlnaHRcbiAgJi5leHBhbmRlZFxuICAgIHdpZHRoOiAxMDAlXG4gICAgaGVpZ2h0OiAxMDAlXG4gICAgcG9zaXRpb246IGZpeGVkXG4gICAgY3Vyc29yOiBkZWZhdWx0XG4gICAgYmFja2dyb3VuZDogcmdiYSgkd2hpdGUsIC45KVxuICAgIG92ZXJmbG93LXk6IHNjcm9sbFxuXG4gICAgLy8gc2hvd3MgbGF4bmF2X19tZW51XG4gICAgI2xheG5hdl9fbWVudVxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMClcbiAgICAgIG9wYWNpdHk6IDFcblxuICAvLyBwb3NpdGlvbnMgbGF4bmF2X19tZW51IGNvbnRlbnRcbiAgJl9fbWVudVxuICAgIG9wYWNpdHk6IDBcbiAgICB3aWR0aDogNjAlXG4gICAgbWFyZ2luOiAwIGF1dG9cbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtMTAwMHB4KVxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuMTVzLCBvcGFjaXR5IC4yc1xuXG4gICAgK21lZGlhKFwiPGRlc2t0b3BcIilcbiAgICAgIHdpZHRoOiA4MCVcblxuICAgICttZWRpYShcIjw9cGhvbmVcIilcbiAgICAgIHdpZHRoOiAxMDAlXG5cbiAgLy8gPT09IE1FTlUgbGF4bmF2X19tZW51IENPTlRFTlQgPT09XG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBhZGRzIHZlcnRpY2FsIHNwYWNpbmcgYmV0d2VlbiBtZW51IGxpbmtzXG4gICZfX21lbnUtbGlzdC1pdGVtXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lXG4gICAgK2JveC1zaGFkb3ctYm90dG9tXG5cbiAgJl9fbWVudS1saXN0LWFuY2hvclxuICAgIGNvbG9yOiAkc3Rsb3Vpc2JsdWVzXG4gICAgZGlzcGxheTogYmxvY2tcbiAgICBmb250LXNpemU6IDEuNXJlbVxuICAgIGZvbnQtZmFtaWx5OiAkc2Fucy1jb25kZW5zZWQtYm9sZFxuICAgIHBhZGRpbmc6IDAuMWVtIDAuNXJlbVxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2VcblxuICAgICttZWRpYShcIjw9cGhvbmVcIilcbiAgICAgIGZvbnQtc2l6ZTogLjg1cmVtXG5cbiAgICAmOmhvdmVyXG4gICAgICBiYWNrZ3JvdW5kOiAkY2FyZGluYWxyZWRcbiAgICAgIGNvbG9yOiAkd2hpdGVcblxuICAmX19saW5rLXRleHRcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICB3aWR0aDogMjAwcHhcblxuICAmX19saW5rLXRlYXNlclxuICAgIGNvbG9yOiAkY2hhcmNvYWxcbiAgICBmb250LWZhbWlseTogJHNhbnMtY29uZGVuc2VkLWxpZ2h0XG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgZGlzcGxheTogbm9uZVxuXG4vLyA9PT0gTUVOVSBJQ09OUyA9PT1cbi8vID09PT09PT09PT09PT09PT09PVxuXG4vLyBhZGRzIHBhZGRpbmcgdG8gaWNvbnNcbi5pY29uLWJ0blxuICAvLyBwYWRkaW5nOiAyJSAzJVxuICAvLyBtYXJnaW46IC0yJSAtMyVcbiAgLy8gY2VudGVyIGljb24gaW4gdmVydGljYWwgbWlkZGxlIG9mIHRvcCBtZW51XG4gIGN1cnNvcjogcG9pbnRlclxuICBkaXNwbGF5OiB0YWJsZS1jZWxsXG4gIHRleHQtYWxpZ246IHJpZ2h0XG4gIHVzZXItc2VsZWN0OiBub25lXG5cbiAgLy8gaGlkZXMgZXh0cmEgdGV4dCBvZiBpY29uIChhY2Nlc3NpYmlsaXR5KVxuICBzcGFuXG4gICAgLy9kaXNwbGF5OiBub25lO1xuICAgIGNvbG9yOiAkc3Rsb3Vpc2JsdWVzXG4gICAgZm9udC1mYW1pbHk6ICRzYW5zLWNvbmRlbnNlZC1saWdodFxuICAgIGZvbnQtc2l6ZTogMXJlbVxuICAgIGxldHRlci1zcGFjaW5nOiA0cHhcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgZGlzcGxheTogbm9uZVxuXG4gIC8vIG9uIGZvY3VzLCBkb24ndCBzaG93IG91dGxpbmVcbiAgJjpmb2N1c1xuICAgIG91dGxpbmU6IG5vbmVcblxuICAvLyBpY29uIGNvbG91clxuICAmOmJlZm9yZSxcbiAgJjphY3RpdmU6YmVmb3JlXG4gICAgY29sb3I6ICR0ZXh0LWxpbmstY29sb3JcblxuICAvLyBjaGFuZ2VzIGNvbG91ciBvbiBob3ZlciBvciBrZXlib2FyZCBmb2N1c1xuICAmOmhvdmVyOmJlZm9yZSxcbiAgJjpmb2N1czpiZWZvcmVcbiAgICBjb2xvcjogJHRleHQtbGluay1jb2xvci1ob3ZlclxuXG4vLyBjaGFuZ2VzIGljb24gdG8gYW4gWFxuLmV4cGFuZGVkIC5pY29uLWJ0bjpiZWZvcmVcbiAgLy9jb250ZW50OiAneCdcbiAgY29udGVudDogJ1xcMDAyNzE1J1xuICBmb250LXNpemU6IDJyZW1cbiAgZm9udC13ZWlnaHQ6IGJvbGRcbiAgLy9saW5lLWhlaWdodDogMS40cmVtXG4gIHBhZGRpbmctcmlnaHQ6IC4xNXJlbVxuXG4vLyA9PT0gQ09OVEVOVCBCTFVSUklORyA9PT1cbi8vID09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBhZGRzIHRyYW5zaXRpb24gdG8gdGhlIGNvbnRlbnRcbi5jb250ZW50LXRyYW5zaXRpb25cbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4ycywgZmlsdGVyIC4yc1xuXG4vLyBibHVycmluZyBjb250ZW50XG4uYmx1cnJlZFxuICAvL3RyYW5zZm9ybTogc2NhbGUoMC45OSlcbiAgLy9maWx0ZXI6IGJsdXIoMnB4KVxuICAvL3RyYW5zaXRpb246IHRyYW5zZm9ybSAuMnNcbiIsIi8vIFBsYWNlIEhvbGRlcnNcbj1ib3gtc2hhZG93LWJvdHRvbVxuICBib3gtc2hhZG93OiAwIDFweCAwICRncmFwaGl0ZVxuIiwiLmltZ0Jhbm5lclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXRcbiAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyXG4gIGZvbnQtZmFtaWx5OiAkc2Fucy1jb25kZW5zZWQtbGlnaHRcbiAgLy9mb250LWZhbWlseTogJHNhbnMtY29uZGVuc2VkLWJvbGQ7XG4gIHdpZHRoOiAxMDAlXG4gIGhlaWdodDogMTAwJVxuICBwYWRkaW5nOiAxMnJlbSAwXG4gIHBvc2l0aW9uOiByZWxhdGl2ZVxuICB6LWluZGV4OiAwXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IHNjcm9sbFxuICAgIHBhZGRpbmc6IDNyZW0gMFxuXG4gICY6OmJlZm9yZVxuICAgIGNvbnRlbnQ6IFwiIFwiXG4gICAgLy9iYWNrZ3JvdW5kOiByZ2JhKCAkY2hhcmNvYWwsIDAuNSApO1xuICAgIGhlaWdodDogMTAwJVxuICAgIHdpZHRoOiAxMDAlXG4gICAgZGlzcGxheTogYmxvY2tcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICBib3R0b206IDBcbiAgICBsZWZ0OiAwXG4gICAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApIDAlLCByZ2JhKDAsIDAsIDAsIDApIDElLCByZ2JhKDAsIDAsIDAsIDAuMDUpIDI2JSwgcmdiYSgwLCAwLCAwLCAwLjUpIDcxJSwgcmdiYSgwLCAwLCAwLCAwLjcpIDEwMCUpXG5cbiAgJl9fY29udGFpbmVyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnRcbiAgICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgICB6LWluZGV4OiA1XG4gICAgLy90b3A6IDU0JTtcblxuICAmX19oZWFkaW5nXG4gICAgdGV4dC1zaGFkb3c6IDNweCAzcHggMCByZ2JhKCRjaGFyY29hbCwgLjUpXG4gICAgY29sb3I6ICR3aGl0ZVxuICAgIGZvbnQtc2l6ZTogOHJlbVxuICAgIG1hcmdpbjogMFxuICAgIHRleHQtYWxpZ246IGNlbnRlclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2VcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAwKVxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuNHMsIGhlaWdodCAuM3MsIGJhY2tncm91bmQgLjRzXG4gICAgYW5pbWF0aW9uOiBmaXJzdEZhZGVJbkFuZERyb3AgLjVzXG5cbiAgICArbWVkaWEoXCI+PXRhYmxldFwiLCBcIjw9ZGVza3RvcFwiKVxuICAgICAgZm9udC1zaXplOiA1cmVtXG4gICAgICBtYXJnaW46IDBcblxuICAgICttZWRpYShcIjx0YWJsZXRcIilcbiAgICAgIGZvbnQtc2l6ZTogM3JlbVxuICAgICAgbWFyZ2luOiAwXG5cbiAgJl9fdGV4dFxuICAgIGNvbG9yOiAkd2hpdGVcbiAgICBmb250LXNpemU6IDZyZW1cbiAgICBmb250LWZhbWlseTogJGN1cnNpdmVcbiAgICBtYXJnaW46IDBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcbiIsIi5tYWluQ29udGVudFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGVcbiAgcGFkZGluZzogMCAwIDNyZW0gMFxuXG4gICZfX2NvbnRhaW5lclxuICAgIHdpZHRoOiA2NSVcbiAgICBtYXJnaW46IDAgYXV0b1xuXG4gICAgK21lZGlhKFwiPHRhYmxldFwiKVxuICAgICAgd2lkdGg6IDEwMCVcblxuICAmX19oZWFkaW5nXG4gICAgZm9udC1mYW1pbHk6ICRzYW5zLWNvbmRlbnNlZC1saWdodFxuICAgIGZvbnQtc2l6ZTogM3JlbVxuICAgIGxpbmUtaGVpZ2h0OiAxXG4gICAgbWFyZ2luOiAwXG4gICAgcGFkZGluZy10b3A6IDVyZW1cbiAgICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlXG5cbiAgICAmOjphZnRlclxuICAgICAgYm94LXNoYWRvdzogMXB4IDFweCAwICRjaGFyY29hbFxuICAgICAgY29udGVudDogXCJcIlxuICAgICAgZGlzcGxheTogYmxvY2tcbiAgICAgIGhlaWdodDogMXB4XG4gICAgICB3aWR0aDogMTVyZW1cbiAgICAgIG1hcmdpbjogLjc1cmVtIGF1dG9cblxuICAgICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgICAgd2lkdGg6IDEwMCVcblxuICAmX19zdWJIZWFkaW5nXG4gICAgZm9udC1mYW1pbHk6ICRzYW5zLWNvbmRlbnNlZC1saWdodFxuICAgIGZvbnQtc2l6ZTogMnJlbVxuICAgIC8vZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgbGluZS1oZWlnaHQ6IDFcbiAgICBtYXJnaW46IDBcbiAgICBwYWRkaW5nOiAzcmVtIDAgMS41cmVtIDBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAmX19kYXRlXG4gICAgY29sb3I6ICRncmFwaGl0ZVxuICAgIGZvbnQtZmFtaWx5OiAkc2Fucy1jb25kZW5zZWQtbGlnaHRcbiAgICBmb250LXNpemU6IDJyZW1cbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAmX19tZFxuICAgIGNvbG9yOiAkY2hhcmNvYWxcbiAgICBwYWRkaW5nLWJvdHRvbTogM3JlbVxuXG4gICAgaDEsIGgyLCBoMywgaDQsIGg1LCBoNlxuICAgICAgZm9udC1mYW1pbHk6ICRzYW5zLWNvbmRlbnNlZC1ib2xkXG4gICAgICBmb250LXNpemU6IDJyZW1cbiAgICAgIC8vZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBsaW5lLWhlaWdodDogMVxuICAgICAgbWFyZ2luOiAwXG4gICAgICBwYWRkaW5nOiAzcmVtIDAgMS41cmVtIDBcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlclxuXG4gICAgaWZyYW1lXG4gICAgICBtYXJnaW46IDNyZW0gMFxuIiwiLm1lZ2FTdGF0ZW1lbnRcbiAgYmFja2dyb3VuZDogJHdoaXRlXG4gIGZvbnQtZmFtaWx5OiAkc2Fucy1jb25kZW5zZWQtbGlnaHRcbiAgd2lkdGg6IDEwMCVcbiAgaGVpZ2h0OiAxMDAlXG4gIHBhZGRpbmc6IDNyZW1cbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gIHotaW5kZXg6IDBcblxuICAmX190ZXh0Qm94XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnRcbiAgICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgICB6LWluZGV4OiA1XG5cbiAgJl9faGVhZGluZ1xuICAgIGNvbG9yOiAkYXJjaGdyYXlcbiAgICBmb250LXNpemU6IDZyZW1cbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlXG4gICAgK3R5cGUtbWFyZ2luKDIsIDIpXG5cbiAgICArbWVkaWEoXCI+PXRhYmxldFwiLCBcIjw9ZGVza3RvcFwiKVxuICAgICAgZm9udC1zaXplOiA0cmVtXG4gICAgICArdHlwZS1tYXJnaW4oLjUsLjUpXG5cbiAgICArbWVkaWEoXCI+PXBob25lXCIsIFwiPD10YWJsZXRcIilcbiAgICAgIGZvbnQtc2l6ZTogMnJlbVxuICAgICAgK3R5cGUtbWFyZ2luKC41LC41KVxuXG4gICZfX2NvbnRlbnRcbiAgICBjb2xvcjogJHdoaXRlXG4gICAgZm9udC1zaXplOiA2cmVtXG4gICAgZm9udC1mYW1pbHk6ICRjdXJzaXZlXG4gICAgbWFyZ2luOiAwXG4gICAgcGFkZGluZy1ib3R0b206IDVyZW1cbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcbiIsIi5tZWdhQ1RBXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdFxuICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXJcbiAgZm9udC1mYW1pbHk6ICRzYW5zLWNvbmRlbnNlZC1saWdodFxuICAvL2ZvbnQtZmFtaWx5OiAkc2Fucy1jb25kZW5zZWQtYm9sZDtcbiAgd2lkdGg6IDEwMCVcbiAgaGVpZ2h0OiAxMDAlXG4gIHBvc2l0aW9uOiByZWxhdGl2ZVxuICB6LWluZGV4OiAwXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IHNjcm9sbFxuXG4gICY6OmJlZm9yZVxuICAgIGNvbnRlbnQ6IFwiIFwiXG4gICAgLy9iYWNrZ3JvdW5kOiByZ2JhKCAkY2hhcmNvYWwsIDAuNSApO1xuICAgIGhlaWdodDogMTAwJVxuICAgIHdpZHRoOiAxMDAlXG4gICAgZGlzcGxheTogYmxvY2tcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICBib3R0b206IDBcbiAgICBsZWZ0OiAwXG4gICAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApIDAlLCByZ2JhKDAsIDAsIDAsIDApIDElLCByZ2JhKDAsIDAsIDAsIDAuMDUpIDI2JSwgcmdiYSgwLCAwLCAwLCAwLjUpIDcxJSwgcmdiYSgwLCAwLCAwLCAwLjcpIDEwMCUpXG5cbiAgJl9fY29udGFpbmVyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnRcbiAgICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgICB6LWluZGV4OiA1XG4gICAgK2Jsb2NrLXBhZGRpbmcoOCwgOClcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICArYmxvY2stcGFkZGluZyg0LCA0KVxuXG4gICZfX2hlYWRpbmdcbiAgICBjb2xvcjogJHdoaXRlXG4gICAgZm9udC1zaXplOiA4cmVtXG4gICAgbWFyZ2luOiAwXG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZVxuXG4gICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgIGZvbnQtc2l6ZTogNXJlbVxuICAgICAgbWFyZ2luOiAwXG5cbiAgICArbWVkaWEoXCI8dGFibGV0XCIpXG4gICAgICBmb250LXNpemU6IDJyZW1cbiAgICAgIG1hcmdpbjogMFxuXG4gICZfX3RleHRcbiAgICBjb2xvcjogJHdoaXRlXG4gICAgZm9udC1zaXplOiA2cmVtXG4gICAgZm9udC1mYW1pbHk6ICRjdXJzaXZlXG4gICAgbWFyZ2luOiAwXG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgICArbWVkaWEoXCI+PXRhYmxldFwiLCBcIjw9ZGVza3RvcFwiKVxuICAgICAgZm9udC1zaXplOiA0cmVtXG5cblxuICAgICttZWRpYShcIjx0YWJsZXRcIilcbiAgICAgIGZvbnQtc2l6ZTogMnJlbVxuICAgICAgbWFyZ2luOiAwXG5cbiAgJl9fYnV0dG9uXG4gICAgK2J1dHRvbihpbmhlcml0KVxuIiwiPWJ1dHRvbigkZm9udC1zaXplKVxuICBmb250LXNpemU6ICRmb250LXNpemVcbiAgdHJhbnNpdGlvbjogYWxsIC4xcyBlYXNlLWluXG4gIGJhY2tncm91bmQ6IHJnYmEoJHN0bG91aXNibHVlcywgMC43NSlcbiAgYm9yZGVyLXJhZGl1czogLjI1cmVtXG4gIGNvbG9yOiAkd2hpdGVcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gIGZvbnQtZmFtaWx5OiAkY3Vyc2l2ZVxuICBwYWRkaW5nOiAwIC41cmVtXG4gIHRleHQtYWxpZ246IGNlbnRlclxuICBcbiAgJjpob3ZlclxuICAgIGJhY2tncm91bmQ6IHJnYmEoJHdoaXRlLCAwLjkpXG4gICAgY29sb3I6ICRzdGxvdWlzYmx1ZXNcbiIsIi5jaGFydEJveFxuICBiYWNrZ3JvdW5kOiAkY2FyZGluYWxyZWRcbiAgLy9ib3gtc2hhZG93OiAxcHggMXB4IDAgJGNoYXJjb2FsO1xuICBjb2xvcjogd2hpdGVcbiAgbWFyZ2luLWJvdHRvbTogMXB4XG4gIHBhZGRpbmc6IDNyZW0gMFxuICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAmX19oZWFkaW5nXG4gICAgK3NlY3Rpb24taGVhZGVyKCR3aGl0ZSwgJHdoaXRlKVxuXG4gICZfX3N0YXRcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgICBmb250LWZhbWlseTogJHNhbnMtY29uZGVuc2VkLWxpZ2h0XG4gICAgZm9udC1zaXplOiAycmVtXG4gICAgcGFkZGluZzogMCAzcmVtXG5cbiAgICBzcGFuXG4gICAgICBmb250LXNpemU6IDVyZW1cblxuICAgICAgK21lZGlhKFwiPHRhYmxldFwiKVxuICAgICAgICBmb250LXNpemU6IDJyZW1cbiAgICAgICAgcGFkZGluZzogM3JlbSAwIDAgMFxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcblxuICBwXG4gICAgbWFyZ2luOiAwIGF1dG8gMS41cmVtXG4gICAgdGV4dC1hbGlnbjogbGVmdFxuICAgIHdpZHRoOiA1MCVcblxuLmNoYXJ0XG4gIHBvc2l0aW9uOiByZWxhdGl2ZVxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbiAgbWFyZ2luOiAxcmVtXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICBtYXJnaW46IDNyZW0gMXJlbSAzcmVtIDFyZW1cblxuICBjYW52YXNcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbiAgICB0b3A6IDBcbiAgICBsZWZ0OiAwXG5cbi5jaGFydF9fcGVyY2VudFxuICBmb250LWZhbWlseTogJHNhbnMtY29uZGVuc2VkLWxpZ2h0XG4gIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICBmb250LXNpemU6IDJyZW1cblxuICAmOjphZnRlclxuICAgIGNvbnRlbnQ6IFwiJVwiXG4iLCIvLz1tZWdhLWhlYWRlcigkdGV4dENvbG9yOiAkY2hhcmNvYWwsICR1bmRlcmxpbmVDb2xvcjogJGNoYXJjb2FsKVxuXG49c2VjdGlvbi1oZWFkZXIoJHRleHRDb2xvcjogJGNoYXJjb2FsLCAkdW5kZXJsaW5lQ29sb3I6ICRjaGFyY29hbClcbiAgY29sb3I6ICR0ZXh0Q29sb3JcbiAgZm9udC1mYW1pbHk6ICRzYW5zLWNvbmRlbnNlZC1saWdodFxuICBmb250LXNpemU6IDNyZW1cbiAgbGluZS1oZWlnaHQ6IDFcbiAgbWFyZ2luOiAwXG4gIHBhZGRpbmctdG9wOiA1cnJlbVxuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgdGV4dC1hbGlnbjogY2VudGVyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2VcblxuICArbWVkaWEoXCI8dGFibGV0XCIpXG4gICAgZm9udC1zaXplOiAycmVtXG4gICAgcGFkZGluZy1ib3R0b206IDFyZW1cblxuICAvLyAmOjphZnRlclxuICAvLyAgIGJveC1zaGFkb3c6IDFweCAxcHggMCAkdW5kZXJsaW5lQ29sb3JcbiAgLy8gICBjb250ZW50OiBcIlwiXG4gIC8vICAgZGlzcGxheTogYmxvY2tcbiAgLy8gICBoZWlnaHQ6IDFweFxuICAvLyAgIHdpZHRoOiAxNXJyZW1cbiAgLy8gICBtYXJnaW46IC43NXJlbSBhdXRvXG5cbi8vPWFydGljbGUtaGVhZGVyKCR0ZXh0Q29sb3I6ICRjaGFyY29hbCwgJHVuZGVybGluZUNvbG9yOiAkY2hhcmNvYWwpXG5cbi8vIEBpbmNsdWRlIHNlY3Rpb24taGVhZGVyKCR3aGl0ZSwgJHdoaXRlKTtcbiIsIi5hcnRpY2xlQ1RBXG4gIGJhY2tncm91bmQ6ICRnb29leWJ1dHRlclxuICBwYWRkaW5nLWJvdHRvbTogM3JlbVxuXG4gICZfX2NvbnRhaW5lclxuICAgIHdpZHRoOiA1MCVcbiAgICBtYXJnaW46IDAgYXV0b1xuXG4gICAgK21lZGlhKFwiPj10YWJsZXRcIiwgXCI8PWRlc2t0b3BcIilcbiAgICAgIHdpZHRoOiA5MCVcblxuICAgICttZWRpYShcIjx0YWJsZXRcIilcbiAgICAgIHdpZHRoOiAxMDAlXG5cbiAgJl9faGVhZGluZ1xuICAgIGNvbG9yOiAkY2hhcmNvYWxcbiAgICBmb250LWZhbWlseTogJHNhbnMtY29uZGVuc2VkLWxpZ2h0XG4gICAgZm9udC1zaXplOiAzcmVtXG4gICAgbGluZS1oZWlnaHQ6IDFcbiAgICBtYXJnaW46IDBcbiAgICBwYWRkaW5nLXRvcDogNXJlbVxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZVxuICAgIHRleHQtYWxpZ246IGNlbnRlclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2VcblxuICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICBmb250LXNpemU6IDJyZW1cblxuICAgICY6OmFmdGVyXG4gICAgICBib3gtc2hhZG93OiAxcHggMXB4IDAgJGNoYXJjb2FsXG4gICAgICBjb250ZW50OiBcIlwiXG4gICAgICBkaXNwbGF5OiBibG9ja1xuICAgICAgaGVpZ2h0OiAxcHhcbiAgICAgIHdpZHRoOiAxNXJlbVxuICAgICAgbWFyZ2luOiAuNzVyZW0gYXV0b1xuXG4gICAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgICB3aWR0aDogMTAwJVxuXG4gICZfX2hlYWRpbmdMaW5rXG4gICAgY29sb3I6ICRzdGxvdWlzYmx1ZXNcblxuICAgICY6aG92ZXJcbiAgICAgIGNvbG9yOiAkY2FyZGluYWxyZWRcblxuICAmX19tZFxuICAgIGNvbG9yOiAkY2hhcmNvYWxcbiAgICBwYWRkaW5nLWJvdHRvbTogM3JlbVxuXG4gICZfX3RleHRcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuICAmX19idXR0b25cbiAgICArYnV0dG9uKDNyZW0pXG5cbiAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgK2J1dHRvbigycmVtKVxuIiwiLmFydGljbGVMaXN0XG4gIGJhY2tncm91bmQtY29sb3I6ICRzaWx2ZXJcbiAgYm94LXNoYWRvdzogMCAtMXB4IDAgJGFyY2hncmF5XG4gIHBhZGRpbmc6IDNyZW0gMFxuXG4gICZfX2NvbnRhaW5lclxuICAgIHdpZHRoOiA2NSVcbiAgICBtYXJnaW46IDAgYXV0b1xuXG4gICAgK21lZGlhKFwiPHRhYmxldFwiKVxuICAgICAgd2lkdGg6IDkwJVxuXG4gICZfX2hlYWRpbmdcbiAgICBib3gtc2hhZG93OiAwIDFweCAwICRhcmNoZ3JheVxuICAgIGZvbnQtZmFtaWx5OiAkc2Fucy1jb25kZW5zZWQtbGlnaHRcbiAgICBmb250LXNpemU6IDJyZW1cbiAgICBsaW5lLWhlaWdodDogMVxuXG4gICAgK21lZGlhKFwiPHRhYmxldFwiKVxuICAgICAgZm9udC1zaXplOiAxLjVyZW1cblxuICAmX19saW5rXG4gICAgY29sb3I6ICRzdGxvdWlzYmx1ZXNcbiAgICBkaXNwbGF5OiBibG9ja1xuICAgIG1hcmdpbjogMFxuICAgIHBhZGRpbmc6IDFyZW0gLjVyZW1cblxuICAgICY6aG92ZXJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjYXJkaW5hbHJlZFxuICAgICAgY29sb3I6ICR3aGl0ZVxuIiwiLy8gaHR0cDovL2NvZHlob3VzZS5jby9nZW0vc2lkZS10ZWFtLW1lbWJlci1iaW8vXG5cbmJvZHlcbiAgb3ZlcmZsb3cteDogaGlkZGVuXG5cbmJvZHkub3ZlcmZsb3ctaGlkZGVuXG4gIC8vIHdoZW4gYXV0aG9yIGJpbyBpcyB2aXNpYmxlLCB0aGUgb3V0LW9mLWZvY3VzIGNvbnRlbnQgd29uJ3Qgc2Nyb2xsXG4gIG92ZXJmbG93OiBoaWRkZW5cblxubWFpblxuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgLy96LWluZGV4OiAyMDAxO1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm1cbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4zc1xuICAmLnNsaWRlLW91dFxuICAgIC8vIHRoZSBtYWluIGVsZW1lbnQgc2xpZGVzIHRvIHRoZSBsZWZ0IHdoZW4gdGhlIGF1dGhvciBiaW8gaXMgdmlzaWJsZVxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjcwcHgpXG4gICAgLnJldmVhbF9fb3ZlcmxheVxuICAgICAgLy8gdGhlIG92ZXJsYXkgbGF5ZXIgZ2V0cyB2aXNpYmxlIHdoZW4gdGhlIGF1dGhvciBiaW8gc2xpZGVzIGluXG4gICAgICBkaXNwbGF5OiBibG9ja1xuICAgICAgYW5pbWF0aW9uOiByZXZlYWxfX2ZhZGUtaW4gMC4zc1xuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KVxuICBtYWluLnNsaWRlLW91dFxuICAgIC8vIGNoYW5nZSBpbiBzaXplIG9mIHRoZSBhdXRob3IgYmlvIHNlY3Rpb25cbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTYwMHB4KVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweClcbiAgbWFpbi5zbGlkZS1vdXRcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTgwMHB4KVxuXG4ucmV2ZWFsXG4gIGJhY2tncm91bmQ6ICR3aGl0ZVxuICBwYWRkaW5nOiAwIDAgMXJlbSAwXG4gIHRleHQtYWxpZ246IGNlbnRlclxuICAmX19jb250YWluZXJcbiAgICAvLyB0aGlzIG1vZGlmaWVzIHRoZSAucmV2ZWFsX19jb250YWluZXIgZGVmYXVsdCBtYXgtd2lkdGhcbiAgICAvL21heC13aWR0aDogNzY4cHg7XG4gICAgJjo6YWZ0ZXJcbiAgICAgIC8vIGNsZWFyZml4XG4gICAgICBjb250ZW50OiAnJ1xuICAgICAgZGlzcGxheTogdGFibGVcbiAgICAgIGNsZWFyOiBib3RoXG4gICZfX2hlYWRpbmdcbiAgICBjb2xvcjogIzFhMmYyYVxuICAgIGZvbnQtZmFtaWx5OiAkc2Fucy1jb25kZW5zZWQtYm9sZFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZVxuICAgIG1hcmdpbi1ib3R0b206IDFyZW1cbiAgICAvLyBmb250LXNpemU6IDIwcHg7XG4gICAgLy8gZm9udC1zaXplOiAxLjI1cmVtO1xuICAmX19wbGFjZWhvbGRlci0xXG4gICAgYmFja2dyb3VuZDogI2YyNWY1Y1xuICAgIGNvbG9yOiAjZmRlYWVhXG4gICZfX3BsYWNlaG9sZGVyLTJcbiAgICBiYWNrZ3JvdW5kOiAjRkZGXG4gIGxpXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbVxuICAgIGJvcmRlci1yYWRpdXM6IDAuMjVyZW1cbiAgICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKCRnb29leWJ1dHRlciwgMClcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zc1xuICAmX19maWd1cmVcbiAgICBtYXJnaW46IDBcbiAgICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgICArZmxleEVtYmVkKDU1MHB4LCA3NSUpXG4gIGltZ1xuICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgd2lkdGg6IDEwMCVcbiAgICBib3JkZXItcmFkaXVzOiAuMjVyZW0gLjI1cmVtIDAgMFxuICAmX19pbWctb3ZlcmxheVxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIHRvcDogMFxuICAgIGxlZnQ6IDBcbiAgICB3aWR0aDogMTAwJVxuICAgIGhlaWdodDogMTAwJVxuICAgIGJhY2tncm91bmQ6IHJnYmEoJHN0bG91aXNibHVlcywgMC45KVxuICAgIG9wYWNpdHk6IDBcbiAgICBib3JkZXItcmFkaXVzOiAuMjVyZW0gLjI1cmVtIDAgMFxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zc1xuICAgIHNwYW5cbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgICAgbGVmdDogNTAlXG4gICAgICB0b3A6IDUwJVxuICAgICAgYm90dG9tOiBhdXRvXG4gICAgICByaWdodDogYXV0b1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSlcbiAgICAgIGNvbG9yOiAjRkZGXG4gICAgICBmb250LXNpemU6IDJyZW1cbiAgICAgIGZvbnQtZmFtaWx5OiAkc2Fucy1jb25kZW5zZWQtbGlnaHRcbiAgJl9fYm94LWluZm9cbiAgICBiYWNrZ3JvdW5kOiAkc3Rsb3Vpc2JsdWVzXG4gICAgdGV4dC1hbGlnbjogY2VudGVyXG4gICAgZm9udC1mYW1pbHk6ICRzYW5zLWNvbmRlbnNlZC1saWdodFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkXG4gICAgcGFkZGluZzogLjI1cmVtIDBcbiAgICBjb2xvcjogJHdoaXRlXG4gICAgZm9udC1zaXplOiAycmVtXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZVxuICAgIHNwYW5cbiAgICAgIGRpc3BsYXk6IGJsb2NrXG4gICAgICBmb250LXdlaWdodDogbm9ybWFsXG4gICAgICAvL2NvbG9yOiAjOTk5OTk5O1xuICAgICAgLy8gZm9udC1zaXplOiAxNHB4O1xuICAgICAgLy8gZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgICAgIG1hcmdpbi10b3A6IC41cmVtXG4gICAgc21hbGxcbiAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWxcblxuLm5vLXRvdWNoIC5yZXZlYWwgbGk6aG92ZXJcbiAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgkZ29vZXlidXR0ZXIsIDAuMylcblxuLm5vLXRvdWNoIC5yZXZlYWwgbGk6aG92ZXIgLnJldmVhbF9faW1nLW92ZXJsYXlcbiAgb3BhY2l0eTogMVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KVxuICAucmV2ZWFsIGxpXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gICAgd2lkdGg6IDQ1JVxuICAucmV2ZWFsIGxpOm50aC1jaGlsZCgzbilcbiAgICBtYXJnaW4tcmlnaHQ6IDBcblxuLnJldmVhbC1wYW5lbF9fcGljLWZsZXhlbWJlZFxuICArZmxleEVtYmVkKDU1MHB4LCA3NSUpXG5cbi5yZXZlYWwtcGFuZWxcbiAgcG9zaXRpb246IGZpeGVkXG4gIHRvcDogMFxuICByaWdodDogMFxuICB3aWR0aDogMzIwcHhcbiAgaGVpZ2h0OiAxMDAlXG4gIG92ZXJmbG93LXk6IGF1dG9cbiAgLy8gc21vb3RoIHNjcm9sbGluZyBvbiBtb2JpbGUgcGhvbmVzIGFuZCB0YWJsZXRzXG4gIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaFxuICBiYWNrZ3JvdW5kOiAkZ29vZXlidXR0ZXJcbiAgei1pbmRleDogMTAwMVxuICAvLyB0aGlzIGhvdyB3ZSBtb3ZlIHRoZSBhdXRob3IgYmlvIHNlY3Rpb24gb2ZmIHRoZSBjYW52YXNcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDMyMHB4KVxuICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm1cbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4zc1xuICAmLnNsaWRlLWluXG4gICAgLy8gdGhlIGF1dGhvciBiaW8gc2VjdGlvbiBzbGlkZXMgaW4gd2hlbiB0aGUgdXNlciBjbGlja3Mgb24gdGhlIHRlYW0gbWVtYmVyIHBpY3R1cmVcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMClcbiAgJl9fcGljXG4gICAgcG9zaXRpb246IHJlbGF0aXZlXG4gICZfX3BpYzo6YWZ0ZXJcbiAgICAvLyBncmFkaWVudCBhdCB0aGUgYm90dG9tIG9mIHRoZSBpbWFnZSAtIHNhbWUgY29sb3Igb2YgdGhlIGJhY2tncm91bmQgb2YgdGhlIHNlY3Rpb25cbiAgICBjb250ZW50OiAnJ1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICAgIGJvdHRvbTogMFxuICAgIGxlZnQ6IDBcbiAgICB3aWR0aDogMTAwJVxuICAgIGhlaWdodDogODBweFxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsICRnb29leWJ1dHRlciwgcmdiYSgkZ29vZXlidXR0ZXIsIDApKVxuXG4gIGltZ1xuICAgIHdpZHRoOiAxMDAlXG4gICAgZGlzcGxheTogYmxvY2tcblxuICAucmV2ZWFsLXBhbmVsX19iaW8tY29udGVudFxuICAgIHBhZGRpbmc6IDFyZW1cbiAgICBjb2xvcjogJHdoaXRlXG5cbiAgICAmLXRpdGxlXG4gICAgICBjb2xvcjogJHdoaXRlXG4gICAgICBmb250LWZhbWlseTogJHNhbnMtY29uZGVuc2VkLWxpZ2h0XG4gICAgICBmb250LXNpemU6IDNyZW1cbiAgICAgIGxpbmUtaGVpZ2h0OiAxXG4gICAgICBtYXJnaW46IDBcbiAgICAgIHBhZGRpbmctdG9wOiA1cmVtXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlclxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZVxuXG4gICAgICArbWVkaWEoXCI8ZGVza3RvcFwiKVxuICAgICAgICBwYWRkaW5nOiAwXG5cbiAgICAgICttZWRpYShcIjx0YWJsZXRcIilcbiAgICAgICAgZm9udC1zaXplOiAycmVtXG5cbiAgICAgICY6OmFmdGVyXG4gICAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggMCAkY2hhcmNvYWxcbiAgICAgICAgY29udGVudDogXCJcIlxuICAgICAgICBkaXNwbGF5OiBibG9ja1xuICAgICAgICBoZWlnaHQ6IDFweFxuICAgICAgICB3aWR0aDogMTVyZW1cbiAgICAgICAgbWFyZ2luOiAuNzVyZW0gYXV0b1xuXG4gICAgICAgICttZWRpYShcIjw9dGFibGV0XCIpXG4gICAgICAgICAgd2lkdGg6IDEwMCVcblxuICAgICYtc3VidGl0bGVcbiAgICAgIGZvbnQtZmFtaWx5OiAkc2Fucy1jb25kZW5zZWQtbGlnaHRcbiAgICAgIGZvbnQtc2l6ZTogMnJlbVxuICAgICAgcGFkZGluZzogMFxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlXG5cbiAgICAmLW1kXG4gICAgICBjb2xvcjogJGNoYXJjb2FsXG4gICAgICBwYWRkaW5nLWJvdHRvbTogM3JlbVxuXG4gICAgICArbWVkaWEoXCI8PXRhYmxldFwiKVxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMXJlbVxuXG4gICAgICBoM1xuICAgICAgICBmb250LWZhbWlseTogJHNhbnMtY29uZGVuc2VkLWxpZ2h0XG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbVxuICAgICAgICAvL2ZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICBsaW5lLWhlaWdodDogMVxuICAgICAgICBwYWRkaW5nOiAzcmVtIDAgMS41cmVtIDBcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG5cbiAgICAgICAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICAgICAgICBwYWRkaW5nOiAxcmVtIDAgLjVyZW0gMFxuXG4ubm8tY3NzZ3JhZGllbnRzIC5yZXZlYWwtcGFuZWwgLnJldmVhbC1wYW5lbF9fcGljOjphZnRlclxuICBkaXNwbGF5OiBub25lXG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpXG4gIC5yZXZlYWwtcGFuZWxcbiAgICB3aWR0aDogNjAwcHhcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNjAwcHgpXG4gIC5yZXZlYWwtcGFuZWwgLnJldmVhbC1wYW5lbF9fYmlvLWNvbnRlbnRcbiAgICBwYWRkaW5nOiAycmVtXG4gIC5yZXZlYWwtcGFuZWwgLnJldmVhbC1wYW5lbF9fYmlvLWNvbnRlbnQgcFxuICAgIC8vbGluZS1oZWlnaHQ6IDEuNjtcbiAgICBtYXJnaW46IDJyZW0gMFxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweClcbiAgLnJldmVhbC1wYW5lbFxuICAgIGJveC1zaGFkb3c6IC0xMHB4IDAgMTAwcHggJGNoYXJjb2FsXG4gICAgd2lkdGg6IDkwMHB4XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMDBweClcbiAgLnJldmVhbC1wYW5lbCAucmV2ZWFsLXBhbmVsX19waWM6OmFmdGVyXG4gICAgaGVpZ2h0OiAxNTBweFxuICAucmV2ZWFsLXBhbmVsIC5yZXZlYWwtcGFuZWxfX2Jpby1jb250ZW50XG4gICAgcGFkZGluZzogNHJlbVxuICAgIC8vIHdlIG1vdmUgdGhlIGNvbnRlbnQgdXAgc28gdGhlIHRpdGxlIGlzIG92ZXIgdGhlIGNvbG9yIGdyYWRpZW50XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC04MHB4KVxuICAucmV2ZWFsLXBhbmVsIC5yZXZlYWwtcGFuZWxfX2Jpby1jb250ZW50IGgxXG4gICAgLy8gZm9udC1zaXplOiA0MHB4O1xuICAgIC8vIGZvbnQtc2l6ZTogMi41cmVtO1xuICAucmV2ZWFsLXBhbmVsIC5yZXZlYWwtcGFuZWxfX2Jpby1jb250ZW50IHBcbiAgICAvLyBmb250LXNpemU6IDE2cHg7XG4gICAgLy8gZm9udC1zaXplOiAxcmVtO1xuICAubm8tY3NzZ3JhZGllbnRzIC5yZXZlYWwtcGFuZWwgLnJldmVhbC1wYW5lbF9fYmlvLWNvbnRlbnRcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMClcblxuLnJldmVhbC1wYW5lbF9fY2xvc2VcbiAgd2lkdGg6IDc1cHhcbiAgaGVpZ2h0OiA3NXB4XG4gIG92ZXJmbG93OiBoaWRkZW5cbiAgcG9zaXRpb246IGZpeGVkXG4gIHRvcDogMjVweFxuICByaWdodDogMjVweFxuICBiYWNrZ3JvdW5kOiB1cmwoXCIvaW1hZ2VzL3N2Zy9yZXZlYWwtaWNvbi1jbG9zZS5zdmdcIikgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXJcbiAgdGV4dC1pbmRlbnQ6IDEwMCVcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcFxuICB6LWluZGV4OiAzMDAxXG4gIGRpc3BsYXk6IG5vbmVcbiAgJi5pcy12aXNpYmxlXG4gICAgZGlzcGxheTogYmxvY2tcbiAgICBhbmltYXRpb246IHJldmVhbF9fbW92ZS1pbiAwLjhzXG5cbi5yZXZlYWxfX292ZXJsYXlcbiAgcG9zaXRpb246IGFic29sdXRlXG4gIHRvcDogMFxuICBsZWZ0OiAwXG4gIHdpZHRoOiAxMDAlXG4gIGhlaWdodDogMTAwJVxuICBiYWNrZ3JvdW5kOiByZ2JhKCRzdGxvdWlzYmx1ZXMsIDAuOClcbiAgY3Vyc29yOiBwb2ludGVyXG4gIGRpc3BsYXk6IG5vbmVcbiAgei1pbmRleDogMjAwMFxuXG4vLyB4a2V5ZnJhbWVzXG5cbkBrZXlmcmFtZXMgcmV2ZWFsX19mYWRlLWluXG4gIDAlXG4gICAgb3BhY2l0eTogMFxuICAxMDAlXG4gICAgb3BhY2l0eTogMVxuXG5cbkBrZXlmcmFtZXMgcmV2ZWFsX19tb3ZlLWluXG4gIDAlXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMHB4KSByb3RhdGUoMGRlZylcbiAgMTAwJVxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKSByb3RhdGUoNTQwZGVnKVxuIiwiLy8gRmxleEVtYmVkIENPVkVSIEltYWdlIFJhdGlvc1xuXG4vLyBodHRwOi8vbmljb2xhc2dhbGxhZ2hlci5jb20vZmxleGlibGUtY3NzLWNvdmVyLWltYWdlcy9cbi8vIGh0dHA6Ly9jb2RlcGVuLmlvL25lY29sYXMvcGVuL0Frc25pXG4vLyBodHRwOi8vd3d3LnNpdGVwb2ludC5jb20vbWFpbnRhaW4taW1hZ2UtYXNwZWN0LXJhdGlvcy1yZXNwb25zaXZlLXdlYi1kZXNpZ24vXG5cbj1mbGV4RW1iZWQoJGhlaWdodCwgJHJhdGlvKVxuICAvL1JhdGlvcyAlNTAgb3IgJTc1XG4gIGRpc3BsYXk6IGJsb2NrXG4gIG92ZXJmbG93OiBoaWRkZW5cbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJVxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXJcbiAgbWF4LWhlaWdodDogJGhlaWdodFxuICBtYXgtd2lkdGg6IDEwMCVcblxuICAmOjphZnRlclxuICAgIGNvbnRlbnQ6IFwiXCJcbiAgICBkaXNwbGF5OiBibG9ja1xuICAgIHBhZGRpbmctYm90dG9tOiAkcmF0aW9cbiAgICB3aWR0aDogMTAwJVxuXG4vLyBSZWd1bGFyXG4vLyBAaW5jbHVkZSBmbGV4RW1iZWQoNDAwcHgsIDUwJSk7XG5cbi8vIExhcmdlXG4vL0BpbmNsdWRlIGZsZXhFbWJlZCg1NTBweCwgNzUlKTtcbiIsIi8vXG4vLyBJbWFnZSBzdHlsZSBmcm9tIENvZHJvcHNcbi8vIGh0dHA6Ly90eW1wYW51cy5uZXQvY29kcm9wcy8yMDE0LzA2LzE5L2lkZWFzLWZvci1zdWJ0bGUtaG92ZXItZWZmZWN0cy9cbi8vXG5cbi5ncmlkXG4gIG92ZXJmbG93OiBoaWRkZW5cbiAgbWFyZ2luOiAwXG4gIC8vcGFkZGluZzogM3JlbSAwIDAgMDtcbiAgd2lkdGg6IDEwMCVcbiAgbWF4LXdpZHRoOiAxOTIwcHhcbiAgbGlzdC1zdHlsZTogbm9uZVxuICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuLyogQ29tbW9uIHN0eWxlXG4uZ3JpZCBmaWd1cmVcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gIHotaW5kZXg6IDFcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gIG92ZXJmbG93OiBoaWRkZW5cbiAgbWFyZ2luOiAtMC4yM3JlbSAtMC4xNXJlbVxuICB3aWR0aDogNTAlXG4gIGhlaWdodDogNDAwcHhcbiAgYmFja2dyb3VuZDogIzMwODVhM1xuICB0ZXh0LWFsaWduOiBjZW50ZXJcbiAgY3Vyc29yOiBwb2ludGVyXG5cbiAgK21lZGlhKFwiPD10YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuXG4gICttZWRpYShcIjx0YWJsZXRcIilcbiAgICB3aWR0aDogMTAwJVxuICAgIGhlaWdodDogMjAwcHhcblxuLmdyaWQgZmlndXJlIGltZ1xuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgZGlzcGxheTogYmxvY2tcbiAgbWluLWhlaWdodDogMTAwJVxuICBvcGFjaXR5OiAwLjhcblxuLmdyaWQgZmlndXJlIGZpZ2NhcHRpb25cbiAgcGFkZGluZzogMnJlbVxuICBjb2xvcjogJHdoaXRlXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2VcbiAgZm9udC1zaXplOiAxLjI1cmVtXG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuXG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlblxuXG4uZ3JpZCBmaWd1cmUgZmlnY2FwdGlvbjo6YmVmb3JlLFxuLmdyaWQgZmlndXJlIGZpZ2NhcHRpb246OmFmdGVyXG4gIHBvaW50ZXItZXZlbnRzOiBub25lXG5cbi5ncmlkIGZpZ3VyZSBmaWdjYXB0aW9uLFxuLmdyaWQgZmlndXJlIGFcbiAgcG9zaXRpb246IGFic29sdXRlXG4gIHRvcDogMFxuICBsZWZ0OiAwXG4gIHdpZHRoOiAxMDAlXG4gIGhlaWdodDogMTAwJVxuXG4vKiBBbmNob3Igd2lsbCBjb3ZlciB0aGUgd2hvbGUgaXRyZW0gYnkgZGVmYXVsdFxuLyogRm9yIHNvbWUgZWZmZWN0cyBpdCB3aWxsIHNob3cgYXMgYSBidXR0b25cbi5ncmlkIGZpZ3VyZSBhXG4gIHotaW5kZXg6IDEwMDBcbiAgdGV4dC1pbmRlbnQ6IDIwMCVcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcFxuICBmb250LXNpemU6IDBcbiAgb3BhY2l0eTogMFxuXG4uZ3JpZCBmaWd1cmUgaDJcbiAgd29yZC1zcGFjaW5nOiAtMC4xNXJlbVxuICBmb250LXNpemU6IDJyZW1cbiAgZm9udC13ZWlnaHQ6IDMwMFxuXG4gICttZWRpYShcIjx0YWJsZXRcIilcbiAgICBmb250LXNpemU6IDEuNXJlbVxuXG4uZ3JpZCBmaWd1cmUgaDIgc3BhblxuICBmb250LXdlaWdodDogODAwXG5cbi5ncmlkIGZpZ3VyZSBoMixcbi5ncmlkIGZpZ3VyZSBwXG4gIG1hcmdpbjogMFxuXG4uZ3JpZCBmaWd1cmUgcFxuICBsZXR0ZXItc3BhY2luZzogMXB4XG5cbi8qLS0tLS0tLS0tLS0tLS0tXG4vKioqKiogT3NjYXIgKioqKlxuLyotLS0tLS0tLS0tLS0tLS1cblxuZmlndXJlLmVmZmVjdC1vc2NhclxuICBiYWNrZ3JvdW5kOiByZ2JhKCRjYXJkaW5hbHJlZCwgMC44KVxuXG5maWd1cmUuZWZmZWN0LW9zY2FyIGltZ1xuICBvcGFjaXR5OiAwLjlcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMzVzXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zNXNcblxuZmlndXJlLmVmZmVjdC1vc2NhciBmaWdjYXB0aW9uXG4gIHBhZGRpbmc6IDNyZW1cbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkc3Rsb3Vpc2JsdWVzLCAwLjcpXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjM1c1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMzVzXG5cbmZpZ3VyZS5lZmZlY3Qtb3NjYXIgZmlnY2FwdGlvbjo6YmVmb3JlXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICB0b3A6IDMwcHhcbiAgcmlnaHQ6IDMwcHhcbiAgYm90dG9tOiAzMHB4XG4gIGxlZnQ6IDMwcHhcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZmZlxuICBjb250ZW50OiAnJ1xuXG5maWd1cmUuZWZmZWN0LW9zY2FyIGgyXG4gIG1hcmdpbjogMTAlIDAgMTBweCAwXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC4zNXNcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMzVzXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAxMDAlLCAwKVxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDEwMCUsIDApXG5cbmZpZ3VyZS5lZmZlY3Qtb3NjYXIgZmlnY2FwdGlvbjo6YmVmb3JlLFxuZmlndXJlLmVmZmVjdC1vc2NhciBwXG4gIG9wYWNpdHk6IDBcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMzVzLCAtd2Via2l0LXRyYW5zZm9ybSAwLjM1c1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMzVzLCB0cmFuc2Zvcm0gMC4zNXNcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDApXG4gIHRyYW5zZm9ybTogc2NhbGUoMClcblxuZmlndXJlLmVmZmVjdC1vc2Nhcjpob3ZlciBoMlxuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMClcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKVxuXG5maWd1cmUuZWZmZWN0LW9zY2FyOmhvdmVyIGZpZ2NhcHRpb246OmJlZm9yZSxcbmZpZ3VyZS5lZmZlY3Qtb3NjYXI6aG92ZXIgcFxuICBvcGFjaXR5OiAxXG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKVxuICB0cmFuc2Zvcm06IHNjYWxlKDEpXG5cbmZpZ3VyZS5lZmZlY3Qtb3NjYXI6aG92ZXIgZmlnY2FwdGlvblxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDU4LCA1MiwgNDIsIDApXG5cbmZpZ3VyZS5lZmZlY3Qtb3NjYXI6aG92ZXIgaW1nXG4gIG9wYWNpdHk6IDAuMlxuIiwiLy9odHRwOi8vZGF2aWR3YWxzaC5uYW1lL2RlbW8vY3NzLWZsaXAucGhwXG5cbiVmbGlwLWZyb250YmFja1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW5cbiAgdHJhbnNpdGlvbjogMC42c1xuICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZVxuICB0b3A6IDBcbiAgbGVmdDogMFxuXG4lZmxpcC1oZWlnaHQtd2lkdGhcbiAgd2lkdGg6IDI1MHB4XG4gIGhlaWdodDogMjUwcHhcblxuLmZsaXBHYWxsZXJ5XG4gIGJhY2tncm91bmQtY29sb3I6ICRzdGxvdWlzYmx1ZXNcbiAgdGV4dC1hbGlnbjogY2VudGVyXG4gICZfX2hlYWRpbmdcbiAgICArc2VjdGlvbi1oZWFkZXIoJHdoaXRlLCAkd2hpdGUpXG4gICZfX2JveFxuICAgIHBlcnNwZWN0aXZlOiAxMDAwXG4gICAgdHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICAgIG1hcmdpbjogMCAxcHggMXB4IDFweFxuICAgIEBleHRlbmQgJWZsaXAtaGVpZ2h0LXdpZHRoXG4gICAgLyogIFVQREFURUQhIGZsaXAgdGhlIHBhbmUgd2hlbiBob3ZlcmVkXG4gICAgJjpob3ZlciAuZmxpcEdhbGxlcnlfX2JhY2tcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlWSgwZGVnKVxuICAgICY6aG92ZXIgLmZsaXBHYWxsZXJ5X19mcm9udFxuICAgICAgdHJhbnNmb3JtOiByb3RhdGVZKDE4MGRlZylcbiAgJl9fZnJvbnRcbiAgICBAZXh0ZW5kICVmbGlwLWhlaWdodC13aWR0aFxuICAgIC8qIGhpZGUgYmFjayBvZiBwYW5lIGR1cmluZyBzd2FwXG4gICAgQGV4dGVuZCAlZmxpcC1mcm9udGJhY2tcbiAgJl9fYmFja1xuICAgIEBleHRlbmQgJWZsaXAtaGVpZ2h0LXdpZHRoXG4gICAgLyogaGlkZSBiYWNrIG9mIHBhbmUgZHVyaW5nIHN3YXBcbiAgICBAZXh0ZW5kICVmbGlwLWZyb250YmFja1xuICAgIC8qIGJhY2ssIGluaXRpYWxseSBoaWRkZW4gcGFuZVxuICAgIGJhY2tncm91bmQtY29sb3I6ICRnb29leWJ1dHRlclxuICAgIC8vY29sb3I6IHdoaXRlO1xuICAgIGZvbnQtc2l6ZTogMmVtXG4gICAgcGFkZGluZy10b3A6IC41ZW1cbiAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoLTE4MGRlZylcbiAgICAmX19oZWFkaW5nXG4gICAgICBmb250LWZhbWlseTogJHNhbnMtY29uZGVuc2VkLWJvbGRcbiAgICAgIGxpbmUtaGVpZ2h0OiAxXG4gICAgJl9fdGV4dFxuICAgICAgZm9udC1mYW1pbHk6ICRzYW5zLWNvbmRlbnNlZC1saWdodFxuICAvKiBmbGlwIHNwZWVkIGdvZXMgaGVyZVxuICAmX19mbGlwcGVyXG4gICAgdHJhbnNpdGlvbjogMC42c1xuICAgIHRyYW5zZm9ybS1zdHlsZTogcHJlc2VydmUtM2RcbiAgICBwb3NpdGlvbjogcmVsYXRpdmVcbiJdfQ== */